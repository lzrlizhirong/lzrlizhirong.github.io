<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>参差行者</title>
  <subtitle>日积跬步,志在千里</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="http://lzrlizhirong.github.io/"/>
  <updated>2017-03-01T06:10:08.000Z</updated>
  <id>http://lzrlizhirong.github.io/</id>
  
  <author>
    <name>参差行者</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>welcome</title>
    <link href="http://lzrlizhirong.github.io/2117/02/28/welcome/"/>
    <id>http://lzrlizhirong.github.io/2117/02/28/welcome/</id>
    <published>2117-02-28T09:57:09.000Z</published>
    <updated>2017-03-01T06:10:08.000Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/2117/02/28/welcome/../../../../images/stay.png" alt=""></center>

<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/2117/02/28/welcome/../../../../images/stay.png&quot; alt=&quot;&quot;&gt;&lt;/center&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>LeetCode刷题笔记总纲</title>
    <link href="http://lzrlizhirong.github.io/2019/03/29/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BA%B2/"/>
    <id>http://lzrlizhirong.github.io/2019/03/29/LeetCode刷题笔记总纲/</id>
    <published>2019-03-29T07:19:30.000Z</published>
    <updated>2018-03-29T07:48:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录博主LeetCode上刷题的历程，会总结解题思路及难点要点。<br><a id="more"></a></p>
<h3 id="数组类"><a href="#数组类" class="headerlink" title="数组类"></a>数组类</h3><p>1、<a href="http://lizhirong.club/2018/03/29/LeetCode-Two-Sum-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/" target="_blank" rel="external">Two Sum（两数之和）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要记录博主LeetCode上刷题的历程，会总结解题思路及难点要点。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="http://lzrlizhirong.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://lzrlizhirong.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-26.Remove Duplicates from Sorted Array(从排序数组中删除重复项)</title>
    <link href="http://lzrlizhirong.github.io/2018/03/29/LeetCode-Remove-Duplicates-from-Sorted-Array-%E4%BB%8E%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9/"/>
    <id>http://lzrlizhirong.github.io/2018/03/29/LeetCode-Remove-Duplicates-from-Sorted-Array-从排序数组中删除重复项/</id>
    <published>2018-03-29T08:11:46.000Z</published>
    <updated>2018-03-29T08:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><font color="red">题目:</font><br>给定一个有序数组，你需要原地删除其中的重复内容，使每个元素只出现一次,并返回新的长度。<br>不要另外定义一个数组，您必须通过用 O(1) 额外内存原地修改输入的数组来做到这一点。<br><a id="more"></a><br>示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">给定数组: nums = [1,1,2],</div><div class="line">你的函数应该返回新长度 2, 并且原数组nums的前两个元素必须是1和2</div><div class="line">不需要理会新的数组长度后面的元素</div></pre></td></tr></table></figure></p>
<p>英文版：<br>Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.<br>Do not allocate extra space for another array, you must do this in place with constant memory.<br>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Given input array A = [1,1,2],</div><div class="line">Your function should return length = 2, and A is now [1,2].</div></pre></td></tr></table></figure></p>
<p><font color="red">思路：</font><br>这道题要我们从有序数组中去除重复项，和之前那道 Remove Duplicates from Sorted List(移除有序链表中的重复项)的题很类似，但是要简单一些，因为毕竟数组的值可以通过下标直接访问，而链表不行。<br>那么这道题的解题思路是，我们使用快慢指针来记录遍历的坐标，最开始时两个指针都指向第一个数字，如果两个指针指的数字相同，则快指针向前走一步，如果不同，则两个指针都向前走一步，这样当快指针走完整个数组后，慢指针当前的坐标加1就是数组中不同数字的个数.<br>代码如下：</p>
<p><font color="red">解法一：</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">public:</div><div class="line">    int removeDuplicates(vector&lt;int&gt;&amp; nums) &#123;</div><div class="line">        if (nums.length == 0) return 0;</div><div class="line">        int pre = 0, cur = 0, n = nums.length;</div><div class="line">        while (cur &lt; n) &#123;</div><div class="line">            if (nums[pre] == nums[cur]) ++cur;</div><div class="line">            else nums[++pre] = nums[cur++];</div><div class="line">        &#125;</div><div class="line">        return pre + 1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们也可以用for循环来写，这里的j就是上面解法中的pre，i就是cur，所以本质上都是一样的。</p>
<p><font color="red">解法二：</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">class Solution &#123;</div><div class="line">    public int removeDuplicates(int[] nums) &#123; </div><div class="line">        if (nums.length == 0) return 0;</div><div class="line">        int j = 0, n = nums.length;</div><div class="line">        for (int i = 0; i &lt; n; ++i) &#123;</div><div class="line">            if (nums[i] != nums[j]) nums[++j] = nums[i];</div><div class="line">        &#125;</div><div class="line">        return j + 1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><font color="red">类似题目：</font><br>Remove Duplicates from Sorted List<br>Remove Duplicates from Sorted List II<br>Remove Duplicates from Sorted Array II<br>Remove Element</p>
<p><a href="http://lizhirong.club/2019/03/29/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BA%B2/" target="_blank" rel="external"><font color="red">返回LeetCode刷题笔记总纲</font></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font color=&quot;red&quot;&gt;题目:&lt;/font&gt;&lt;br&gt;给定一个有序数组，你需要原地删除其中的重复内容，使每个元素只出现一次,并返回新的长度。&lt;br&gt;不要另外定义一个数组，您必须通过用 O(1) 额外内存原地修改输入的数组来做到这一点。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="http://lzrlizhirong.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://lzrlizhirong.github.io/tags/LeetCode/"/>
    
      <category term="数组" scheme="http://lzrlizhirong.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-1.Two Sum(两数之和)</title>
    <link href="http://lzrlizhirong.github.io/2018/03/29/LeetCode-Two-Sum-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>http://lzrlizhirong.github.io/2018/03/29/LeetCode-Two-Sum-两数之和/</id>
    <published>2018-03-29T07:35:21.000Z</published>
    <updated>2018-03-29T08:19:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.Two Sum(两数之和)</strong></p>
<p><font color="red">题目:</font><br>给定一个整数数列，找出其中和为特定值的那两个数。<br>你可以假设每个输入都只会有一种答案，同样的元素不能被重用。<br><a id="more"></a><br>示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">给定 nums = [2, 7, 11, 15], target = 9</div><div class="line">因为 nums[0] + nums[1] = 2 + 7 = 9</div><div class="line">所以返回 [0, 1]</div></pre></td></tr></table></figure></p>
<p>英文版：<br>Given an array of integers, return indices of the two numbers such that they add up to a specific target.<br>You may assume that each input would have exactly one solution.<br>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Given nums = [2, 7, 11, 15], target = 9,</div><div class="line">Because nums[0] + nums[1] = 2 + 7 = 9,</div><div class="line">return [0, 1].</div></pre></td></tr></table></figure></p>
<p><font color="red">思路：</font><br>这道题一看就知道用暴力搜索肯定没问题，而且猜到OJ肯定不会允许用暴力搜索这么简单的方法，于是去试了一下，果然是Time Limit Exceeded，这个算法的时间复杂度是O(n^2)。<br>那么只能想个O(n)的算法来实现，整个实现步骤为：先遍历一遍数组，建立map数据，然后再遍历一遍，开始查找，找到则记录index。<br>代码如下：</p>
<p><font color="red">解法一：</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public int[] twoSum(int[] nums, int target) &#123;</div><div class="line">        HashMap&lt;Integer, Integer&gt; m = new HashMap&lt;Integer, Integer&gt;();</div><div class="line">        int[] res = new int[2];</div><div class="line">        for (int i = 0; i &lt; nums.length; ++i) &#123;</div><div class="line">            m.put(nums[i], i);</div><div class="line">        &#125;</div><div class="line">        for (int i = 0; i &lt; nums.length; ++i) &#123;</div><div class="line">            int t = target - nums[i];</div><div class="line">            if (m.containsKey(t) &amp;&amp; m.get(t) != i) &#123;</div><div class="line">                res[0] = i;</div><div class="line">                res[1] = m.get(t);</div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>可以写的更加简洁一些，把两个for循环合并成一个。</p>
<p><font color="red">解法二：</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public int[] twoSum(int[] nums, int target) &#123;</div><div class="line">        HashMap&lt;Integer, Integer&gt; m = new HashMap&lt;Integer, Integer&gt;();</div><div class="line">        int[] res = new int[2];</div><div class="line">        for (int i = 0; i &lt; nums.length; ++i) &#123;</div><div class="line">            if (m.containsKey(target - nums[i])) &#123;</div><div class="line">                res[0] = i;</div><div class="line">                res[1] = m.get(target - nums[i]);</div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">            m.put(nums[i], i);</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><font color="red">类似题目：</font><br>4Sum<br>3Sum Smaller<br>3Sum Closest<br>3Sum<br>Two Sum III - Data structure design<br>Two Sum II - Input array is sorted </p>
<p><a href="http://lizhirong.club/2019/03/29/LeetCode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BA%B2/" target="_blank" rel="external"><font color="red">返回LeetCode刷题笔记总纲</font></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1.Two Sum(两数之和)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;red&quot;&gt;题目:&lt;/font&gt;&lt;br&gt;给定一个整数数列，找出其中和为特定值的那两个数。&lt;br&gt;你可以假设每个输入都只会有一种答案，同样的元素不能被重用。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="http://lzrlizhirong.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://lzrlizhirong.github.io/tags/LeetCode/"/>
    
      <category term="数组" scheme="http://lzrlizhirong.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>hexo基础命令</title>
    <link href="http://lzrlizhirong.github.io/2018/03/29/hexo%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>http://lzrlizhirong.github.io/2018/03/29/hexo基础命令/</id>
    <published>2018-03-29T07:09:37.000Z</published>
    <updated>2018-03-29T07:16:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>hexo n “题目” #完整命令为hexo new “题目”,用于新建一篇名为“题目”的文章</p>
<p>hexo g #完整命令为hexo generate,用于生成静态文件</p>
<p>hexo s #完整命令为hexo server,用于启动服务器，主要用来本地预览</p>
<p>hexo d #完整命令为hexo deploy,用于将本地文件发布到github等git仓库上</p>
<p><a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo n “题目” #完整命令为hexo new “题目”,用于新建一篇名为“题目”的文章&lt;/p&gt;
&lt;p&gt;hexo g #完整命令为hexo generate,用于生成静态文件&lt;/p&gt;
&lt;p&gt;hexo s #完整命令为hexo server,用于启动服务器，主要用来本地
    
    </summary>
    
      <category term="hexo" scheme="http://lzrlizhirong.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://lzrlizhirong.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Regular-Expression</title>
    <link href="http://lzrlizhirong.github.io/2017/03/17/Regular-Expression/"/>
    <id>http://lzrlizhirong.github.io/2017/03/17/Regular-Expression/</id>
    <published>2017-03-17T02:40:50.000Z</published>
    <updated>2017-03-17T02:43:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式相关的材料收集，持续更新….<br><a id="more"></a><br><img src="/2017/03/17/Regular-Expression/../../../../images/zz01.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式相关的材料收集，持续更新….&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="正则表达式" scheme="http://lzrlizhirong.github.io/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
      <category term="正则表达式" scheme="http://lzrlizhirong.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>柔软的时光</title>
    <link href="http://lzrlizhirong.github.io/2017/03/03/the-soft-time/"/>
    <id>http://lzrlizhirong.github.io/2017/03/03/the-soft-time/</id>
    <published>2017-03-03T09:32:39.000Z</published>
    <updated>2017-03-03T09:42:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>美，是绝大多数人所向往的。无论是心灵美，还是外在美。</p>
<p>人们都知道多读书能够让人的心灵更美。那外在美呢？人们最常用的方法就是化妆打扮和衣着服饰。</p>
<p>但是这些方式仍然是一种肤浅的外在美。</p>
<p>毕淑敏在她的《柔软的时光》一书中告诉我们，相由心生，追求貌美的最简单方式也还是读书！<br><a id="more"></a><br>做一个美好的人，我相信是绝大多数人的心愿。除了心灵的美好，外表也需美好。</p>
<p>为了这份美好，人们使出了万千手段。比如刀兵相见的整容，比如涂脂抹粉的化妆。为了抚平脸上的皱纹，竟然发明了用肉毒杆菌的毒素在眉眼间注射，让人胆战心惊。</p>
<p>其实，有一个最简单的美容之法，却被人们忽视，那就是读书！</p>
<font color="red">读书让人懂得倾听</font>

<hr>
<p><strong>读书的时候，人是专注的。</strong></p>
<p>因为你在聆听一些高贵的灵魂自言自语，不由自主地谦逊和聚精会神。</p>
<p>即使是读闲书，看到妙处，也会忍不住拍案叫绝……</p>
<p>长久的读书可以使人养成恭敬的习惯，知道这个世界上可以为师的人太多了，在生活中也会沿袭洗耳倾听的姿态。而倾听，是让人神采倍添的绝好方式。</p>
<p>所有的人都渴望被重视，而每一个生命也都不应被忽视。你重视他人，魅力就降临在你的双眸。</p>
<font color="red">读书让人常常微笑</font>

<hr>
<p><strong>读书的时候，常常会会心一笑。</strong></p>
<p>那些智慧和精彩，那些英明与穿透，让我们在惊叹的同时拈页展颜。</p>
<p>微笑是最好的敷粉和装点，微笑可以传达比所有的语言更丰富的善意与温暖。</p>
<font color="red">读书让人心神欢愉</font>

<hr>
<p><strong>书是一座快乐的富矿，储存了大量的浓缩的欢愉因子。</strong></p>
<p>当你静夜抚卷的时候，那些因子如同香氛蒸腾，迷住了你的双眼。</p>
<p>你眉飞色舞，中了蛊似的笑了起来，独享其乐。</p>
<p>也许有人说，我读书的时候，时有哭泣！</p>
<p>这样的哭，其实也是一种广义的微笑，因为灵魂在这一个瞬间舒展，尽情宣泄。</p>
<font color="red">读书让人自知不足</font>

<hr>
<p><strong>读书让我们知道了天地间很多奥秘，而且知道还有更多奥秘，不曾被人揭露，我们就不敢用目空一切的眼神睥睨天下。</strong></p>
<p>你在书籍里看到了无休无止的时间流淌，你就不敢奢侈，不敢口出狂言。</p>
<p>自知是一切美好的基石。当你把他人的聪慧加上你自己的理解，恰如其分地轻轻说出的时候，你的红唇就比任何美丽色彩的涂抹，都更加光艳夺目。</p>
<hr>
<p>你想美好吗？那就读书吧。</p>
<p>不需要花费很多的金钱，但要花费很多的时间。</p>
<p>坚持下去，持之以恒，优美就像五月的花环，某一天飘然而至，簇拥你颈间。</p>
<font color="blue"><strong>一个人静静的捧着一本书，给自己的心灵找个可以栖息的地方，那里是一个春有百花秋有月，夏有凉风冬有雪的地方，是一个可以肆意做梦的地方，一个让你欢喜让你忧的地方……</strong></font>

]]></content>
    
    <summary type="html">
    
      &lt;p&gt;美，是绝大多数人所向往的。无论是心灵美，还是外在美。&lt;/p&gt;
&lt;p&gt;人们都知道多读书能够让人的心灵更美。那外在美呢？人们最常用的方法就是化妆打扮和衣着服饰。&lt;/p&gt;
&lt;p&gt;但是这些方式仍然是一种肤浅的外在美。&lt;/p&gt;
&lt;p&gt;毕淑敏在她的《柔软的时光》一书中告诉我们，相由心生，追求貌美的最简单方式也还是读书！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂文" scheme="http://lzrlizhirong.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="写作" scheme="http://lzrlizhirong.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
      <category term="读后感" scheme="http://lzrlizhirong.github.io/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>从今天开始换一种生活方式--极简生活</title>
    <link href="http://lzrlizhirong.github.io/2017/03/01/minimalist-lifestyle/"/>
    <id>http://lzrlizhirong.github.io/2017/03/01/minimalist-lifestyle/</id>
    <published>2017-02-28T16:33:41.000Z</published>
    <updated>2017-03-01T04:32:44.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<center><strong>一</strong></center>

<hr>
<p>今天3月1日，2017年已悄然流逝六分之一，想想都觉得可怕，你在年初立下的目标有好好在执行吗？ </p>
<p>“断舍离”想必出现在很多人的新年计划清单中，今天，我们来谈谈为什么极简主义生活让人觉得更幸福？</p>
<p>在谈极简主义生活带来的幸福感受之前，得先谈一谈什么是极简主义生活方式。<br><a id="more"></a></p>
<hr>
<center><strong>二</strong></center>

<hr>
<p>极简主义生活方式不仅仅是物质上的极简，同时追求精神上的专注，舍弃不需要的多余的东西，专注在自己真正想要的事情上，从而获得最大的幸福和精神上的自由。看过网上总结的极简主义生活方式，深以为妙：</p>
<font color="red"><strong>欲望、精神极简</strong></font>

<p><strong>了解自己的真实欲望，不受外界影响，不盲从，不跟风。</strong></p>
<p>把自己的精力集中在自己最迫切的欲望上，要清楚自己内心真正想要的东西，放弃其他无用的欲望，不要浪费时间在不值得的人和事情上。专注在自己真正想从事的精神活动中，把时间和精力放在提升自我上。</p>
<font color="red"><strong>物质极简</strong></font>

<p>把超过一年不用的物品丢弃、送人、出售或者捐赠掉，例如看过的杂志、书、不再穿的衣服等。在日常生活中，买东西前，先想想是不是真的需要，不囤东西，不花冤枉钱，也不要为了省钱买便宜货、次品，不重复购买。</p>
<font color="red"><strong>信息极简</strong></font>

<p><strong>减少花在社交网络上的时间</strong>，少刷微博和朋友圈。</p>
<p>不关注与自己无关八卦新闻。</p>
<p>关注要少而精，删除长期不打开的App</p>
<font color="red"><strong>表达极简</strong></font>

<p><strong>不走套路，直截了当。</strong></p>
<font color="red"><strong>工作极简</strong></font>

<p><strong>不拖延、不拖延、不拖延</strong></p>
<p>一次只专注一件事</p>
<p>学会管理时间，提高做事效率</p>
<font color="red"><strong>生活极简</strong></font>

<p><strong>慢点、慢点、再慢点</strong></p>
<p><strong>静点、静点、再静点</strong></p>
<p>在慢生活中感受当下生活</p>
<p>不参与无效社交</p>
<p>坚持健身、锻炼，养成习惯</p>
<p>健康饮食</p>
<hr>
<center><strong>三</strong></center>

<hr>
<p>极简主义生活方式给了我们重新审视自己与物品和周边环境的关系，顺便整理内心的垃圾。</p>
<p>蛮欲缭身，何以解脱？唯断、舍、离。被欲望左右的人，总是在计较得失中与幸福失之交臂。</p>
<p>想要幸福生活，当从断绝一切不需之物开始，当你拥有的东西变少后，就不需要花大量时间在整理和清洁工作上，你的生活也变得更加简单高效起来，通过不断清理生活中不必要的东西，你会越来越清楚自己真正想要的是什么。</p>
<p>不再是物质的奴隶，极低的物欲让你有更多的时间静下心专注检视自己的精神世界。</p>
<p>极简的社交生活让你有更多的时间花在跟自己相处上，同时与另一半、家人或者好友相处的质量也能得到提高，舍弃无用社交，<strong>有缘即往无缘即去，一任清风送白云</strong>。</p>
<p>现在很多人跟朋友聚会或者旅行，目光都是停留在手机上的，我们都活在网络里，而忘了切身去领略和感受生活本身之美。</p>
<p>生活中没有任何不必要的杂物和杂事，就只有你真正需要的东西相伴，会让你的生活更轻松、充实、幸福。</p>
<p><strong>从今天起，过一种简单的生活，做一个简单的人</strong>，把时间和精力投入在自己真正喜欢的事情上，重新认识自我，用心感受生活之美、发现生命的无限可能。</p>
<hr>
<p>end</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;center&gt;&lt;strong&gt;一&lt;/strong&gt;&lt;/center&gt;

&lt;hr&gt;
&lt;p&gt;今天3月1日，2017年已悄然流逝六分之一，想想都觉得可怕，你在年初立下的目标有好好在执行吗？ &lt;/p&gt;
&lt;p&gt;“断舍离”想必出现在很多人的新年计划清单中，今天，我们来谈谈为什么极简主义生活让人觉得更幸福？&lt;/p&gt;
&lt;p&gt;在谈极简主义生活带来的幸福感受之前，得先谈一谈什么是极简主义生活方式。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂文" scheme="http://lzrlizhirong.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="写作" scheme="http://lzrlizhirong.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>SQL优化大全</title>
    <link href="http://lzrlizhirong.github.io/2017/02/28/make-SQL-to-be-better/"/>
    <id>http://lzrlizhirong.github.io/2017/02/28/make-SQL-to-be-better/</id>
    <published>2017-02-28T02:36:31.000Z</published>
    <updated>2017-02-28T04:02:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-优化SQL步骤"><a href="#1-优化SQL步骤" class="headerlink" title="1. 优化SQL步骤"></a>1. 优化SQL步骤</h1><hr>
<h2 id="1-1-通过-show-status和应用特点了解各种-SQL的执行频率"><a href="#1-1-通过-show-status和应用特点了解各种-SQL的执行频率" class="headerlink" title="1.1. 通过 show status和应用特点了解各种 SQL的执行频率"></a><font color="blue">1.1. 通过 show status和应用特点了解各种 SQL的执行频率</font></h2><p>　　通过 SHOW STATUS 可以提供服务器状态信息，也可以使用 mysqladmin extende d-status 命令获得。 SHOW STATUS 可以根据需要显示 session 级别的统计结果和 global级别的统计结果。<br>　　如显示当前session： <strong><em><font color="red">SHOW STATUS like “Com_%”; 全局级别：show global status;</font></em></strong><br><a id="more"></a><br>以下几个参数对 Myisam 和 Innodb 存储引擎都计数：</p>
<blockquote>
<ol>
<li>Com_select 执行 select 操作的次数，一次查询只累加 1 ；</li>
<li>Com_insert 执行 insert 操作的次数，对于批量插入的 insert 操作，只累加一次 ；</li>
<li>Com_update 执行 update 操作的次数；</li>
<li>Com_delete 执行 delete 操作的次数；</li>
</ol>
</blockquote>
<p>以下几个参数是针对 Innodb 存储引擎计数的，累加的算法也略有不同：</p>
<blockquote>
<ol>
<li>Innodb_rows_read select 查询返回的行数；</li>
<li>Innodb_rows_inserted 执行 Insert 操作插入的行数；</li>
<li>Innodb_rows_updated 执行 update 操作更新的行数；</li>
<li>Innodb_rows_deleted 执行 delete 操作删除的行数；</li>
</ol>
</blockquote>
<p>　　通过以上几个参数，可以很容易的了解当前数据库的应用是以插入更新为主还 是以查询操作为主，以及各种类型的 SQL大致的执行比例是多少。对于更新操作的计 数，是对执行次数的计数，不论提交还是回滚都会累加。<br>　　对于事务型的应用，通过 Com_commit 和 Com_rollback 可以了解事务提交和回 滚的情况，对于回滚操作非常频繁的数据库，可能意味着应用编写存在问题。此外，以下几个参数便于我们了解数据库的基本情况：</p>
<blockquote>
<ol>
<li>Connections 试图连接 MySQL 服务器的次数</li>
<li>Uptime 服务器工作时间</li>
<li>Slow_queries 慢查询的次数</li>
</ol>
</blockquote>
<h2 id="1-2-定位执行效率较低的SQL语句"><a href="#1-2-定位执行效率较低的SQL语句" class="headerlink" title="1.2. 定位执行效率较低的SQL语句"></a><font color="blue">1.2. 定位执行效率较低的SQL语句</font></h2><p>　　可以通过以下两种方式定位执行效率较低的 SQL 语句：</p>
<blockquote>
<ol>
<li><strong><font color="green">可以通过慢查询日志定位那些执行效率较低的 sql 语句</font></strong>，用 –log-slow-queries[=file_name] 选项启动时， mysqld 写一个包含所有执行时间超过long_query_time 秒的 SQL 语句的日志文件。可以链接到管理维护中的相关章节。</li>
<li><strong><font color="green">使用 show processlist查看当前MYSQL的线程</font></strong>，命令慢查询日志在查询结束以后才纪录，所以在应用反映执行效率出现问题的时候查 询慢查询日志并不能定位问题，可以使用 show processlist 命令查看当前 MySQL 在进行的线程，包括线程的状态，是否锁表等等，可以实时的查看 SQL 执行情况， 同时对一些锁表操作进行优化。</li>
</ol>
</blockquote>
<h2 id="1-3-通过EXPLAIN-分析低效-SQL的执行计划："><a href="#1-3-通过EXPLAIN-分析低效-SQL的执行计划：" class="headerlink" title="1.3. 通过EXPLAIN 分析低效 SQL的执行计划："></a><font color="blue">1.3. 通过EXPLAIN 分析低效 SQL的执行计划：</font></h2><p>　　通过以上步骤查询到效率低的 SQL 后，我们可以通过 explain 或者 desc 获取MySQL 如何执行 SELECT 语句的信息，包括 select 语句执行过程表如何连接和连接 的次序。</p>
<h1 id="2-MySQL索引"><a href="#2-MySQL索引" class="headerlink" title="2. MySQL索引"></a>2. MySQL索引</h1><hr>
<h2 id="2-1-mysql如何使用索引"><a href="#2-1-mysql如何使用索引" class="headerlink" title="2.1. mysql如何使用索引"></a><font color="blue">2.1. mysql如何使用索引</font></h2><p>　　索引用于快速找出在某个列中有一特定值的行。对相关列使用索引是提高SELECT 操作性能的最佳途径。<br>　　查询要使用索引最主要的条件是查询条件中需要使用索引关键字，如果是多列 索引，那么只有查询条件使用了多列关键字最左边的前缀时（<font color="red">前缀索引</font>），才可以使用索引，否则 将不能使用索引。<br>　　下列情况下， Mysql 不会使用已有的索引：</p>
<blockquote>
<p>1、如果 mysql 估计使用索引比全表扫描更慢，则不使用索引。例如：如果 key_part 1均匀分布在 1 和 100 之间，下列查询中使用索引就不是很好：<code>SELECT * FROM table_name where key_part1 &gt; 1 and key_part1 &lt; 90</code><br>2、如果使用 heap 表并且 where 条件中不用＝索引列，<font color="red">其他 &gt; 、 &lt; 、 &gt;= 、 &lt;= 均不使 用索引（MyISAM和innodb表使用索引）</font>；<br>3、使用or分割的条件，如果or前的条件中的列有索引，后面的列中没有索引，那么涉及到的索引都不会使用。<br>4、如果创建复合索引，如果条件中使用的列不是索引列的第一部分；<font color="red">（不是前缀索引）</font><br>5、<font color="red">如果 like 是以％开始</font>；<br>6、对 where 后边条件为字符串的一定要加引号，字符串如果为数字 mysql 会自动转 为字符串，但是不使用索引。</p>
</blockquote>
<h2 id="2-2-查看索引使用情况"><a href="#2-2-查看索引使用情况" class="headerlink" title="2.2. 查看索引使用情况"></a><font color="blue">2.2. 查看索引使用情况</font></h2><p>　　如果索引正在工作， Handler_read_key 的值将很高，这个值代表了一个行被索引值读的次数，很低的值表明增加索引得到的性能改善不高，因为索引并不经常使 用。<br>　　Handler_read_rnd_next 的值高则意味着查询运行低效，并且应该建立索引补救。这个值的含义是在数据文件中读下一行的请求数。如果你正进行大量的表扫描，<br>　　该值较高。通常说明表索引不正确或写入的查询没有利用索引。<br>　　语法：<br>　　<font color="red">mysql&gt; show status like ‘Handler_read%’;</font></p>
<h1 id="3-具体优化查询语句"><a href="#3-具体优化查询语句" class="headerlink" title="3. 具体优化查询语句"></a>3. 具体优化查询语句</h1><hr>
<h2 id="1-避免全表扫描"><a href="#1-避免全表扫描" class="headerlink" title="1. 避免全表扫描"></a><font color="blue">1. 避免全表扫描</font></h2><hr>
<p>　　对查询进行优化，应尽量避免全表扫描，首先应考虑在 <font color="red">where 及 order by 涉及的列上建立索引</font></p>
<ul>
<li>尝试下面的技巧以避免优化器错选了表扫描：</li>
<li>使用ANALYZE TABLEtbl_name为扫描的表更新关键字分布。</li>
<li>对扫描的表使用FORCEINDEX告知MySQL，相对于使用给定的索引表扫描将非常耗时。<font color="red">SELECT * FROM t1, t2 FORCE INDEX (index_for_column)   WHERE t1.col_name=t2.col_name；</font></li>
<li>用<strong>–max-seeks-for-key=1000</strong>选项启动<strong>mysqld</strong>或使用<strong>SET max_seeks_for_key=1000</strong>告知优化器假设关键字扫描不会超过1,000次关键字搜索。</li>
</ul>
<h3 id="1-where中避免null值判断"><a href="#1-where中避免null值判断" class="headerlink" title="1). where中避免null值判断"></a><font color="red">1). where中避免null值判断</font></h3><p>　　否则将导致引擎放弃使用索引而进行全表扫描，如：<code>select id from t where num is null</code><br>　　NULL对于大多数数据库都需要特殊处理，MySQL也不例外，它需要更多的代码，更多的检查和特殊的索引逻辑，有些开发人员完全没有意识到，创建表时NULL是默认值，但大多数时候应该使用NOT NULL，或者使用一个特殊的值，如0，-1作为默  认值。<br>　　不能用null作索引，任何包含null值的列都将不会被包含在索引中。即使索引有多列这样的情况下，只要这些列中有一列含有null，该列    就会从索引中排除。也就是说如果某列存在空值，即使对该列建索引也不会提高性能。 任何在where子句中使用is null或is not null的语句优化器是不允许使用索引的。<br>　　此例可以在num上设置默认值0，确保表中num列没有null值，然后这样查询： <code>select id    from t where num=0</code></p>
<h3 id="2-where中避免-或-lt-gt-操作符"><a href="#2-where中避免-或-lt-gt-操作符" class="headerlink" title="2).where中避免!=或&lt;&gt;操作符"></a><font color="red">2).where中避免!=或&lt;&gt;操作符</font></h3><p>　　否则将引擎放弃使用索引而进行全表扫描。<br>　　MySQL只有对以下操作符才使用索引：<font color="orange">&lt;，&lt;=，=，&gt;，&gt;=，BETWEEN，IN，以及某些时候的LIKE。 </font><br>　　可以在LIKE操作中使用索引的情形是指另一个操作数不是以<font color="orange">通配符（%或者_）开头</font>的情形。例如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT id FROM  t WHERE col LIKE &apos;Mich%&apos;; #  这个查询将使用索引，</div><div class="line">SELECT id FROM  t WHERE col  LIKE &apos;%ike&apos;;   #这个查询不会使用索引。</div></pre></td></tr></table></figure></p>
<h3 id="3-where中避免or"><a href="#3-where中避免or" class="headerlink" title="3).where中避免or"></a><font color="red">3).where中避免or</font></h3><p>　　否则将导致引擎放弃使用索引而进行全表扫描，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select id from t where num=10 or num=20</div></pre></td></tr></table></figure></p>
<p>　　可以使用<font color="green">UNION</font>合并查询：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　select id from t where num=10 union all select id from t where num=20</div></pre></td></tr></table></figure></p>
<p>　　在某些情况下，<font color="green">or条件</font>可以避免全表扫描的。</p>
<blockquote>
<p>1 .where 语句里面如果带有or条件, myisam表能用到索引， innodb不行。<br>2 .必须所有的or条件都必须是独立索引           </p>
</blockquote>
<h3 id="4-in和not-in会导致全表扫描"><a href="#4-in和not-in会导致全表扫描" class="headerlink" title="4) .in和not in会导致全表扫描"></a><font color="red">4) .in和not in会导致全表扫描</font></h3><p>　　如：<font color="green">select id from t where num in(1,2,3)</font><br>对于连续的数值，<font color="red">能用 between 就不要用 in ：</font><font color="green">Select id from t where num between 1 and 3</font></p>
<h3 id="5-下面的查询也将导致全表扫描："><a href="#5-下面的查询也将导致全表扫描：" class="headerlink" title="5).下面的查询也将导致全表扫描："></a><font color="red">5).下面的查询也将导致全表扫描：</font></h3><ul>
<li>select id from t where name like <font color="blue">‘%abc%’</font></li>
<li>select id from t where name like <font color="blue">‘%abc’</font></li>
</ul>
<p>　　若要提高效率，可以考虑全文检索。<br>　　而select id from t where name like <font color="blue">‘abc%’ </font>才用到索引</p>
<h3 id="6-where中使用参数，也会导致全表扫描"><a href="#6-where中使用参数，也会导致全表扫描" class="headerlink" title="6).where中使用参数，也会导致全表扫描"></a><font color="red">6).where中使用参数，也会导致全表扫描</font></h3><p>　　因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推 迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<br>　　<font color="green">select id from t where num=@num </font><br>可以改为强制查询使用索引：<br>　　<font color="green">select id from t with(index(索引名)) where num=@num</font></p>
<h3 id="7-where中避免对字段进行表达式操作"><a href="#7-where中避免对字段进行表达式操作" class="headerlink" title="7). where中避免对字段进行表达式操作"></a><font color="red">7). where中避免对字段进行表达式操作</font></h3><p>　　这将导致引擎放弃使用索引而进行全表扫描。如：<font color="green">select id from t where num/2=100</font><br>　　应改为:  <font color="green">select id from t where num=100*2</font></p>
<h3 id="8-where中避免对字段进行函数操作"><a href="#8-where中避免对字段进行函数操作" class="headerlink" title="8). where中避免对字段进行函数操作"></a><font color="red">8). where中避免对字段进行函数操作</font></h3><p>　　这将导致引擎放弃使用索引而进行全表扫描。如：</p>
<font color="green">select id from t where substring(name,1,3)=’abc’  –name</font><br><font color="green">select id from t where datediff(day,createdate,’2005-11-30’)=0–‘2005-11-30’ </font><br>　　生成的id 应改为:<br><font color="green">select id from t where name like ‘abc%’</font><br><font color="green">select id from t where createdate&gt;=’2005-11-30’ and createdate&lt;’2005-12-1’</font>

<h3 id="9-where子句避免“-”左边进行函数、算术运算或其他表达式运算"><a href="#9-where子句避免“-”左边进行函数、算术运算或其他表达式运算" class="headerlink" title="9).where子句避免“=”左边进行函数、算术运算或其他表达式运算"></a><font color="red">9).where子句避免“=”左边进行函数、算术运算或其他表达式运算</font></h3><p>　　否则系统将可能无法正确使用索引。</p>
<h3 id="10-索引字段不是复合索引的前缀索引"><a href="#10-索引字段不是复合索引的前缀索引" class="headerlink" title="10). 索引字段不是复合索引的前缀索引"></a><font color="red">10). 索引字段不是复合索引的前缀索引</font></h3><p>　　例如 在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。</p>
<h2 id="2-其他一些注意优化"><a href="#2-其他一些注意优化" class="headerlink" title="2 .其他一些注意优化"></a><font color="blue">2 .其他一些注意优化</font></h2><hr>
<h3 id="1-不要写一些没有意义的查询"><a href="#1-不要写一些没有意义的查询" class="headerlink" title="1). 不要写一些没有意义的查询"></a><font color="red">1). 不要写一些没有意义的查询</font></h3><p>　　如需要生成一个空表结构：<br>　　<font color="green">select col1,col2 into #t from t where 1=0</font><br>　　这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：<font color="green">create table #t(…)</font></p>
<h3 id="2-很多时候用-exists-代替-in-是一个好的选择"><a href="#2-很多时候用-exists-代替-in-是一个好的选择" class="headerlink" title="2). 很多时候用 exists 代替 in 是一个好的选择"></a><font color="red">2). 很多时候用 exists 代替 in 是一个好的选择</font></h3><p>　　<font color="green">select num from a where num in(select num from b)</font><br>　　用下面的语句替换：<br>　　<font color="green">select num from a where exists(select 1 from b where num=a.num)</font></p>
<h3 id="3-并不是所有索引对查询都有效"><a href="#3-并不是所有索引对查询都有效" class="headerlink" title="3). 并不是所有索引对查询都有效"></a><font color="red">3). 并不是所有索引对查询都有效</font></h3><p>　　SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。</p>
<h3 id="4-索引并不是越多越好"><a href="#4-索引并不是越多越好" class="headerlink" title="4). 索引并不是越多越好"></a><font color="red">4). 索引并不是越多越好</font></h3><p>　　索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。</p>
<h3 id="5-避免更新-clustered-索引数据列"><a href="#5-避免更新-clustered-索引数据列" class="headerlink" title="5).避免更新 clustered 索引数据列"></a><font color="red">5).避免更新 clustered 索引数据列</font></h3><p>　　因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。</p>
<h3 id="6-尽量使用数字型字段"><a href="#6-尽量使用数字型字段" class="headerlink" title="6).尽量使用数字型字段"></a><font color="red">6).尽量使用数字型字段</font></h3><p>　　若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</p>
<h3 id="7-使用-varchar-nvarchar-代替-char-nchar"><a href="#7-使用-varchar-nvarchar-代替-char-nchar" class="headerlink" title="7).使用 varchar/nvarchar 代替 char/nchar "></a><font color="red">7).使用 varchar/nvarchar 代替 char/nchar </font></h3><p>　　因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</p>
<h3 id="8-避免“-“返回所有"><a href="#8-避免“-“返回所有" class="headerlink" title="8).避免“*“返回所有 "></a><font color="red">8).避免“*“返回所有 </font></h3><p>　　用具体的字段列表代替“*”，不要返回用不到的任何字段。</p>
<h2 id="3-临时表的问题"><a href="#3-临时表的问题" class="headerlink" title="3. 临时表的问题"></a><font color="blue">3. 临时表的问题</font></h2><hr>
<h3 id="1-尽量使用表变量来代替临时表"><a href="#1-尽量使用表变量来代替临时表" class="headerlink" title="1). 尽量使用表变量来代替临时表"></a><font color="red">1). 尽量使用表变量来代替临时表</font></h3><p>　　如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。 </p>
<h3 id="2-避免频繁创建和删除临时表，以减少系统表资源的消耗"><a href="#2-避免频繁创建和删除临时表，以减少系统表资源的消耗" class="headerlink" title="2).避免频繁创建和删除临时表，以减少系统表资源的消耗"></a><font color="red">2).避免频繁创建和删除临时表，以减少系统表资源的消耗</font></h3><h3 id="3-临时表并不是不可使用"><a href="#3-临时表并不是不可使用" class="headerlink" title="3).临时表并不是不可使用"></a><font color="red">3).临时表并不是不可使用</font></h3><p>　　适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。</p>
<h3 id="4-避免造成大量-log"><a href="#4-避免造成大量-log" class="headerlink" title="4).避免造成大量 log"></a><font color="red">4).避免造成大量 log</font></h3><p>　　如：在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度<br>　　如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。</p>
<h3 id="5-及时删除临时表"><a href="#5-及时删除临时表" class="headerlink" title="5). 及时删除临时表"></a><font color="red">5). 及时删除临时表</font></h3><p>　　如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。</p>
<h2 id="4-游标的问题"><a href="#4-游标的问题" class="headerlink" title="4. 游标的问题"></a><font color="blue">4. 游标的问题</font></h2><hr>
<h3 id="1-尽量避免使用游标"><a href="#1-尽量避免使用游标" class="headerlink" title="1).尽量避免使用游标"></a><font color="red">1).尽量避免使用游标</font></h3><p>　　因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。 </p>
<h3 id="2-使用基于游标的方法或临时表方法之前"><a href="#2-使用基于游标的方法或临时表方法之前" class="headerlink" title="2).使用基于游标的方法或临时表方法之前"></a><font color="red">2).使用基于游标的方法或临时表方法之前</font></h3><p>　　应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。</p>
<h3 id="3-游标并不是不可使用"><a href="#3-游标并不是不可使用" class="headerlink" title="3).游标并不是不可使用"></a><font color="red">3).游标并不是不可使用</font></h3><p>　　对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。</p>
<h3 id="4-存储过程和触发器"><a href="#4-存储过程和触发器" class="headerlink" title="4).存储过程和触发器"></a><font color="red">4).存储过程和触发器</font></h3><p>　　在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。<br>　　无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。</p>
<h2 id="5-事务的问题"><a href="#5-事务的问题" class="headerlink" title="5. 事务的问题"></a><font color="blue">5. 事务的问题</font></h2><hr>
<h3 id="1-尽量避免大事务操作，提高系统并发能力。"><a href="#1-尽量避免大事务操作，提高系统并发能力。" class="headerlink" title="1).尽量避免大事务操作，提高系统并发能力。"></a><font color="red">1).尽量避免大事务操作，提高系统并发能力。</font></h3><h2 id="6-数据量的问题"><a href="#6-数据量的问题" class="headerlink" title="6. 数据量的问题"></a><font color="blue">6. 数据量的问题</font></h2><hr>
<h3 id="1-尽量避免向客户端返回大数据量"><a href="#1-尽量避免向客户端返回大数据量" class="headerlink" title="1).尽量避免向客户端返回大数据量"></a><font color="red">1).尽量避免向客户端返回大数据量</font></h3><p>　　尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</p>
<h2 id="7-COUNT优化"><a href="#7-COUNT优化" class="headerlink" title="7. COUNT优化"></a><font color="blue">7. COUNT优化</font></h2><hr>
<h3 id="1-count-优于count-1-和count-primary-key"><a href="#1-count-优于count-1-和count-primary-key" class="headerlink" title="1) count(*) 优于count(1)和count(primary_key)"></a><font color="red">1) count(*) 优于count(1)和count(primary_key)</font></h3><p>　　很多人为了统计记录条数，就使用 count(1) 和 count(primary_key) 而不是 count(*) ，他们认为这样性能更好，其实这是一个误区。对于有些场景，这样做可能性能会更差，应为数据库对 count(*) 计数操作做了一些特别的优化。</p>
<h3 id="2）count-column-和-count-是不一样的"><a href="#2）count-column-和-count-是不一样的" class="headerlink" title="2）count(column) 和 count(*) 是不一样的"></a><font color="red">2）count(column) 和 count(*) 是不一样的</font></h3><p>　　这个误区甚至在很多的资深工程师或者是 DBA 中都普遍存在，很多人都会认为这是理所当然的。实际上，count(column) 和 count(*) 是一个完全不一样的操作，所代表的意义也完全不一样。<br>　　count(column) 是表示结果集中有多少个column字段不为空的记录<br>　　count(*) 是表示整个结果集有多少条记录</p>
<h2 id="8-优化order-by语句"><a href="#8-优化order-by语句" class="headerlink" title="8. 优化order by语句"></a><font color="blue">8. 优化order by语句</font></h2><hr>
<p>　　<font color="red">基于索引的排序</font><br>　　MySQL的弱点之一是它的排序。虽然MySQL可以在1秒中查询大约15,000条记录，但由于MySQL在查询时最多只能使用一个索引。因此，如果WHERE条件已经占用了索引，那么在排序中就不使用索引了，这将大大降低查询的速度。我们可以看看如下的SQL语句:<br>　　<font color="green">SELECT * FROM SALES WHERE NAME = “name” ORDER BY SALE_DATE DESC;</font><br>　　在以上的SQL的WHERE子句中已经使用了NAME字段上的索引，因此，在对SALE_DATE进行排序时将不再使用索引。为了解决这个问题，我们可以对SALES表建立复合索引:<br>　　<font color="green">ALTER TABLE SALES DROP INDEX NAME, ADD INDEX (NAME,SALE_DATE)</font><br>　　这样再使用上述的SELECT语句进行查询时速度就会大副提升。但要注意，在使用这个方法时，要确保WHERE子句中没有排序字段，在上例中就是不能用SALE_DATE进行查询，否则虽然排序快了，但是SALE_DATE字段上没有单独的索引，因此查询又会慢下来。</p>
<p>　　在某些情况中， MySQL可以使用一个索引来满足 ORDER BY子句，而不需要额外的排序。 where条件和order by使用相同的索引，并且order by 的顺序和索引顺序相 同，并且order by的字段都是升序或者都是降序。例如：下列sql可以使用索引。</p>
<p>　　<font color="green">SELECT <em> FROM t1 ORDER BY key_part1,key_part2,… ;</em></font><br>　　<font color="green">SELECT  FROM t1 WHERE key_part1=1 ORDER BY key_part1 DESC, key_part2 DESC;</font><br>　　<font color="green">SELECT <em> FROM t1 ORDER BY key_part1 DESC, key_part2 DESC;</em></font><br>　　但是以下情况不使用索引：<br>　　<font color="green">SELECT  FROM t1 ORDER BY key_part1 DESC, key_part2 ASC ； –order by 的字段混合 ASC 和 DESC</font><br>　　<font color="green">SELECT <em> FROM t1 WHERE key2=constant ORDER BY key1 ；</em></font>– 用于查询行的关键字与 ORDER BY 中所使用的不相同<br>　　<font color="green">SELECT  FROM t1 ORDER BY key1, key2 ；</font>– 对不同的关键字使用 ORDER BY ：</p>
<h2 id="9-优化GROUP-BY"><a href="#9-优化GROUP-BY" class="headerlink" title="9. 优化GROUP BY"></a><font color="blue">9. 优化GROUP BY</font></h2><hr>
<p>　　默认情况下， MySQL 排序所有 GROUP BY col1 ， col2 ， …. 。查询的方法如同在查询中指定 ORDER BY col1 ， col2 ， … 。如果显式包括一个包含相同的列的 ORDER BY<br>子句， MySQL 可以毫不减速地对它进行优化，尽管仍然进行排序。如果查询包括 GROUP BY 但你想要避免排序结果的消耗，你可以指定 ORDER BY NULL禁止排序。<br>　　例如 ：<br>　　<font color="green">INSERT INTO foo  SELECT a, COUNT(*) FROM bar GROUP BY a ORDER BY NULL;</font></p>
<h2 id="10-优化-OR"><a href="#10-优化-OR" class="headerlink" title="10. 优化 OR "></a><font color="blue">10. 优化 OR </font></h2><hr>
<p>具体详解看：<strong><a href="">mysql or条件可以使用索引而避免全表</a></strong> </p>
<h1 id="4-SQL核心语句-非常实用的几个技巧"><a href="#4-SQL核心语句-非常实用的几个技巧" class="headerlink" title="4. SQL核心语句(非常实用的几个技巧)"></a>4. SQL核心语句(非常实用的几个技巧)</h1><hr>
<h2 id="1-插入数据"><a href="#1-插入数据" class="headerlink" title="1) 插入数据"></a>1) 插入数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">INSERT mytable (first_column,second_column,third_column)  </div><div class="line">VALUES (&apos;some data&apos;,&apos;some more data&apos;,&apos;yet more data&apos;) ,  </div><div class="line">VALUES (&apos;some data&apos;,&apos;some more data&apos;,&apos;yet more data&apos;) ,  </div><div class="line">VALUES (&apos;some data&apos;,&apos;some more data&apos;,&apos;yet more data&apos;)</div></pre></td></tr></table></figure>
<h2 id="2）-清空数据表"><a href="#2）-清空数据表" class="headerlink" title="2）.清空数据表"></a>2）.清空数据表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TRUNCATE TABLE  `mytable`</div></pre></td></tr></table></figure>
<p><font color="red">注意：</font>删除表中的所有记录，应使用TRUNCATE TABLE语句。注意这里为什么要用TRUNCATE TABLE语句代替DELETE语句:当你使用TRUNCATE TABLE语句时，记录的删除是不作记录的。也就是说，这意味着TRUNCATE TABLE要比DELETE快得多。</p>
<h2 id="3）用SELECT创建记录和表"><a href="#3）用SELECT创建记录和表" class="headerlink" title="3）用SELECT创建记录和表"></a>3）用SELECT创建记录和表</h2><p> 　　INSERT语句与DELETE语句和UPDATE语句有一点不同，它一次只操作一个记录。然而，有一个方法可以使INSERT 语句一次添加多个记录。要作到这一点，你需要把INSERT语句与SELECT语句结合起来，象这样:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT mytable(first_column,second_column)  </div><div class="line">SELECT another_first,another_second  FROM anothertable WHERE another_first=&apos;Copy Me!&apos;;</div></pre></td></tr></table></figure></p>
<p> 　　这个语句从anothertable拷贝记录到mytable.只有表anothertable中字段another_first的值为’Copy Me!’的记录才被拷贝。<br>　　当为一个表中的记录建立备份时，这种形式的INSERT语句是非常有用的。在删除一个表中的记录之前，你可以先用这种方法把它们拷贝到另一个表中。<br>　　如果你需要拷贝整个表，你可以使用SELECT INTO语句。例如，下面的语句创建了一个名为newtable的新表，该表包含表mytable的所有数据:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * INTO newtable FROM mytable;</div></pre></td></tr></table></figure></p>
<p>　　你也可以指定只有特定的字段被用来创建这个新表。要做到这一点，只需在字段列表中指定你想要拷贝的字段。另外，你可以使用WHERE子句来限制拷贝到新表中的记录。下面的例子只拷贝字段second_columnd的值等于’Copy Me!’的记录的first_column字段。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT first_column INTO newtable  </div><div class="line">FROM mytable  </div><div class="line">WHERE second_column=&apos;Copy Me!&apos;;</div></pre></td></tr></table></figure></p>
<p> 　　使用SQL修改已经建立的表是很困难的。例如，如果你向一个表中添加了一个字段，没有容易的办法来去除它。另外，如果你不小心把一个字段的数据类型给错了，你将没有办法改变它。但是，使用本节中讲述的SQL语句，你可以绕过这两个问题。<br>　　例如，假设你想从一个表中删除一个字段。使用SELECT INTO语句，你可以创建该表的一个拷贝，但不包含要删除的字段。这使你既删除了该字段，又保留了不想删除的数据。<br>　　如果你想改变一个字段的数据类型，你可以创建一个包含正确数据类型字段的新表。创建好该表后，你就可以结合使用UPDATE语句和SELECT语句，把原来表中的所有数据拷贝到新表中。通过这种方法，你既可以修改表的结构，又能保存原有的数据。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-优化SQL步骤&quot;&gt;&lt;a href=&quot;#1-优化SQL步骤&quot; class=&quot;headerlink&quot; title=&quot;1. 优化SQL步骤&quot;&gt;&lt;/a&gt;1. 优化SQL步骤&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-1-通过-show-status和应用特点了解各种-SQL的执行频率&quot;&gt;&lt;a href=&quot;#1-1-通过-show-status和应用特点了解各种-SQL的执行频率&quot; class=&quot;headerlink&quot; title=&quot;1.1. 通过 show status和应用特点了解各种 SQL的执行频率&quot;&gt;&lt;/a&gt;&lt;font color=&quot;blue&quot;&gt;1.1. 通过 show status和应用特点了解各种 SQL的执行频率&lt;/font&gt;&lt;/h2&gt;&lt;p&gt;　　通过 SHOW STATUS 可以提供服务器状态信息，也可以使用 mysqladmin extende d-status 命令获得。 SHOW STATUS 可以根据需要显示 session 级别的统计结果和 global级别的统计结果。&lt;br&gt;　　如显示当前session： &lt;strong&gt;&lt;em&gt;&lt;font color=&quot;red&quot;&gt;SHOW STATUS like “Com_%”; 全局级别：show global status;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="sql" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/sql/"/>
    
    
      <category term="数据库" scheme="http://lzrlizhirong.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="sql" scheme="http://lzrlizhirong.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>100个Linux常用命令总结</title>
    <link href="http://lzrlizhirong.github.io/2017/02/27/100-linux-commands/"/>
    <id>http://lzrlizhirong.github.io/2017/02/27/100-linux-commands/</id>
    <published>2017-02-27T11:05:33.000Z</published>
    <updated>2017-02-27T11:31:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-ls-选项-目录名-列出相关目录下的所有目录和文件"><a href="#1-ls-选项-目录名-列出相关目录下的所有目录和文件" class="headerlink" title="1.ls [选项] [目录名 | 列出相关目录下的所有目录和文件"></a>1.ls [选项] [目录名 | 列出相关目录下的所有目录和文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-a  列出包括.a开头的隐藏文件的所有文件</div><div class="line">-A  通-a，但不列出&quot;.&quot;和&quot;..&quot;</div><div class="line">-l  列出文件的详细信息</div><div class="line">-c  根据ctime排序显示</div><div class="line">-t  根据文件修改时间排序</div><div class="line">---color[=WHEN] 用色彩辨别文件类型 WHEN 可以是&apos;never&apos;、&apos;always&apos;或&apos;auto&apos;其中之一</div></pre></td></tr></table></figure>
<a id="more"></a>
<pre><code>白色：表示普通文件
蓝色：表示目录
绿色：表示可执行文件
红色：表示压缩文件
浅蓝色：链接文件
红色闪烁：表示链接的文件有问题
黄色：表示设备文件
灰色：表示其它文件   
</code></pre><h1 id="2-mv-选项-源文件或目录-目录或多个源文件-移动或重命名文件"><a href="#2-mv-选项-源文件或目录-目录或多个源文件-移动或重命名文件" class="headerlink" title="2.mv [选项] 源文件或目录 目录或多个源文件 | 移动或重命名文件"></a>2.mv [选项] 源文件或目录 目录或多个源文件 | 移动或重命名文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-b  覆盖前做备份</div><div class="line">-f  如存在不询问而强制覆盖</div><div class="line">-i  如存在则询问是否覆盖</div><div class="line">-u  较新才覆盖</div><div class="line">-t  将多个源文件移动到统一目录下，目录参数在前，文件参数在后</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">eg:</div><div class="line">    mv a /tmp/ 将文件a移动到 /tmp目录下</div><div class="line">    mv a b 将a命名为b</div><div class="line">    mv /home/zenghao test1.txt test2.txt test3.txt</div></pre></td></tr></table></figure>
<h1 id="3-cp-选项-源文件或目录-目录或多个源文件-将源文件复制至目标文件，或将多个源文件复制至目标目录。"><a href="#3-cp-选项-源文件或目录-目录或多个源文件-将源文件复制至目标文件，或将多个源文件复制至目标目录。" class="headerlink" title="3.cp [选项] 源文件或目录 目录或多个源文件 | 将源文件复制至目标文件，或将多个源文件复制至目标目录。"></a>3.cp [选项] 源文件或目录 目录或多个源文件 | 将源文件复制至目标文件，或将多个源文件复制至目标目录。</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-r -R 递归复制该目录及其子目录内容</div><div class="line">-p  连同档案属性一起复制过去</div><div class="line">-f  不询问而强制复制</div><div class="line">-s  生成快捷方式</div><div class="line">-a  将档案的所有特性都一起复制</div></pre></td></tr></table></figure>
<h1 id="4-scp-参数-原路径-目标路径-在Linux服务器之间复制文件和目录"><a href="#4-scp-参数-原路径-目标路径-在Linux服务器之间复制文件和目录" class="headerlink" title="4.scp [参数] [原路径] [目标路径] | 在Linux服务器之间复制文件和目录"></a>4.scp [参数] [原路径] [目标路径] | 在Linux服务器之间复制文件和目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-v  详细显示输出的具体情况</div><div class="line">-r  递归复制整个目录</div></pre></td></tr></table></figure>
<h2 id="1-复制文件："><a href="#1-复制文件：" class="headerlink" title="(1) 复制文件："></a>(1) 复制文件：</h2><p>命令格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">scp local_file remote_username@remote_ip:remote_folder  </div><div class="line">或者  </div><div class="line">scp local_file remote_username@remote_ip:remote_file  </div><div class="line">或者  </div><div class="line">scp local_file remote_ip:remote_folder  </div><div class="line">或者  </div><div class="line">scp local_file remote_ip:remote_file</div></pre></td></tr></table></figure></p>
<p>第1,2个指定了用户名，命令执行后需要输入用户密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名<br>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名   </p>
<h2 id="2-复制目录："><a href="#2-复制目录：" class="headerlink" title="(2) 复制目录："></a>(2) 复制目录：</h2><p>命令格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp -r local_folder remote_username@remote_ip:remote_folder  </div><div class="line">或者  </div><div class="line">scp -r local_folder remote_ip:remote_folder</div></pre></td></tr></table></figure></p>
<p>第1个指定了用户名，命令执行后需要输入用户密码；<br>第2个没有指定用户名，命令执行后需要输入用户名和密码；<br>eg:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">从 本地 复制到 远程</div><div class="line">scp /home/daisy/full.tar.gz root@172.19.2.75:/home/root </div><div class="line">从 远程 复制到 本地</div><div class="line">scp root@/172.19.2.75:/home/root/full.tar.gz /home/daisy/full.tar.gz</div></pre></td></tr></table></figure></p>
<h1 id="5-rm-选项-文件-删除文件"><a href="#5-rm-选项-文件-删除文件" class="headerlink" title="5.rm [选项] 文件 | 删除文件"></a>5.rm [选项] 文件 | 删除文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-r  删除文件夹</div><div class="line">-f  删除不提示</div><div class="line">-i  删除提示</div><div class="line">-v  详细显示进行步骤</div></pre></td></tr></table></figure>
<h1 id="6-touch-选项-文件-创建空文件或更新文件时间"><a href="#6-touch-选项-文件-创建空文件或更新文件时间" class="headerlink" title="6.touch [选项] 文件 | 创建空文件或更新文件时间"></a>6.touch [选项] 文件 | 创建空文件或更新文件时间</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-a  只修改存取时间</div><div class="line">-m  值修改变动时间</div><div class="line">-r  eg:touch -r a b ,使b的时间和a相同</div><div class="line">-t  指定特定的时间 eg:touch -t 201211142234.50 log.log </div><div class="line">    -t time [[CC]YY]MMDDhhmm[.SS],C:年前两位</div></pre></td></tr></table></figure>
<h1 id="7-pwd-查看当前所在路径"><a href="#7-pwd-查看当前所在路径" class="headerlink" title="7.pwd 查看当前所在路径"></a>7.pwd 查看当前所在路径</h1><h1 id="8-cd-改变当前目录"><a href="#8-cd-改变当前目录" class="headerlink" title="8.cd 改变当前目录"></a>8.cd 改变当前目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">\- ：返回上层目录</div><div class="line">.. :返回上层目录</div><div class="line">回车  ：返回主目录</div><div class="line">/   :根目录</div></pre></td></tr></table></figure>
<h1 id="9-mkdir-选项-目录…-创建新目录"><a href="#9-mkdir-选项-目录…-创建新目录" class="headerlink" title="9.mkdir [选项] 目录… | 创建新目录"></a>9.mkdir [选项] 目录… | 创建新目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-p  递归创建目录，若父目录不存在则依次创建</div><div class="line">-m  自定义创建目录的权限  eg:mkdir -m 777 hehe</div><div class="line">-v  显示创建目录的详细信息</div></pre></td></tr></table></figure>
<h1 id="10-rmdir-删除空目录"><a href="#10-rmdir-删除空目录" class="headerlink" title="10.rmdir 删除空目录"></a>10.rmdir 删除空目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-v  显示执行过程</div><div class="line">-p  若自父母删除后父目录为空则一并删除</div></pre></td></tr></table></figure>
<h1 id="11-rm-选项-文件…-一个或多个文件或目录"><a href="#11-rm-选项-文件…-一个或多个文件或目录" class="headerlink" title="11.rm [选项] 文件… | 一个或多个文件或目录"></a>11.rm [选项] 文件… | 一个或多个文件或目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-f  忽略不存在的文件，不给出提示</div><div class="line">-i  交互式删除</div><div class="line">-r  将列出的目录及其子目录递归删除</div><div class="line">-v  列出详细信息</div></pre></td></tr></table></figure>
<h1 id="12-echo：显示内容"><a href="#12-echo：显示内容" class="headerlink" title="12.echo：显示内容"></a>12.echo：显示内容</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-n  输出后不换行</div><div class="line">-e  遇到转义字符特殊处理  </div><div class="line">    eg:</div><div class="line">        echo &quot;he\nhe&quot;   显示he\nhe</div><div class="line">        ehco -e &quot;he\nhe&quot;    显示he(换行了)he</div></pre></td></tr></table></figure>
<h1 id="13-cat-选项-文件-一次显示整个文件或从键盘创建一个文件或将几个文件合并成一个文件"><a href="#13-cat-选项-文件-一次显示整个文件或从键盘创建一个文件或将几个文件合并成一个文件" class="headerlink" title="13.cat [选项] [文件]..| 一次显示整个文件或从键盘创建一个文件或将几个文件合并成一个文件"></a>13.cat [选项] [文件]..| 一次显示整个文件或从键盘创建一个文件或将几个文件合并成一个文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-n  编号文件内容再输出</div><div class="line">-E  在结束行提示$</div></pre></td></tr></table></figure>
<h1 id="14-tac-反向显示"><a href="#14-tac-反向显示" class="headerlink" title="14.tac | 反向显示"></a>14.tac | 反向显示</h1><h1 id="15-more-按页查看文章内容，从前向后读取文件，因此在启动时就加载整个文件"><a href="#15-more-按页查看文章内容，从前向后读取文件，因此在启动时就加载整个文件" class="headerlink" title="15.more | 按页查看文章内容，从前向后读取文件，因此在启动时就加载整个文件"></a>15.more | 按页查看文章内容，从前向后读取文件，因此在启动时就加载整个文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">+n  从第n行开始显示</div><div class="line">-n  每次查看n行数据</div><div class="line">+/String    搜寻String字符串位置，从其前两行开始查看</div><div class="line">-c  清屏再显示</div><div class="line">-p  换页时清屏</div></pre></td></tr></table></figure>
<h1 id="16-less-可前后移动地逐屏查看文章内容，在查看前不会加载整个文件"><a href="#16-less-可前后移动地逐屏查看文章内容，在查看前不会加载整个文件" class="headerlink" title="16.less | 可前后移动地逐屏查看文章内容，在查看前不会加载整个文件"></a>16.less | 可前后移动地逐屏查看文章内容，在查看前不会加载整个文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-m  显示类似于more命令的百分比</div><div class="line">-N  显示行号</div><div class="line">/   字符串：向下搜索“字符串”的功能</div><div class="line">?   字符串：向上搜索“字符串”的功能</div><div class="line">n   重复前一个搜索（与 / 或 ? 有关）</div><div class="line">N   反向重复前一个搜索（与 / 或 ? 有关）</div><div class="line">b   向后翻一页</div><div class="line">d   向后翻半页</div></pre></td></tr></table></figure>
<h1 id="17-nl-选项-…-文件-…-将输出内容自动加上行号"><a href="#17-nl-选项-…-文件-…-将输出内容自动加上行号" class="headerlink" title="17.nl [选项]… [文件]… | 将输出内容自动加上行号"></a>17.nl [选项]… [文件]… | 将输出内容自动加上行号</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-b </div><div class="line">-b a 不论是否有空行，都列出行号（类似 cat -n) </div><div class="line">-b t 空行则不列行号（默认） </div><div class="line">-n 有ln rn rz三个参数，分别为再最左方显示，最右方显示不加0，最右方显示加0</div></pre></td></tr></table></figure>
<h1 id="18-head-参数-…-文件-…-显示档案开头，默认开头10行"><a href="#18-head-参数-…-文件-…-显示档案开头，默认开头10行" class="headerlink" title="18.head [参数]… [文件]… | 显示档案开头，默认开头10行"></a>18.head [参数]… [文件]… | 显示档案开头，默认开头10行</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-v  显示文件名</div><div class="line">-c number   显示前number个字符,若number为负数,则显示除最后number个字符的所有内容</div><div class="line">-number/n (+)number     显示前number行内容，</div><div class="line">-n number   若number为负数，则显示除最后number行数据的所有内容</div></pre></td></tr></table></figure>
<h1 id="19-tail-必要参数-选择参数-文件-显示文件结尾内容"><a href="#19-tail-必要参数-选择参数-文件-显示文件结尾内容" class="headerlink" title="19.tail [必要参数] [选择参数] [文件] | 显示文件结尾内容"></a>19.tail [必要参数] [选择参数] [文件] | 显示文件结尾内容</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-v  显示详细的处理信息</div><div class="line">-q  不显示处理信息</div><div class="line">-num/-n (-)num      显示最后num行内容</div><div class="line">-n +num 从第num行开始显示后面的数据</div><div class="line">-c  显示最后c个字符</div><div class="line">-f  循环读取</div></pre></td></tr></table></figure>
<h1 id="20-vi-编辑文件"><a href="#20-vi-编辑文件" class="headerlink" title="20.vi 编辑文件"></a>20.vi 编辑文件</h1><p>:w filename 将文章以指定的文件名保存起来<br>:wq 保存并退出<br>:q! 不保存而强制退出<br>命令行模式功能键</p>
<h2 id="1）插入模式"><a href="#1）插入模式" class="headerlink" title="1）插入模式"></a>1）插入模式</h2><p>按「i」切换进入插入模式「insert mode」，按”i”进入插入模式后是从光标当前位置开始输入文件；<br>按「a」进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字；<br>按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。</p>
<h2 id="2）从插入模式切换为命令行模式"><a href="#2）从插入模式切换为命令行模式" class="headerlink" title="2）从插入模式切换为命令行模式"></a>2）从插入模式切换为命令行模式</h2><p>  按「ESC」键。</p>
<h2 id="3）移动光标"><a href="#3）移动光标" class="headerlink" title="3）移动光标"></a>3）移动光标</h2><p>　　vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。<br>　　按「ctrl」+「b」：屏幕往”后”移动一页。<br>　　按「ctrl」+「f」：屏幕往”前”移动一页。<br>　　按「ctrl」+「u」：屏幕往”后”移动半页。<br>　　按「ctrl」+「d」：屏幕往”前”移动半页。<br>　　按数字「0」：移到文章的开头。<br>　　按「G」：移动到文章的最后。<br>　　按「$」：移动到光标所在行的”行尾”。<br>　　按「^」：移动到光标所在行的”行首”<br>　　按「w」：光标跳到下个字的开头<br>　　按「e」：光标跳到下个字的字尾<br>　　按「b」：光标回到上个字的开头<br>　　按「#l」：光标移到该行的第#个位置，如：5l,56l。</p>
<h2 id="4）删除文字"><a href="#4）删除文字" class="headerlink" title="4）删除文字"></a>4）删除文字</h2><p>　　「x」：每按一次，删除光标所在位置的”后面”一个字符。<br>　　「#x」：例如，「6x」表示删除光标所在位置的”后面”6个字符。<br>　　「X」：大写的X，每按一次，删除光标所在位置的”前面”一个字符。<br>　　「#X」：例如，「20X」表示删除光标所在位置的”前面”20个字符。<br>　　「dd」：删除光标所在行。<br>　　「#dd」：从光标所在行开始删除#行</p>
<h2 id="5）复制"><a href="#5）复制" class="headerlink" title="5）复制"></a>5）复制</h2><p>　　「yw」：将光标所在之处到字尾的字符复制到缓冲区中。<br>　　「#yw」：复制#个字到缓冲区<br>　　「yy」：复制光标所在行到缓冲区。<br>　　「#yy」：例如，「6yy」表示拷贝从光标所在的该行”往下数”6行文字。<br>　　「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与”y”有关的复制命令都必须与”p”配合才能完成复制与粘贴功能。</p>
<h2 id="6）替换"><a href="#6）替换" class="headerlink" title="6）替换"></a>6）替换</h2><p>　　「r」：替换光标所在处的字符。<br>　　「R」：替换光标所到之处的字符，直到按下「ESC」键为止。</p>
<h2 id="7）回复上一次操作"><a href="#7）回复上一次操作" class="headerlink" title="7）回复上一次操作"></a>7）回复上一次操作</h2><p>　　「u」：如果您误执行一个命令，可以马上按下「u」，回到上一个操作。按多次”u”可以执行多次回复。</p>
<h2 id="8）更改"><a href="#8）更改" class="headerlink" title="8）更改"></a>8）更改</h2><p>　　「cw」：更改光标所在处的字到字尾处<br>　　「c#w」：例如，「c3w」表示更改3个字</p>
<h2 id="9）跳至指定的行"><a href="#9）跳至指定的行" class="headerlink" title="9）跳至指定的行"></a>9）跳至指定的行</h2><p>　　「ctrl」+「g」列出光标所在行的行号。<br>　　「#G」：例如，「15G」，表示移动光标至文章的第15行行首。</p>
<h1 id="21-which-可执行文件名称-查看可执行文件的位置，在PATH变量指定的路径中查看系统命令是否存在及其位置"><a href="#21-which-可执行文件名称-查看可执行文件的位置，在PATH变量指定的路径中查看系统命令是否存在及其位置" class="headerlink" title="21.which 可执行文件名称 | 查看可执行文件的位置，在PATH变量指定的路径中查看系统命令是否存在及其位置"></a>21.which 可执行文件名称 | 查看可执行文件的位置，在PATH变量指定的路径中查看系统命令是否存在及其位置</h1><h1 id="22-whereis-bmsu-BMS-目录名-f-文件名-定位可执行文件、源代码文件、帮助文件在文件系统中的位置"><a href="#22-whereis-bmsu-BMS-目录名-f-文件名-定位可执行文件、源代码文件、帮助文件在文件系统中的位置" class="headerlink" title="22.whereis [-bmsu] [BMS 目录名 -f ] 文件名| 定位可执行文件、源代码文件、帮助文件在文件系统中的位置"></a>22.whereis [-bmsu] [BMS 目录名 -f ] 文件名| 定位可执行文件、源代码文件、帮助文件在文件系统中的位置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-b   定位可执行文件。</div><div class="line">-m   定位帮助文件。</div><div class="line">-s   定位源代码文件。</div><div class="line">-u   搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。</div><div class="line">-B   指定搜索可执行文件的路径。</div><div class="line">-M   指定搜索帮助文件的路径。</div><div class="line">-S   指定搜索源代码文件的路径。</div></pre></td></tr></table></figure>
<h1 id="23-locate-通过搜寻数据库快速搜寻档案"><a href="#23-locate-通过搜寻数据库快速搜寻档案" class="headerlink" title="23.locate | 通过搜寻数据库快速搜寻档案"></a>23.locate | 通过搜寻数据库快速搜寻档案</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-r  使用正规运算式做寻找的条件</div></pre></td></tr></table></figure>
<h1 id="24-find-find-PATH-option-action-在文件树种查找文件，并作出相应的处理"><a href="#24-find-find-PATH-option-action-在文件树种查找文件，并作出相应的处理" class="headerlink" title="24.find find [PATH] [option] [action] | 在文件树种查找文件，并作出相应的处理"></a>24.find find [PATH] [option] [action] | 在文件树种查找文件，并作出相应的处理</h1><p>选项与参数：</p>
<h2 id="1-与时间有关的选项：共有-atime-ctime-与-mtime-和-amin-cmin与-mmin，以-mtime-说明"><a href="#1-与时间有关的选项：共有-atime-ctime-与-mtime-和-amin-cmin与-mmin，以-mtime-说明" class="headerlink" title="1). 与时间有关的选项：共有 -atime, -ctime 与 -mtime 和-amin,-cmin与-mmin，以 -mtime 说明"></a>1). 与时间有关的选项：共有 -atime, -ctime 与 -mtime 和-amin,-cmin与-mmin，以 -mtime 说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-mtime n ：n 为数字，意义为在 n 天之前的『一天之内』被更动过内容的档案；</div><div class="line">-mtime +n ：列出在 n 天之前(不含 n 天本身)被更动过内容的档案档名；</div><div class="line">-mtime -n ：列出在 n 天之内(含 n 天本身)被更动过内容的档案档名。</div><div class="line">-newer file ：file 为一个存在的档案，列出比 file 还要新的档案档名</div></pre></td></tr></table></figure>
<h2 id="2-与使用者或组名有关的参数："><a href="#2-与使用者或组名有关的参数：" class="headerlink" title="2). 与使用者或组名有关的参数："></a>2). 与使用者或组名有关的参数：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-uid n ：n 为数字，这个数字是用户的账号 ID，亦即 UID</div><div class="line">-gid n ：n 为数字，这个数字是组名的 ID，亦即 GID</div><div class="line">-user name ：name 为使用者账号名称！例如 dmtsai</div><div class="line">-group name：name 为组名，例如 users ；</div><div class="line">-nouser ：寻找档案的拥有者不存在 /etc/passwd 的人！</div><div class="line">-nogroup ：寻找档案的拥有群组不存在于 /etc/group 的档案！</div></pre></td></tr></table></figure>
<h2 id="3-与档案权限及名称有关的参数："><a href="#3-与档案权限及名称有关的参数：" class="headerlink" title="3). 与档案权限及名称有关的参数："></a>3). 与档案权限及名称有关的参数：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">-name filename：搜寻文件名为 filename 的档案（可使用通配符）</div><div class="line">-size [+-]SIZE：搜寻比 SIZE 还要大(+)或小(-)的档案。这个 SIZE 的规格有：</div><div class="line">        c: 代表 byte</div><div class="line">        k: 代表 1024bytes。所以，要找比 50KB还要大的档案，就是『 -size +50k 』</div><div class="line">-type TYPE ：搜寻档案的类型为 TYPE 的，类型主要有：</div><div class="line">        一般正规档案 (f)</div><div class="line">        装置档案 (b, c)</div><div class="line">        目录 (d)</div><div class="line">        连结档 (l)</div><div class="line">        socket (s)</div><div class="line">        FIFO (p)</div><div class="line">-perm mode ：搜寻档案权限『刚好等于』 mode的档案，这个mode为类似chmod的属性值，举例来说，-rwsr-xr-x 的属性为4755！</div><div class="line">-perm -mode ：搜寻档案权限『必须要全部囊括 mode 的权限』的档案，举例来说,我们要搜寻-rwxr--r-- 亦即 0744 的档案，使用-perm -0744，当一个档案的权限为 -rwsr-xr-x ，亦即4755 时，也会被列出来，因为 -rwsr-xr-x 的属性已经囊括了 -rwxr--r-- 的属性了。</div><div class="line">-perm +mode ：搜寻档案权限『包含任一 mode 的权限』的档案，举例来说，我们搜寻-rwxr-xr-x ，亦即 -perm +755 时，但一个文件属性为 -rw-------也会被列出来，因为他有 -rw.... 的属性存在！</div></pre></td></tr></table></figure>
<h1 id="25-grep-‘正则表达式’-文件名-用正则表达式搜索文本，并把匹配的行打印出来"><a href="#25-grep-‘正则表达式’-文件名-用正则表达式搜索文本，并把匹配的行打印出来" class="headerlink" title="25.grep ‘正则表达式’ 文件名 | 用正则表达式搜索文本，并把匹配的行打印出来"></a>25.grep ‘正则表达式’ 文件名 | 用正则表达式搜索文本，并把匹配的行打印出来</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-c  只输出匹配行的计数。</div><div class="line">-I  不区分大小写(只适用于单字符)。</div><div class="line">-l  只显示文件名</div><div class="line">-v  显示不包含匹配文本的所有行。</div><div class="line">-n  显示匹配行数据及其行号</div></pre></td></tr></table></figure>
<h1 id="26-gzip-cdtv-檔名-压缩、解压缩，源文件都不再存在"><a href="#26-gzip-cdtv-檔名-压缩、解压缩，源文件都不再存在" class="headerlink" title="26.gzip [-cdtv#] 檔名 | 压缩、解压缩，源文件都不再存在"></a>26.gzip [-cdtv#] 檔名 | 压缩、解压缩，源文件都不再存在</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-d  进行解压缩</div><div class="line">-c  将压缩的数据输出到屏幕上</div><div class="line">-v  :显示原档案/压缩文件案的压缩比等信息</div><div class="line">-#  ：压缩等级，-1最快，但压缩比最差，=9最慢，但压缩比最好</div></pre></td></tr></table></figure>
<h1 id="27-gunzip-解压缩"><a href="#27-gunzip-解压缩" class="headerlink" title="27.gunzip | 解压缩"></a>27.gunzip | 解压缩</h1><h1 id="28-bzip2-压缩、解压缩"><a href="#28-bzip2-压缩、解压缩" class="headerlink" title="28.bzip2 | 压缩、解压缩"></a>28.bzip2 | 压缩、解压缩</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-d  :解压</div><div class="line">-z  :压缩</div><div class="line">-k  :保留源文件</div><div class="line">-c ：将压缩的过程产生的数据输出到屏幕上！</div><div class="line">-v ：可以显示出原档案/压缩文件案的压缩比等信息；</div><div class="line">-# ：与 gzip 同样的，都是在计算压缩比的参数， -9 最佳， -1 最快！</div></pre></td></tr></table></figure>
<h1 id="29-bzcat-读取数据而无需解压"><a href="#29-bzcat-读取数据而无需解压" class="headerlink" title="29.bzcat 读取数据而无需解压"></a>29.bzcat 读取数据而无需解压</h1><h1 id="30-tar-主选项-辅选项-文件或者目录-多个目录或档案打包、压缩成一个大档案"><a href="#30-tar-主选项-辅选项-文件或者目录-多个目录或档案打包、压缩成一个大档案" class="headerlink" title="30.tar [主选项+辅选项] 文件或者目录 | 多个目录或档案打包、压缩成一个大档案"></a>30.tar [主选项+辅选项] 文件或者目录 | 多个目录或档案打包、压缩成一个大档案</h1><p>主选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-c  建立打包档案，可搭配 -v 来察看过程中被打包的档名(filename)</div><div class="line">-t  察看打包档案的内容含有哪些档名，重点在察看『档名』就是了；</div><div class="line">-x  解打包或解压缩的功能，可以搭配 -C (大写) 在特定目录解开</div></pre></td></tr></table></figure></p>
<p>辅选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-j  透过 bzip2 的支持进行压缩/解压缩：此时档名最好为 \*.tar.bz2</div><div class="line">-z  透过 gzip 的支持进行压缩/解压缩：此时档名最好为 \*.tar.gz</div><div class="line">-v  在压缩/解压缩的过程中，将正在处理的文件名显示出来！</div><div class="line">-f filename -f 后面要立刻接要被处理的档名！</div><div class="line">-C 目录   这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。</div><div class="line">--exclude FILE：在压缩打包过程中忽略某文件 eg: tar --exclude /home/zenghao -zcvf myfile.tar.gz /home/* /etc</div><div class="line">-p  保留备份数据的原本权限与属性，常用于备份(-c)重要的配置文件</div><div class="line">-P(大写）  保留绝对路径，亦即允许备份数据中含有根目录存在之意；</div></pre></td></tr></table></figure></p>
<p>eg:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">压 缩：tar -jcvf filename.tar.bz2 要被压缩的档案或目录名称</div><div class="line">查 询：tar -jtvf filename.tar.bz2</div><div class="line">解压缩：tar -jxvf filename.tar.bz2 -C 欲解压缩的目录</div></pre></td></tr></table></figure></p>
<h1 id="31-exit-退出当前shell"><a href="#31-exit-退出当前shell" class="headerlink" title="31.exit 退出当前shell"></a>31.exit 退出当前shell</h1><h1 id="32-logout-退出登录shell"><a href="#32-logout-退出登录shell" class="headerlink" title="32.logout 退出登录shell"></a>32.logout 退出登录shell</h1><h1 id="33-shutdown-h-now"><a href="#33-shutdown-h-now" class="headerlink" title="33.shutdown -h now"></a>33.shutdown -h now</h1><h1 id="34-users-显示当前登录系统地用户"><a href="#34-users-显示当前登录系统地用户" class="headerlink" title="34.users 显示当前登录系统地用户"></a>34.users 显示当前登录系统地用户</h1><h1 id="35-who-登录在本机的用户与来源"><a href="#35-who-登录在本机的用户与来源" class="headerlink" title="35.who 登录在本机的用户与来源"></a>35.who 登录在本机的用户与来源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-H或--heading 　显示各栏位的标题信息列。</div></pre></td></tr></table></figure>
<h1 id="36-w-登录在本机的用户及其运行的程序"><a href="#36-w-登录在本机的用户及其运行的程序" class="headerlink" title="36.w 登录在本机的用户及其运行的程序"></a>36.w 登录在本机的用户及其运行的程序</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-s 　使用简洁格式列表，不显示用户登入时间，终端机阶段作业和程序所耗费的CPU时间。</div><div class="line">-h 　不显示各栏位的标题信息列。</div></pre></td></tr></table></figure>
<h1 id="37-write-给当前联机的用户发消息"><a href="#37-write-给当前联机的用户发消息" class="headerlink" title="37.write 给当前联机的用户发消息"></a>37.write 给当前联机的用户发消息</h1><h1 id="38-wall-给所有登录再本机的用户发消息"><a href="#38-wall-给所有登录再本机的用户发消息" class="headerlink" title="38.wall 给所有登录再本机的用户发消息"></a>38.wall 给所有登录再本机的用户发消息</h1><h1 id="39-last-查看用户的登陆日志"><a href="#39-last-查看用户的登陆日志" class="headerlink" title="39.last 查看用户的登陆日志"></a>39.last 查看用户的登陆日志</h1><h1 id="40-lastlog-查看每个用户最后的登陆时间"><a href="#40-lastlog-查看每个用户最后的登陆时间" class="headerlink" title="40.lastlog 查看每个用户最后的登陆时间"></a>40.lastlog 查看每个用户最后的登陆时间</h1><h1 id="41-finger-选项-使用者-用户-主机-查看用户信息"><a href="#41-finger-选项-使用者-用户-主机-查看用户信息" class="headerlink" title="41.finger [选项] [使用者] [用户@主机] | 查看用户信息"></a>41.finger [选项] [使用者] [用户@主机] | 查看用户信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-s 显示用户的注册名、实际姓名、终端名称、写状态、停滞时间、登录时间等信息</div><div class="line">-l 除了用-s选项显示的信息外，还显示用户主目录、登录shell、邮件状态等信息，以及用户主目录下的.plan、.project和.forward文件的内容。</div><div class="line">-p 除了不显示.plan文件和.project文件以外，与-l选项相同</div></pre></td></tr></table></figure>
<h1 id="42-hostname-查看主机名"><a href="#42-hostname-查看主机名" class="headerlink" title="42.hostname 查看主机名"></a>42.hostname 查看主机名</h1><h1 id="43-alias-ii-“ls-l”-添加别名"><a href="#43-alias-ii-“ls-l”-添加别名" class="headerlink" title="43.alias ii = “ls -l” | 添加别名"></a>43.alias ii = “ls -l” | 添加别名</h1><h1 id="44-unalias-ii-清除别名"><a href="#44-unalias-ii-清除别名" class="headerlink" title="44.unalias ii | 清除别名"></a>44.unalias ii | 清除别名</h1><h1 id="45-useradd-u-UID-g-初始群组-G-次要群组-c-说明栏-d-家目录绝对路径-s-shell-使用者账号名-新增用户"><a href="#45-useradd-u-UID-g-初始群组-G-次要群组-c-说明栏-d-家目录绝对路径-s-shell-使用者账号名-新增用户" class="headerlink" title="45.useradd [-u UID] [-g 初始群组] [-G 次要群组] [-c 说明栏] [-d 家目录绝对路径] [-s shell] 使用者账号名 | 新增用户"></a>45.useradd [-u UID] [-g 初始群组] [-G 次要群组] [-c 说明栏] [-d 家目录绝对路径] [-s shell] 使用者账号名 | 新增用户</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-M  不建立用户家目录！(系统账号默认值)</div><div class="line">-m  建立用户家目录！(一般账号默认值)</div><div class="line">-r  建立一个系统的账号，这个账号的 UID 会有限制 </div><div class="line">-e  账号失效日期，格式为『YYYY-MM-DD』</div><div class="line">-D  查看useradd的各项默认值</div></pre></td></tr></table></figure>
<h1 id="46-passwd-修改密码"><a href="#46-passwd-修改密码" class="headerlink" title="46.passwd | 修改密码"></a>46.passwd | 修改密码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-l  使密码失效</div><div class="line">-u  与-l相对，用户解锁</div><div class="line">-S  列出登陆用户passwd文件内的相关参数</div><div class="line">-n  后面接天数，shadow 的第 4 字段，多久不可修改密码天数</div><div class="line">-x  后面接天数，shadow 的第 5 字段，多久内必须要更动密码</div><div class="line">-w  后面接天数，shadow 的第 6 字段，密码过期前的警告天数</div><div class="line">-i  后面接『日期』，shadow 的第 7 字段，密码失效日期</div><div class="line">使用管道刘设置密码：echo &quot;zeng&quot; | passwd --stdin zenghao</div></pre></td></tr></table></figure>
<h1 id="47-userdel-删除用户"><a href="#47-userdel-删除用户" class="headerlink" title="47.userdel 删除用户"></a>47.userdel 删除用户</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-r  用户文件一并删除</div></pre></td></tr></table></figure>
<h1 id="48-chage-ldEImMW-账号名-修改用户密码的相关属性"><a href="#48-chage-ldEImMW-账号名-修改用户密码的相关属性" class="headerlink" title="48.chage [-ldEImMW] 账号名 | 修改用户密码的相关属性"></a>48.chage [-ldEImMW] 账号名 | 修改用户密码的相关属性</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-l  列出该账号的详细密码参数；</div><div class="line">-d  后面接日期，修改 shadow 第三字段(最近一次更改密码的日期)，格式YYYY-MM-DD</div><div class="line">-E  后面接日期，修改 shadow 第八字段(账号失效日)，格式 YYYY-MM-DD</div><div class="line">-I  后面接天数，修改 shadow 第七字段(密码失效日期)</div><div class="line">-m  后面接天数，修改 shadow 第四字段(密码最短保留天数)</div><div class="line">-M  后面接天数，修改 shadow 第五字段(密码多久需要进行变更)</div><div class="line">-W  后面接天数，修改 shadow 第六字段(密码过期前警告日期)</div></pre></td></tr></table></figure>
<h1 id="49-usermod-cdegGlsuLU-username-修改用户的相关属性"><a href="#49-usermod-cdegGlsuLU-username-修改用户的相关属性" class="headerlink" title="49.usermod [-cdegGlsuLU] username | 修改用户的相关属性"></a>49.usermod [-cdegGlsuLU] username | 修改用户的相关属性</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-c  后面接账号的说明，即 /etc/passwd 第五栏的说明栏，可以加入一些账号的说明。</div><div class="line">-d  后面接账号的家目录，即修改 /etc/passwd 的第六栏；</div><div class="line">-e  后面接日期，格式是 YYYY-MM-DD 也就是在 /etc/shadow 内的第八个字段数据啦！</div><div class="line">-f  后面接天数为 shadow 的第七字段。</div><div class="line">-g  后面接初始群组，修改 /etc/passwd 的第四个字段，亦即是GID的字段！</div><div class="line">-G  后面接次要群组，修改这个使用者能够支持的群组</div><div class="line">-l  后面接账号名称。亦即是修改账号名称， /etc/passwd 的第一栏！</div><div class="line">-s  后面接 Shell 的实际档案，例如 /bin/bash 或 /bin/csh 等等。</div><div class="line">-u  后面接 UID 数字啦！即 /etc/passwd 第三栏的资料；</div><div class="line">-L  冻结密码</div><div class="line">-U  解冻密码</div></pre></td></tr></table></figure>
<h1 id="50-id-username-查看用户相关的id信息，还可以用来判断用户是否存在"><a href="#50-id-username-查看用户相关的id信息，还可以用来判断用户是否存在" class="headerlink" title="50.id [username] | 查看用户相关的id信息，还可以用来判断用户是否存在"></a>50.id [username] | 查看用户相关的id信息，还可以用来判断用户是否存在</h1><h1 id="51-groups-查看登陆用户支持的群组，-第一个输出的群组为有效群组"><a href="#51-groups-查看登陆用户支持的群组，-第一个输出的群组为有效群组" class="headerlink" title="51.groups 查看登陆用户支持的群组， 第一个输出的群组为有效群组"></a>51.groups 查看登陆用户支持的群组， 第一个输出的群组为有效群组</h1><h1 id="52-newgrp-切换有效群组"><a href="#52-newgrp-切换有效群组" class="headerlink" title="52.newgrp 切换有效群组"></a>52.newgrp 切换有效群组</h1><h1 id="53-groupadd-g-gid-组名-添加组"><a href="#53-groupadd-g-gid-组名-添加组" class="headerlink" title="53.groupadd [-g gid] 组名 | 添加组"></a>53.groupadd [-g gid] 组名 | 添加组</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-g  设定添加组的特定组id</div></pre></td></tr></table></figure>
<h1 id="54-groupmod-g-gid-n-group-name-群组名-修改组信息"><a href="#54-groupmod-g-gid-n-group-name-群组名-修改组信息" class="headerlink" title="54.groupmod [-g gid] [-n group_name] 群组名 | 修改组信息"></a>54.groupmod [-g gid] [-n group_name] 群组名 | 修改组信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-g  修改既有的 GID 数字</div><div class="line">-n  修改既有的组名</div></pre></td></tr></table></figure>
<h1 id="55-groupdel-groupname-删除群组"><a href="#55-groupdel-groupname-删除群组" class="headerlink" title="55.groupdel [groupname] | 删除群组"></a>55.groupdel [groupname] | 删除群组</h1><h1 id="56-gpasswd-群组管理员功能"><a href="#56-gpasswd-群组管理员功能" class="headerlink" title="56.gpasswd | 群组管理员功能"></a>56.gpasswd | 群组管理员功能</h1><p>root管理员动作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-gpasswd groupname 设定密码</div><div class="line">-gpasswd [-A user1,...] [-M user3,...] groupname</div><div class="line">    -A  将 groupname 的主控权交由后面的使用者管理(该群组的管理员)</div><div class="line">    -M  将某些账号加入这个群组当中</div><div class="line">-gpasswd [-r] groupname</div><div class="line">    -r  将 groupname 的密码移除</div></pre></td></tr></table></figure></p>
<p>群组管理员动作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- gpasswd [-ad] user groupname </div><div class="line">    -a  将某位使用者加入到 groupname 这个群组当中</div><div class="line">    -d  将某位使用者移除出 groupname 这个群组当中</div></pre></td></tr></table></figure></p>
<h1 id="57-chfn修改个人信息"><a href="#57-chfn修改个人信息" class="headerlink" title="57.chfn修改个人信息"></a>57.chfn修改个人信息</h1><h1 id="58-mount-t-vfstype-o-options-device-dir"><a href="#58-mount-t-vfstype-o-options-device-dir" class="headerlink" title="58.mount [-t vfstype] [-o options] device dir"></a>58.mount [-t vfstype] [-o options] device dir</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-ro 采用只读方式挂接设备</div><div class="line">-rw 采用读写方式挂接设备</div><div class="line">eg:mount /home/mydisk.iso /tmp/mnt 通过mnt访问mydisk内的内容</div></pre></td></tr></table></figure>
<h1 id="59-umount-取消挂载"><a href="#59-umount-取消挂载" class="headerlink" title="59.umount 取消挂载"></a>59.umount 取消挂载</h1><h1 id="60-cut"><a href="#60-cut" class="headerlink" title="60.cut"></a>60.cut</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。</div><div class="line">-c ：以字符为单位进行分割。</div><div class="line">-d ：自定义分隔符，默认为制表符。</div><div class="line">-f  ：与-d一起使用，指定显示哪个区域。</div></pre></td></tr></table></figure>
<h1 id="61-sort"><a href="#61-sort" class="headerlink" title="61.sort"></a>61.sort</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-n   依照数值的大小排序。</div><div class="line">-o&lt;输出文件&gt;   将排序后的结果存入指定的文件。</div><div class="line">-r   以相反的顺序来排序。</div><div class="line">-t&lt;分隔字符&gt;   指定排序时所用的栏位分隔字符。</div><div class="line">-k  选择以哪个区间进行排序。</div></pre></td></tr></table></figure>
<h1 id="62-wc-统计指定文件中的字节数、字数、行数-并将统计结果显示输出"><a href="#62-wc-统计指定文件中的字节数、字数、行数-并将统计结果显示输出" class="headerlink" title="62.wc 统计指定文件中的字节数、字数、行数, 并将统计结果显示输出"></a>62.wc 统计指定文件中的字节数、字数、行数, 并将统计结果显示输出</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-l filename 报告行数</div><div class="line">-c filename 报告字节数</div><div class="line">-m filename 报告字符数</div><div class="line">-w filename 报告单词数</div></pre></td></tr></table></figure>
<h1 id="63-uniq-去除文件中相邻的重复行"><a href="#63-uniq-去除文件中相邻的重复行" class="headerlink" title="63.uniq 去除文件中相邻的重复行"></a>63.uniq 去除文件中相邻的重复行</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">清空/新建文件，将内容重定向输入进去 </div><div class="line">&amp;&gt; 正确、错误都重定向过去</div></pre></td></tr></table></figure>
<h1 id="64-set-显示环境变量和普通变量"><a href="#64-set-显示环境变量和普通变量" class="headerlink" title="64.set 显示环境变量和普通变量"></a>64.set 显示环境变量和普通变量</h1><h1 id="65-env-显示环境变量"><a href="#65-env-显示环境变量" class="headerlink" title="65.env 显示环境变量"></a>65.env 显示环境变量</h1><h1 id="66-export-把普通变量变成环境变量"><a href="#66-export-把普通变量变成环境变量" class="headerlink" title="66.export 把普通变量变成环境变量"></a>66.export 把普通变量变成环境变量</h1><h1 id="67-unset-删除一个环境变量"><a href="#67-unset-删除一个环境变量" class="headerlink" title="67.unset 删除一个环境变量"></a>67.unset 删除一个环境变量</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aaa()&#123;&#125; 定义函数</div></pre></td></tr></table></figure>
<h1 id="68-read"><a href="#68-read" class="headerlink" title="68.read"></a>68.read</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-p  接提示字符</div><div class="line">-t  接等待的秒数</div></pre></td></tr></table></figure>
<h1 id="69-declare、typeset"><a href="#69-declare、typeset" class="headerlink" title="69.declare、typeset"></a>69.declare、typeset</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-i 声明为整数</div><div class="line">-a 声明为数组</div><div class="line">-f 声明为函数</div><div class="line">-r 声明为只读</div></pre></td></tr></table></figure>
<h1 id="70-ulimit-限制使用者的某些系统资源"><a href="#70-ulimit-限制使用者的某些系统资源" class="headerlink" title="70.ulimit 限制使用者的某些系统资源"></a>70.ulimit 限制使用者的某些系统资源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-f  此 shell 可以建立的最大档案容量 (一般可能设定为 2GB)单位为 Kbytes eg: ulimit -f 1024 限制使用者仅能建立 1MBytes 以下的容量的档案</div></pre></td></tr></table></figure>
<h1 id="71-df-选项-文件-显示指定磁盘文件的可用空间-如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示"><a href="#71-df-选项-文件-显示指定磁盘文件的可用空间-如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示" class="headerlink" title="71.df [选项] [文件] | 显示指定磁盘文件的可用空间,如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示"></a>71.df [选项] [文件] | 显示指定磁盘文件的可用空间,如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-a  显示全部文件系统</div><div class="line">-h  文件大小友好显示</div><div class="line">-l  只显示本地文件系统</div><div class="line">-i  显示inode信息</div><div class="line">-T  显示文件系统类型</div></pre></td></tr></table></figure>
<h1 id="72-du-选项-文件-显示每个文件和目录的磁盘使用空间"><a href="#72-du-选项-文件-显示每个文件和目录的磁盘使用空间" class="headerlink" title="72.du [选项] [文件] | 显示每个文件和目录的磁盘使用空间"></a>72.du [选项] [文件] | 显示每个文件和目录的磁盘使用空间</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-h  方便阅读的方式</div><div class="line">-s  只显示总和的大小</div></pre></td></tr></table></figure>
<h1 id="73-ln-参数-源文件或目录-目标文件或目录-某一个文件在另外一个位置建立一个同步的链接"><a href="#73-ln-参数-源文件或目录-目标文件或目录-某一个文件在另外一个位置建立一个同步的链接" class="headerlink" title="73.ln [参数] [源文件或目录] [目标文件或目录] | 某一个文件在另外一个位置建立一个同步的链接"></a>73.ln [参数] [源文件或目录] [目标文件或目录] | 某一个文件在另外一个位置建立一个同步的链接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-s  建立软连接   </div><div class="line">-v  显示详细的处理过程</div></pre></td></tr></table></figure>
<h1 id="74-diff-参数-文件1或目录1-文件2或目录2-比较单个文件或者目录内容"><a href="#74-diff-参数-文件1或目录1-文件2或目录2-比较单个文件或者目录内容" class="headerlink" title="74.diff [参数] [文件1或目录1] [文件2或目录2] | 比较单个文件或者目录内容"></a>74.diff [参数] [文件1或目录1] [文件2或目录2] | 比较单个文件或者目录内容</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-b 　不检查空格字符的不同。</div><div class="line">-B 　不检查空白行。</div><div class="line">-i  不检查大小写</div><div class="line">-q  仅显示差异而不显示详细信息</div><div class="line">eg: diff a b &gt; parch.log 比较两个文件的不同并产生补丁</div></pre></td></tr></table></figure>
<h1 id="75-date-参数-…-格式-显示或设定系统的日期与时间"><a href="#75-date-参数-…-格式-显示或设定系统的日期与时间" class="headerlink" title="75.date [参数]… [+格式] | 显示或设定系统的日期与时间"></a>75.date [参数]… [+格式] | 显示或设定系统的日期与时间</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">%H 小时(以00-23来表示)。 </div><div class="line">%M 分钟(以00-59来表示)。 </div><div class="line">%P AM或PM。</div><div class="line">%D 日期(含年月日)</div><div class="line">%U 该年中的周数。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">date -s “2015-10-17 01:01:01″ //时间设定</div><div class="line">date +%Y%m%d         //显示前天年月日</div><div class="line">date +%Y%m%d --date=&quot;+1 day/month/year&quot;  //显示前一天/月/年的日期</div><div class="line">date +%Y%m%d --date=&quot;-1 day/month/year&quot;  //显示后一天/月/年的日期</div><div class="line">date -d &apos;2 weeks&apos; 2周后的日期</div></pre></td></tr></table></figure>
<h1 id="76-cal-参数-月份-年份-查看日历"><a href="#76-cal-参数-月份-年份-查看日历" class="headerlink" title="76.cal [参数] 月份] [年份] | 查看日历"></a>76.cal [参数] 月份] [年份] | 查看日历</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-1  显示当月的月历</div><div class="line">-3  显示前、当、后一个月的日历</div><div class="line">-m  显示星期一为一个星期的第一天</div><div class="line">-s  （默认）星期天为第一天</div><div class="line">-j  显示当月是一年中的第几天的日历</div><div class="line">-y  显示当前年份的日历</div></pre></td></tr></table></figure>
<h1 id="77-ps-列出当前进程的快照"><a href="#77-ps-列出当前进程的快照" class="headerlink" title="77.ps | 列出当前进程的快照"></a>77.ps | 列出当前进程的快照</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a   显示所有的进程</div><div class="line">-a  显示同一终端下的所有程序</div><div class="line">e   显示环境变量</div><div class="line">f   显示进程间的关系</div><div class="line">-H  显示树状结构</div><div class="line">r   显示当前终端的程序</div><div class="line">T   显示当前终端的所有程序</div><div class="line">-au 显示更详细的信息</div><div class="line">-aux    显示所有包含其他使用者的行程 </div><div class="line">-u  指定用户的所有进程</div></pre></td></tr></table></figure>
<h1 id="78-top-参数-显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率、CPU占用率等"><a href="#78-top-参数-显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率、CPU占用率等" class="headerlink" title="78.top [参数] | 显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率、CPU占用率等"></a>78.top [参数] | 显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率、CPU占用率等</h1><h1 id="79-kill-参数-进程号-杀死进程"><a href="#79-kill-参数-进程号-杀死进程" class="headerlink" title="79.kill [参数] [进程号] | 杀死进程"></a>79.kill [参数] [进程号] | 杀死进程</h1><h1 id="80-free-参数-显示Linux系统中空闲的、已用的物理内存及swap内存-及被内核使用的buffer"><a href="#80-free-参数-显示Linux系统中空闲的、已用的物理内存及swap内存-及被内核使用的buffer" class="headerlink" title="80.free [参数] | 显示Linux系统中空闲的、已用的物理内存及swap内存,及被内核使用的buffer"></a>80.free [参数] | 显示Linux系统中空闲的、已用的物理内存及swap内存,及被内核使用的buffer</h1><h1 id="81-vmstat-对操作系统的虚拟内存、进程、CPU活动进行监控"><a href="#81-vmstat-对操作系统的虚拟内存、进程、CPU活动进行监控" class="headerlink" title="81.vmstat | 对操作系统的虚拟内存、进程、CPU活动进行监控"></a>81.vmstat | 对操作系统的虚拟内存、进程、CPU活动进行监控</h1><h1 id="82-iostat-参数-时间t-次数n-每隔t时间刷新一次，最多刷新n次）-对系统的磁盘操作活动进行监视-汇报磁盘活动统计情况，同时也会汇报出CPU使用情况"><a href="#82-iostat-参数-时间t-次数n-每隔t时间刷新一次，最多刷新n次）-对系统的磁盘操作活动进行监视-汇报磁盘活动统计情况，同时也会汇报出CPU使用情况" class="headerlink" title="82.iostat [参数] [时间t] [次数n](每隔t时间刷新一次，最多刷新n次）| 对系统的磁盘操作活动进行监视,汇报磁盘活动统计情况，同时也会汇报出CPU使用情况"></a>82.iostat [参数] [时间t] [次数n](每隔t时间刷新一次，最多刷新n次）| 对系统的磁盘操作活动进行监视,汇报磁盘活动统计情况，同时也会汇报出CPU使用情况</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-p[磁盘] 显示磁盘和分区的情况</div></pre></td></tr></table></figure>
<h1 id="83-watch-参数-命令-重复执行某一命令以观察变化"><a href="#83-watch-参数-命令-重复执行某一命令以观察变化" class="headerlink" title="83.watch [参数] [命令] |重复执行某一命令以观察变化"></a>83.watch [参数] [命令] |重复执行某一命令以观察变化</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-n  时隔多少秒刷新</div><div class="line">-d  高亮显示动态变化</div></pre></td></tr></table></figure>
<h1 id="84-at-参数-时间-在一个指定的时间执行一个指定任务，只能执行一次"><a href="#84-at-参数-时间-在一个指定的时间执行一个指定任务，只能执行一次" class="headerlink" title="84.at [参数] [时间] | 在一个指定的时间执行一个指定任务，只能执行一次"></a>84.at [参数] [时间] | 在一个指定的时间执行一个指定任务，只能执行一次</h1><p>HH:MM[am|pm] + number [minutes|hours|days|weeks] 强制在某年某月某日的某时刻进行该项任务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">atq 查看系统未执行的任务</div><div class="line">atrm n 删除编号为n的任务</div><div class="line">at -c n 显示编号为n的任务的内容</div></pre></td></tr></table></figure></p>
<h1 id="85-crontab-定时任务调度"><a href="#85-crontab-定时任务调度" class="headerlink" title="85.crontab | 定时任务调度"></a>85.crontab | 定时任务调度</h1><p>file    载入crontab<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-e  编辑某个用户的crontab文件内容</div><div class="line">-l  显示某个用户的crontab文件内容</div><div class="line">-r  删除某个用户的crontab文件</div></pre></td></tr></table></figure></p>
<h1 id="86-ifconfig-网络设备-参数-查看和配置网络设备"><a href="#86-ifconfig-网络设备-参数-查看和配置网络设备" class="headerlink" title="86.ifconfig [网络设备] [参数] | 查看和配置网络设备"></a>86.ifconfig [网络设备] [参数] | 查看和配置网络设备</h1><h1 id="87-route-显示和操作IP路由表"><a href="#87-route-显示和操作IP路由表" class="headerlink" title="87.route | 显示和操作IP路由表"></a>87.route | 显示和操作IP路由表</h1><h1 id="88-ping-参数-主机名或IP地址-测试与目标主机的连通性"><a href="#88-ping-参数-主机名或IP地址-测试与目标主机的连通性" class="headerlink" title="88.ping [参数] [主机名或IP地址] | 测试与目标主机的连通性"></a>88.ping [参数] [主机名或IP地址] | 测试与目标主机的连通性</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-q  只显示最后的结果</div></pre></td></tr></table></figure>
<h1 id="89-netstat-显示与IP、TCP、UDP和ICMP协议相关的统计数据"><a href="#89-netstat-显示与IP、TCP、UDP和ICMP协议相关的统计数据" class="headerlink" title="89.netstat | 显示与IP、TCP、UDP和ICMP协议相关的统计数据"></a>89.netstat | 显示与IP、TCP、UDP和ICMP协议相关的统计数据</h1><h1 id="90-telnet-参数-主机-用于远程登录，采用明文传送报文，安全性不好"><a href="#90-telnet-参数-主机-用于远程登录，采用明文传送报文，安全性不好" class="headerlink" title="90.telnet [参数] [主机] | 用于远程登录，采用明文传送报文，安全性不好"></a>90.telnet [参数] [主机] | 用于远程登录，采用明文传送报文，安全性不好</h1><h1 id="91-rcp-参数-源文件-目标文件-远程文件拷贝"><a href="#91-rcp-参数-源文件-目标文件-远程文件拷贝" class="headerlink" title="91.rcp [参数] [源文件] [目标文件] | 远程文件拷贝"></a>91.rcp [参数] [源文件] [目标文件] | 远程文件拷贝</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-r  递归复制</div><div class="line">-p  保留源文件的属性</div><div class="line">usage: rcp –r remote_hostname:remote_dir local_dir</div></pre></td></tr></table></figure>
<h1 id="92-wget-参数-URL地址-直接从网络上下载文件"><a href="#92-wget-参数-URL地址-直接从网络上下载文件" class="headerlink" title="92.wget [参数] [URL地址] | 直接从网络上下载文件"></a>92.wget [参数] [URL地址] | 直接从网络上下载文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-o FILE 把记录写到FILE文件中    eg : wget -O a.txt URL</div><div class="line">wget --limit-rate=300k URL  限速下载</div></pre></td></tr></table></figure>
<h1 id="93-awk"><a href="#93-awk" class="headerlink" title="93.awk"></a>93.awk</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-F 分隔符  以分隔符分隔内容</div><div class="line">&#123;&#125;  要执行的脚本内容 eg:cat /etc/passwd |awk  -F &apos;:&apos;  &apos;&#123;print $1&quot;\t&quot;$7&#125;&apos;</div></pre></td></tr></table></figure>
<h1 id="94-sed-对数据行进行替换、删除、新增、选取等操作"><a href="#94-sed-对数据行进行替换、删除、新增、选取等操作" class="headerlink" title="94.sed 对数据行进行替换、删除、新增、选取等操作"></a>94.sed 对数据行进行替换、删除、新增、选取等操作</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a   新增，在新的下一行出现</div><div class="line">c   取代，取代 n1,n2 之间的行 eg: sed &apos;1,2c Hi&apos; ab</div><div class="line">d   删除</div><div class="line">i   插入，在新的上一行出现</div></pre></td></tr></table></figure>
<h1 id="95-paste-合并文件，需确保合并的两文件行数相同"><a href="#95-paste-合并文件，需确保合并的两文件行数相同" class="headerlink" title="95.paste 合并文件，需确保合并的两文件行数相同"></a>95.paste 合并文件，需确保合并的两文件行数相同</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-d  指定不同于空格或tab键的域分隔符</div><div class="line">-s  按行合并，单独一个文件为一行</div></pre></td></tr></table></figure>
<h1 id="96-su-参数-user-切换登陆"><a href="#96-su-参数-user-切换登陆" class="headerlink" title="96.su [参数] user | 切换登陆"></a>96.su [参数] user | 切换登陆</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-l  切换时连同环境变量、工作目录一起改变</div><div class="line">-c command  执行command变回原来的使用者</div></pre></td></tr></table></figure>
<h1 id="97-sudo-以特定用户的权限执行特定命令"><a href="#97-sudo-以特定用户的权限执行特定命令" class="headerlink" title="97.sudo | 以特定用户的权限执行特定命令"></a>97.sudo | 以特定用户的权限执行特定命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-l  列出当前用户可执行的命令</div><div class="line">-u username#uid 以指定用户执行命令</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-ls-选项-目录名-列出相关目录下的所有目录和文件&quot;&gt;&lt;a href=&quot;#1-ls-选项-目录名-列出相关目录下的所有目录和文件&quot; class=&quot;headerlink&quot; title=&quot;1.ls [选项] [目录名 | 列出相关目录下的所有目录和文件&quot;&gt;&lt;/a&gt;1.ls [选项] [目录名 | 列出相关目录下的所有目录和文件&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;-a  列出包括.a开头的隐藏文件的所有文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-A  通-a，但不列出&amp;quot;.&amp;quot;和&amp;quot;..&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-l  列出文件的详细信息&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-c  根据ctime排序显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-t  根据文件修改时间排序&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;---color[=WHEN] 用色彩辨别文件类型 WHEN 可以是&amp;apos;never&amp;apos;、&amp;apos;always&amp;apos;或&amp;apos;auto&amp;apos;其中之一&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="http://lzrlizhirong.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="http://lzrlizhirong.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Spark快速大数据分析</title>
    <link href="http://lzrlizhirong.github.io/2017/02/26/Spark%E5%BF%AB%E9%80%9F%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    <id>http://lzrlizhirong.github.io/2017/02/26/Spark快速大数据分析/</id>
    <published>2017-02-26T12:59:55.000Z</published>
    <updated>2017-02-27T11:04:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>原书电子版下载地址：<br><a href="http://download.csdn.net/download/wangcunlin/9547494" target="_blank" rel="external">http://download.csdn.net/download/wangcunlin/9547494</a><br><a id="more"></a><br>整本书梳理如下：<br><img src="/2017/02/26/Spark快速大数据分析/../../../../images/spark1.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原书电子版下载地址：&lt;br&gt;&lt;a href=&quot;http://download.csdn.net/download/wangcunlin/9547494&quot;&gt;http://download.csdn.net/download/wangcunlin/9547494&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="http://lzrlizhirong.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="spark" scheme="http://lzrlizhirong.github.io/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>推荐引擎系统结构</title>
    <link href="http://lzrlizhirong.github.io/2017/02/26/%E6%8E%A8%E8%8D%90%E5%BC%95%E6%93%8E%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    <id>http://lzrlizhirong.github.io/2017/02/26/推荐引擎系统结构/</id>
    <published>2017-02-26T10:51:35.000Z</published>
    <updated>2017-02-27T11:03:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>推荐引擎系统结构图如下：<br><img src="/2017/02/26/推荐引擎系统结构/../../../../images/tuijian1.jpeg" alt=""><br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;推荐引擎系统结构图如下：&lt;br&gt;&lt;img src=&quot;/2017/02/26/推荐引擎系统结构/../../../../images/tuijian1.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="http://lzrlizhirong.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="推荐系统" scheme="http://lzrlizhirong.github.io/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="架构" scheme="http://lzrlizhirong.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>为什么这么多人认为到西藏旅游就能找到人生真谛？</title>
    <link href="http://lzrlizhirong.github.io/2017/02/24/why-do-so-many-people-think-that-travel-to-tibet-will-be-able-to-find-the-true-meaning-of-life/"/>
    <id>http://lzrlizhirong.github.io/2017/02/24/why-do-so-many-people-think-that-travel-to-tibet-will-be-able-to-find-the-true-meaning-of-life/</id>
    <published>2017-02-24T07:23:48.000Z</published>
    <updated>2017-02-24T07:27:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>偶然看到的一篇短文，分享给有缘的你。</p>
<hr>
<p><strong>因为他们走过的地方还不够多。他们所谓的真谛是如此的肤浅。</strong></p>
<p>在这个信仰缺失的国度和信仰缺失的时代，一些人高喊着辞职去XX，去XX流浪，心灵的旅行之类的总总话语。奔赴某地，看到了一些日常生活中不曾见识的人文抑或自然景观，自以为心受洗礼，旅行结束回到家中，却与俗人无异。<br><a id="more"></a><br><strong>标榜旅行经历炫耀所见所闻的人多之又多，而真正因为旅行而获得真谛，改变人生的人少之又少。</strong></p>
<p>我也曾入藏，所见所闻虽然震撼，可是说到真谛，可真是无法总结无法表达。</p>
<p>回到丽江后接待沙发客，数来也有百十来个，有揣着复古交卷相机的豆瓣女青年，有日行80公里胡子拉碴的徒步者，有骑摩托环游中国的大龄未婚女青年，有浮夸牛逼旅途的背包客。</p>
<p>在众多人之中，只有一个女孩真正打动过我。</p>
<p>皮肤黝黑，穿着拖鞋，一个学生式的书包，没有任何户外设备和相机。 签证到期，她从印度回国，重游云南，除非我问到，她从不主动谈自己那些旅行的故事。</p>
<p>她在国内旅游三年，在国外七年，经费靠打工和家中支持。有一个瑞士的男友。 她不写游记，不拍照片，上上网只查查基础的信息。</p>
<p>她坐在我身旁，我完全能感受到内心的平和和宁静。 深夜，我和她坐在古城的院子里喝酒。 我问她，你去过这么多地方，哪里让你感觉最好？</p>
<p>她说，哪都好呀。 我问她，你会一直这样玩下去么？ 她说，再看吧。 我问她，你出来这么久，走过这么地方，有没有什么深刻的感悟。</p>
<p>她说，哪有那么多感悟，我只是想多走走看看，我觉得这样挺有意思的。 就是这样平和的对话，她是我至今最欣赏的旅者。</p>
<p><strong>哪有那么多真谛。</strong></p>
<p><strong>大音希声，大象无形。</strong></p>
<p><strong>心中安定的人，走到哪里都是春天。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;偶然看到的一篇短文，分享给有缘的你。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;因为他们走过的地方还不够多。他们所谓的真谛是如此的肤浅。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在这个信仰缺失的国度和信仰缺失的时代，一些人高喊着辞职去XX，去XX流浪，心灵的旅行之类的总总话语。奔赴某地，看到了一些日常生活中不曾见识的人文抑或自然景观，自以为心受洗礼，旅行结束回到家中，却与俗人无异。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂文" scheme="http://lzrlizhirong.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
      <category term="旅行" scheme="http://lzrlizhirong.github.io/categories/%E6%9D%82%E6%96%87/%E6%97%85%E8%A1%8C/"/>
    
    
      <category term="旅行" scheme="http://lzrlizhirong.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
      <category term="杂文" scheme="http://lzrlizhirong.github.io/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>人为什么要旅行</title>
    <link href="http://lzrlizhirong.github.io/2017/02/24/why-do-people-travel/"/>
    <id>http://lzrlizhirong.github.io/2017/02/24/why-do-people-travel/</id>
    <published>2017-02-24T07:07:00.000Z</published>
    <updated>2017-02-24T07:13:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>“有些人，一辈子缩在一个角落里， 连窗外都懒得看，更别说踏出门……” 你不出去走走，真的会以为这就是世界。</p>
<p>生命不是一场赛跑，而是一次旅行。比赛在乎终点，而旅行在乎沿途风景。常人说：不登山，不知山高；不涉水，不晓水深；不赏奇景，怎知其绝妙。<br><a id="more"></a><br><img src="/2017/02/24/why-do-people-travel/../../../../images/people1.jpeg" alt=""></p>
<p>读万卷书，还须行万里路。旅行，可以使你中断每天周而复始的凡人琐事，对平凡俗气的生活，是一种暂时的解脱，让自己的胸怀得以舒展，心灵得以净化！</p>
<p>早上，迎着新一轮的朝阳，伴着晨起的钟声，开始我一天的旅程；傍晚，看着火红的夕阳西下，微笑着收获着一天的美好；晚上，看着满天繁星点点，轻轻地对自己说晚安，明天，将会是一段全新的征程。</p>
<p>趁年轻，趁还有梦想，想去的地方，现在就要去。想做的事情，现在就去做。哪怕搭车、睡沙发、住客栈，享受在路上，看风景是不变的信念！</p>
<p>人的一生需要考虑的太多太多，经历的也太多太多，得空往自己的心里书写一个坚定的“静”字，放下那些虚幻，真心实意的放松，这些年，这一生，哪有时间会留给你思考和休息？你的昨天，是多少人不曾经历过又奢求不来的；你的今天，又是多少人想尽一切方法都回不来的曾经啊。 你是否也和我一样？拥有一颗想要出走的心，却依然坐在一张不足一平的办公椅上？</p>
<p>旅行不要再等，说走就走吧。</p>
<p>爱护自己的梦想，也要善待自己！！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“有些人，一辈子缩在一个角落里， 连窗外都懒得看，更别说踏出门……” 你不出去走走，真的会以为这就是世界。&lt;/p&gt;
&lt;p&gt;生命不是一场赛跑，而是一次旅行。比赛在乎终点，而旅行在乎沿途风景。常人说：不登山，不知山高；不涉水，不晓水深；不赏奇景，怎知其绝妙。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂文" scheme="http://lzrlizhirong.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="写作" scheme="http://lzrlizhirong.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
      <category term="旅行" scheme="http://lzrlizhirong.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>安装impala</title>
    <link href="http://lzrlizhirong.github.io/2017/02/23/%E5%AE%89%E8%A3%85impala/"/>
    <id>http://lzrlizhirong.github.io/2017/02/23/安装impala/</id>
    <published>2017-02-23T08:21:20.000Z</published>
    <updated>2017-02-24T02:52:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-默认安装好hadoop并且能正常启动-只需hdfs即可"><a href="#1-默认安装好hadoop并且能正常启动-只需hdfs即可" class="headerlink" title="1.默认安装好hadoop并且能正常启动(只需hdfs即可)"></a>1.默认安装好hadoop并且能正常启动(只需hdfs即可)</h1><h1 id="2-安装如下rpm包-需要root权限-注意顺序"><a href="#2-安装如下rpm包-需要root权限-注意顺序" class="headerlink" title="2.安装如下rpm包(需要root权限 注意顺序)"></a>2.安装如下rpm包(需要root权限 注意顺序)</h1><blockquote>
<p>bigtop-utils-0.7.0+cdh5.8.2+0-1.cdh5.8.2.p0.5.el6.noarch.rpm<br>impala-kudu-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>impala-kudu-catalog-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>impala-kudu-state-store-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>impala-kudu-server-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>impala-kudu-shell-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>impala-kudu-udf-devel-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm</p>
</blockquote>
<a id="more"></a>
<p>　　安装命令如下:</p>
<blockquote>
<p>rpm -ivh ./bigtop-utils-0.7.0+cdh5.8.2+0-1.cdh5.8.2.p0.5.el6.noarch.rpm<br>rpm -ivh ./impala-kudu-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm –nodeps //需要取消依赖安装，不然安装不过<br>rpm -ivh ./impala-kudu-catalog-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>rpm -ivh ./impala-kudu-state-store-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>rpm -ivh ./impala-kudu-server-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>rpm -ivh ./impala-kudu-shell-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm<br>rpm -ivh ./impala-kudu-udf-devel-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm</p>
</blockquote>
<p>其中catalog和state-store只能主节点一个(可安装于不同的主机) server和shell可以多台(可跟catalog和state-store不是同一台)</p>
<h1 id="3-配置环境"><a href="#3-配置环境" class="headerlink" title="3.配置环境"></a>3.配置环境</h1><h2 id="3-1-修改-etc-default-bigtop-utils文件"><a href="#3-1-修改-etc-default-bigtop-utils文件" class="headerlink" title="3.1.修改/etc/default/bigtop-utils文件"></a>3.1.修改/etc/default/bigtop-utils文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/java/jdk1.8.0_65 //设置java home</div></pre></td></tr></table></figure>
<h2 id="3-2-修改-etc-default-impala文件"><a href="#3-2-修改-etc-default-impala文件" class="headerlink" title="3.2.修改/etc/default/impala文件"></a>3.2.修改/etc/default/impala文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">IMPALA_CATALOG_SERVICE_HOST=172.16.104.120 //为catalog主机Ip 也可以主机名 注意配置hosts</div><div class="line">IMPALA_STATE_STORE_HOST=172.16.104.120 //为state-store主机Ip</div><div class="line">IMPALA_LOG_DIR=/var/log/impala //配置日志路径 默认为/var/log/impala</div></pre></td></tr></table></figure>
<h2 id="3-3-在-etc-impala-conf-dist目录下添加core-site-xml和hdfs-site-xml文件-建议从hadoop配置文件中拷贝"><a href="#3-3-在-etc-impala-conf-dist目录下添加core-site-xml和hdfs-site-xml文件-建议从hadoop配置文件中拷贝" class="headerlink" title="3.3.在/etc/impala/conf.dist目录下添加core-site.xml和hdfs-site.xml文件(建议从hadoop配置文件中拷贝)"></a>3.3.在/etc/impala/conf.dist目录下添加core-site.xml和hdfs-site.xml文件(建议从hadoop配置文件中拷贝)</h2><p>其中core-site.xml添加内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;!-- impala --&gt;</div><div class="line">&lt;property&gt;</div><div class="line">    &lt;name&gt;dfs.client.read.shortcircuit&lt;/name&gt;</div><div class="line">    &lt;value&gt;true&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">    &lt;name&gt;dfs.client.read.shortcircuit.skip.checksum&lt;/name&gt;</div><div class="line">    &lt;value&gt;false&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">    &lt;name&gt;dfs.datanode.hdfs-blocks-metadata.enabled&lt;/name&gt;</div><div class="line">    &lt;value&gt;true&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div></pre></td></tr></table></figure></p>
<p>hdfs-site.xml添加内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;!--impala--&gt;</div><div class="line">&lt;property&gt;</div><div class="line">    &lt;name&gt;dfs.datanode.hdfs-blocks-metadata.enabled&lt;/name&gt;</div><div class="line">    &lt;value&gt;true&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">    &lt;name&gt;dfs.block.local-path-access.user&lt;/name&gt;</div><div class="line">    &lt;value&gt;impala&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">    &lt;name&gt;dfs.client.file-block-storage-locations.timeout.millis&lt;/name&gt;</div><div class="line">    &lt;value&gt;60000&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div></pre></td></tr></table></figure></p>
<h1 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4.启动服务"></a>4.启动服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">　　service impala-catalog start</div><div class="line">　　service impala-state-store start</div><div class="line">　　service impala-server start</div></pre></td></tr></table></figure>
<h1 id="5-验证"><a href="#5-验证" class="headerlink" title="5.验证"></a>5.验证</h1><p>第一种方式:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ps -aux|grep impala-catalog</div><div class="line">ps -aux|grep impala-state</div><div class="line">ps -aux|grep impalad</div></pre></td></tr></table></figure></p>
<p>第二种方式:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">impala-shell(默认连接本机的server)</div><div class="line">impala-shell -i 172.16.104.120 //连接指定ip的server impala-shell 如果是no connect状态 可以输入connect 172.16.104.120进行连接</div></pre></td></tr></table></figure></p>
<p>第三种方式(webUI):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">172.16.104.120:25000</div><div class="line">172.16.104.120:25010</div><div class="line">172.16.104.120:25020</div></pre></td></tr></table></figure></p>
<h1 id="6-其他"><a href="#6-其他" class="headerlink" title="6.其他"></a>6.其他</h1><p>Impala Daemon(Impala 守护进程前端端口):21000 &gt;&gt; impala-shell, Beeswax, Cloudera ODBC 1.2 驱动 用于传递命令和接收结果<br>　　<br>Impala Daemon(Impala 守护进程前端端口):21050 &gt;&gt; 被使用 JDBC 或 Cloudera ODBC 2.0 及以上驱动的诸如 BI 工具之类的应用用来传递命令和接收结果<br>　　<br>Impala Daemon(Impala 守护进程后端端口):22000 &gt;&gt; Impala 守护进程用该端口互相通讯<br>　　<br>Impala Daemon(StateStore订阅服务端口):23000 &gt;&gt; Impala 守护进程监听该端口接收来源于 state store 的更新<br>　　<br>StateStore Daemon(StateStore 服务端口):24000 &gt;&gt; State store 监听该端口的registration/unregistration 请求</p>
<p>Catalog Daemon(StateStore 服务端口):26000 &gt;&gt; 目录服务使用该端口与Imp</p>
<p>Impala Daemon(HTTP 服务器端口):25000 &gt;&gt; Impala web 接口，管理员用于监控和故障排除</p>
<p>StateStore Daemon(HTTP 服务器端口):25010 &gt;&gt; StateStore web 接口，管理员用于监控和故障排除</p>
<p>Catalog Daemon(HTTP 服务器端口):25020 &gt;&gt; 目录服务 web 接口，管理员用于监控和故障排除，Impala 1.2 开始使用</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-默认安装好hadoop并且能正常启动-只需hdfs即可&quot;&gt;&lt;a href=&quot;#1-默认安装好hadoop并且能正常启动-只需hdfs即可&quot; class=&quot;headerlink&quot; title=&quot;1.默认安装好hadoop并且能正常启动(只需hdfs即可)&quot;&gt;&lt;/a&gt;1.默认安装好hadoop并且能正常启动(只需hdfs即可)&lt;/h1&gt;&lt;h1 id=&quot;2-安装如下rpm包-需要root权限-注意顺序&quot;&gt;&lt;a href=&quot;#2-安装如下rpm包-需要root权限-注意顺序&quot; class=&quot;headerlink&quot; title=&quot;2.安装如下rpm包(需要root权限 注意顺序)&quot;&gt;&lt;/a&gt;2.安装如下rpm包(需要root权限 注意顺序)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;bigtop-utils-0.7.0+cdh5.8.2+0-1.cdh5.8.2.p0.5.el6.noarch.rpm&lt;br&gt;impala-kudu-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm&lt;br&gt;impala-kudu-catalog-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm&lt;br&gt;impala-kudu-state-store-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm&lt;br&gt;impala-kudu-server-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm&lt;br&gt;impala-kudu-shell-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm&lt;br&gt;impala-kudu-udf-devel-2.7.0+cdh5.9.0+0-1.cdh5.9.0.p0.11.el6.x86_64.rpm&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="impala" scheme="http://lzrlizhirong.github.io/categories/impala/"/>
    
    
      <category term="impala" scheme="http://lzrlizhirong.github.io/tags/impala/"/>
    
  </entry>
  
  <entry>
    <title>安装kudu</title>
    <link href="http://lzrlizhirong.github.io/2017/02/23/%E5%AE%89%E8%A3%85kudu/"/>
    <id>http://lzrlizhirong.github.io/2017/02/23/安装kudu/</id>
    <published>2017-02-23T02:17:55.000Z</published>
    <updated>2017-02-23T08:40:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.默认安装好yum</strong><br><strong>2.需以root身份安装</strong><br><strong>3.安装ntp</strong><br>　　<code>yum install ntp -y</code><br><strong>4.启动ntp</strong><br>　　<code>/etc/init.d/ntpd start|stop|restart</code><br><a id="more"></a><br><strong>5.添加安装包yum源</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[cloudera-kudu]</div><div class="line"># Packages for Cloudera&apos;s Distribution for kudu, Version 0, on RedHat or CentOS 6 x86_64</div><div class="line">name=Cloudera&apos;s Distribution for kudu, Version 0</div><div class="line">baseurl=http://archive.cloudera.com/beta/kudu/redhat/6/x86_64/kudu/0/</div><div class="line">gpgkey=http://archive.cloudera.com/beta/kudu/redhat/6/x86_64/kudu/RPM-GPG-KEY-cloudera</div><div class="line">gpgcheck = 1</div></pre></td></tr></table></figure></p>
<p><strong>6.1安装kudu(yum 安装方式)</strong><br><code>yum install kudu kudu-master kudu-tserver kudu-client0 kudu-client-devel -y</code><br>其中子节点可以不用安装kudu-master<br><strong>6.2安装kudu(rpm安装方式)</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">rpm -ivh kudu-0.9.1+cdh5.4.0+0-1.kudu0.9.1.p0.32.el6.x86_64.rpm</div><div class="line">rpm -ivh kudu-master-0.9.1+cdh5.4.0+0-1.kudu0.9.1.p0.32.el6.x86_64.rpm</div><div class="line">rpm -ivh kudu-tserver-0.9.1+cdh5.4.0+0-1.kudu0.9.1.p0.32.el6.x86_64.rpm</div><div class="line">rpm -ivh kudu-client0-0.9.1+cdh5.4.0+0-1.kudu0.9.1.p0.32.el6.x86_64.rpm</div><div class="line">rpm -ivh kudu-client-devel-0.9.1+cdh5.4.0+0-1.kudu0.9.1.p0.32.el6.x86_64.rpm</div></pre></td></tr></table></figure></p>
<p><strong>7.配置参数(需要创建好相应目录)</strong><br>master:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">1./etc/default/kudu-master</div><div class="line">    export FLAGS_log_dir=/opt/kudu-0.9.1/log //日志目录</div><div class="line">    export FLAGS_rpc_bind_addresses=dsj01:7051</div><div class="line">2./etc/kudu/conf.dist/master.gflagfile</div><div class="line">    --fs_wal_dir=/opt/kudu-0.9.1/data/master</div><div class="line">    --fs_data_dirs=/opt/kudu-0.9.1/data/master</div><div class="line">    --default_num_replicas=1 //设置备份数 不设置默认为3</div></pre></td></tr></table></figure></p>
<p>tserver:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">1./etc/default/kudu-tserver</div><div class="line">    export FLAGS_log_dir=/opt/kudu-0.9.1/log</div><div class="line">    export FLAGS_rpc_bind_addresses=dsj02:7050</div><div class="line">2./etc/kudu/conf.dist/tserver.gflagfile</div><div class="line">    --fs_wal_dir=/opt/kudu-0.9.1/data/tserver</div><div class="line">    --fs_data_dirs=/opt/kudu-0.9.1/data/tserver</div><div class="line">    --tserver_master_addrs=dsj01:7051 //绑定master节点</div></pre></td></tr></table></figure></p>
<p><strong>8.启动kudu</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service kudu-master start|stop</div><div class="line">service kudu-tserver start|stop</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1.默认安装好yum&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.需以root身份安装&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;3.安装ntp&lt;/strong&gt;&lt;br&gt;　　&lt;code&gt;yum install ntp -y&lt;/code&gt;&lt;br&gt;&lt;strong&gt;4.启动ntp&lt;/strong&gt;&lt;br&gt;　　&lt;code&gt;/etc/init.d/ntpd start|stop|restart&lt;/code&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="NoSQL" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/NoSQL/"/>
    
    
      <category term="kudu" scheme="http://lzrlizhirong.github.io/tags/kudu/"/>
    
      <category term="NoSQL" scheme="http://lzrlizhirong.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>flume+kafka+spark streaming整合</title>
    <link href="http://lzrlizhirong.github.io/2017/02/22/flume-kafka-spark-streaming%E6%95%B4%E5%90%88/"/>
    <id>http://lzrlizhirong.github.io/2017/02/22/flume-kafka-spark-streaming整合/</id>
    <published>2017-02-22T14:24:04.000Z</published>
    <updated>2017-02-23T08:47:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.安装好flume；</strong><br><strong>2.安装好kafka；</strong><br><strong>3.安装好spark；</strong><br><strong>4.流程说明:</strong><br><code>日志文件-&gt;flume-&gt;kafka-&gt;spark streaming</code><br>flume输入:文件<br>flume输出:kafka的输入<br>kafka输出:spark 输入<br><a id="more"></a><br><strong>5.整合步骤:</strong><br><strong>(1).将插件jar拷贝到flume的lib目录下</strong><br>a. flumeng-kafka-plugin.jar<br>b. metrics-annotation-2.2.0.jar</p>
<p><strong>(2).将配置文件producer.properties拷贝到flume的conf目录下</strong><br>配置文件内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">#agentsection</div><div class="line">producer.sources=s</div><div class="line">producer.channels=c</div><div class="line">producer.sinks=r</div><div class="line"></div><div class="line">#sourcesection</div><div class="line">producer.sources.s.type=exec</div><div class="line">producer.sources.s.command=tail -f -n+1 /opt/apache-flume-1.6.0/data/testFlumeKafka.txt</div><div class="line">producer.sources.s.channels=c</div><div class="line"></div><div class="line"># Eachsink&apos;s type must be defined</div><div class="line">producer.sinks.r.type=org.apache.flume.plugins.KafkaSink</div><div class="line">producer.sinks.r.metadata.broker.list=namenode:19092,datanode1:19092,datanode2:19092</div><div class="line">producer.sinks.r.partition.key=0</div><div class="line">　　　　　　producer.sinks.r.partitioner.class=org.apache.flume.plugins.SinglePartition</div><div class="line">producer.sinks.r.serializer.class=kafka.serializer.StringEncoder</div><div class="line">producer.sinks.r.request.required.acks=0</div><div class="line">producer.sinks.r.max.message.size=1000000</div><div class="line">producer.sinks.r.producer.type=sync</div><div class="line">producer.sinks.r.custom.encoding=UTF-8</div><div class="line">producer.sinks.r.custom.topic.name=test //需建好对应topic</div><div class="line"></div><div class="line">#Specifythe channel the sink should use</div><div class="line">producer.sinks.r.channel=c</div><div class="line"></div><div class="line"># Eachchannel&apos;s type is defined.</div><div class="line">producer.channels.c.type=memory</div><div class="line">producer.channels.c.capacity=1000</div><div class="line">producer.channels.c.transactionCapacity=100</div></pre></td></tr></table></figure></p>
<p><strong>(3).启动flume-ng</strong><br><code>flume-ng agent -c . -f /opt/apache-flume-1.6.0/conf/producer.conf -n producer</code></p>
<p><strong>(4).启动kafka-server</strong><br><code>bin/kafka-server-start.sh config/server.properties</code></p>
<p><strong>(5).启动kafka-consumer(默认已经创建了test topic)</strong><br><code>bin/kafka-console-consumer.sh --zookeeper namenode:12181,datanode1:12181,datanode2:12181 --topic test --from-beginning</code></p>
<p><strong>(6).启动spark</strong><br><code>sbin/start-all.sh</code></p>
<p><strong>(7).运行spark streaming Demo</strong><br><code>run-example org.apache.spark.examples.streaming.JavaKafkaWordCount namenode:12181 test-consumer-group test 3 &gt;&gt; test.log</code></p>
<p><strong>(8).在对应的日志文件中输入内容,则可以在test.log文件看到单词计数的结果</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1.安装好flume；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.安装好kafka；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;3.安装好spark；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;4.流程说明:&lt;/strong&gt;&lt;br&gt;&lt;code&gt;日志文件-&amp;gt;flume-&amp;gt;kafka-&amp;gt;spark streaming&lt;/code&gt;&lt;br&gt;flume输入:文件&lt;br&gt;flume输出:kafka的输入&lt;br&gt;kafka输出:spark 输入&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://lzrlizhirong.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="flume" scheme="http://lzrlizhirong.github.io/tags/flume/"/>
    
      <category term="kafka" scheme="http://lzrlizhirong.github.io/tags/kafka/"/>
    
      <category term="spark streaming" scheme="http://lzrlizhirong.github.io/tags/spark-streaming/"/>
    
  </entry>
  
  <entry>
    <title>经验贴--kudu在小米的实践应用</title>
    <link href="http://lzrlizhirong.github.io/2017/02/22/%E7%BB%8F%E9%AA%8C%E8%B4%B4-kudu%E5%9C%A8%E5%B0%8F%E7%B1%B3%E7%9A%84%E5%AE%9E%E8%B7%B5%E5%BA%94%E7%94%A8/"/>
    <id>http://lzrlizhirong.github.io/2017/02/22/经验贴-kudu在小米的实践应用/</id>
    <published>2017-02-22T10:06:45.000Z</published>
    <updated>2017-02-22T10:24:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h1><p>本文是小米工程师常冰琳于2016年10月25日晚10点在“大数据产业联合会”微信群分享的内容，整理分享给大家。</p>
<h1 id="2-小米使用kudu的背景"><a href="#2-小米使用kudu的背景" class="headerlink" title="2.小米使用kudu的背景"></a>2.小米使用kudu的背景</h1><p>小米大概在14年中开始和cloudera合作，作为kudu小白鼠用户，帮cloudera在生产环境验证kudu。kudu+Impala可以帮助我们解决实时数据的ad-hoc查询需求。<br><a id="more"></a><br>在kudu之前，我们的大数据分析pipeline大概是有这几种：</p>
<blockquote>
<ol>
<li>数据源-&gt; scribe打日志到HDFS -&gt; MR/Hive/Spark -&gt; HDFS Parquet -&gt; Impala -&gt; 结果service<br>这个数据流一般用来分析各种日志。</li>
<li>数据源 -&gt; 实时更新HBase/Mysql -&gt; 每天批量导出Parquet-&gt; Impala -&gt; 结果serve<br>这个数据流一般用来分析状态数据，也就是一般需要随机更新的数据，比如用户profile之类。</li>
</ol>
</blockquote>
<p>这两条数据流主要由几个问题：</p>
<blockquote>
<ol>
<li>数据从生成到能够被高效查询的列存储，整个数据流延迟比较大，一般是小时级别到一天；</li>
<li>很多数据的日志到达时间和逻辑时间是不一致的，一般存在一些随机延迟。</li>
</ol>
</blockquote>
<p>比如很多mobile app统计应用，这些tracing event发生后，很可能过一段时间才被后端tracing server收集到。</p>
<p>我们经常看到一些hive查询，分析一天或者一小时的数据，但是要读2-3天或者多个小时的日志，然后过滤出实际想要的记录。</p>
<p>对于一些实时分析需求，有一些可以通过流处理来解决，不过他肯定没用SQL方便，另外流式处理只能做固定的数据分析，对ad-hoc查询无能为力</p>
<p>kudu的特点正好可以来配合impala搭建实时ad-hoc分析应用。</p>
<p>改进后的数据流大概是这个样子：</p>
<blockquote>
<ol>
<li>数据源 -&gt; kafka -&gt; ETL(Storm) -&gt; kudu -&gt; Impala</li>
<li>数据源 -&gt; kudu -&gt; Impala</li>
</ol>
</blockquote>
<p>数据流1 主要是为需要进一步做ETL的应用使用的，另外kafka可以当做一个buffer，当写吞吐有毛刺时，kafka可以做一个缓冲。</p>
<p>如果应用有严格的实时需求，就是只要数据源写入就必须能够查到，就需要使用数据流2。</p>
<h1 id="3-引入kudu的目的"><a href="#3-引入kudu的目的" class="headerlink" title="3.引入kudu的目的"></a>3.引入kudu的目的</h1><p>引入kudu主要是用来替换 HDFS+parquet的。</p>
<h1 id="4-kudu的列存和parquet列存有啥区别？"><a href="#4-kudu的列存和parquet列存有啥区别？" class="headerlink" title="4.kudu的列存和parquet列存有啥区别？"></a>4.kudu的列存和parquet列存有啥区别？</h1><p>从功能上说，kudu的列存除了提供跟parquet接近的scan速度，还支持随机读写。支持随机写，数据就可以实时灌入存储中，达到实时查询的效果；但是parquet文件只能批量写，所以一般只能定期生成，所以增大了延迟。kudu的存储类似hbase的lsm存储。</p>
<h1 id="5-为什么说kudu的scan会比kylin快呢"><a href="#5-为什么说kudu的scan会比kylin快呢" class="headerlink" title="5.为什么说kudu的scan会比kylin快呢"></a>5.为什么说kudu的scan会比kylin快呢</h1><p>kylin是存储在hbase上的，kudu的scan为什么比hbase快，简单的说kudu是真正的列存储，hbase只是列簇存储。kudu是有schema的，每一列的数据是在文件中已数组的形式保存的，而hbase存储在hfile里面的还是sort好的(rowkey, column, timestamp, value)对，scan是开销要多很多，具体需要看kudu的paper了，在这里文字不好解释。</p>
<h1 id="6-storm-写kudu的吞吐量能到多少，和storm写hbase比呢"><a href="#6-storm-写kudu的吞吐量能到多少，和storm写hbase比呢" class="headerlink" title="6.storm 写kudu的吞吐量能到多少，和storm写hbase比呢"></a>6.storm 写kudu的吞吐量能到多少，和storm写hbase比呢</h1><p>我们在71个节点的集群做了测试，随机写性能：随机写26亿条记录：每个节点大概4W 随机写性能。</p>
<p>大概的情况如下：</p>
<blockquote>
<p><strong>71 Node cluster</strong><br><strong><em>Hardware</em></strong><br>CPU: E5-2620 2.1GHz <em> 24 core  Memory: 64GB<br>Network: 1Gb  Disk: 12 HDD<br><strong><em>Software</em></strong><br>Hadoop2.6/Impala 2.1/Kudu<br><em>*<em>3个大表，其中一个大表每天：</em></em></em><br>~2.6 Billion rows<br>~270 bytes/row<br>17 columns, 5 key columns</p>
</blockquote>
<p>storm到kudu，按照每天26亿数据来算，每秒大概30000条记录吧。<br><img src="/2017/02/22/经验贴-kudu在小米的实践应用/../../../../images/kdm1.jpeg" alt=""><br>这个是我们的应用挑出的6个查询，做的查询性能对比。同样6个查询，查询parquet和查询kudu做的对比。当时kudu的设计目标是接近parquet的scan性能，惊喜的是，目前kudu的scan性能在生产环境下有时还比parquet快一些。</p>
<h1 id="7-像hbase有coprocessor，kudu有类似的计算功能吗？"><a href="#7-像hbase有coprocessor，kudu有类似的计算功能吗？" class="headerlink" title="7.像hbase有coprocessor，kudu有类似的计算功能吗？"></a>7.像hbase有coprocessor，kudu有类似的计算功能吗？</h1><p>kudud。kudu有predicatepushdown，目前有impala使用时，scan时是把一些过滤提交给kudu去做的。</p>
<h1 id="8-你们是想用kudu替换hbase还是一起搭配用？"><a href="#8-你们是想用kudu替换hbase还是一起搭配用？" class="headerlink" title="8.你们是想用kudu替换hbase还是一起搭配用？"></a>8.你们是想用kudu替换hbase还是一起搭配用？</h1><p>感觉这两个工具目前用来解决不同的问题，hbase还是用来做OLTP类存储跟Mysql类似，kudu则用来升级我们现有的数据分析数据流，主要还是OLAP的workload。</p>
<h1 id="9-Kudu支持随机增加列吗？"><a href="#9-Kudu支持随机增加列吗？" class="headerlink" title="9.Kudu支持随机增加列吗？"></a>9.Kudu支持随机增加列吗？</h1><p>只要不是primarykey的列，是可以随时增加的，而且不像mysql增加列时影响其他操作，kudu altertable是异步的，而且对性能影响不大。hbase是无schema的，所以可以成千上万个列，kudu不行的，列的数量也不能过多。我们目前也就试过30多列的，一些300+列的表还没有测试过。</p>
<h1 id="10-Kudu目前有稳定版吗"><a href="#10-Kudu目前有稳定版吗" class="headerlink" title="10.Kudu目前有稳定版吗"></a>10.Kudu目前有稳定版吗</h1><p>目前beta版本，不推荐现在在生产环境使用。(写此篇博客时(2017.2.22)已发布1.2.0版本)<br><img src="/2017/02/22/经验贴-kudu在小米的实践应用/../../../../images/kdm2.png" alt=""></p>
<h1 id="11-能否介绍一下小米使用kudu过程中踩过的坑？"><a href="#11-能否介绍一下小米使用kudu过程中踩过的坑？" class="headerlink" title="11.能否介绍一下小米使用kudu过程中踩过的坑？"></a>11.能否介绍一下小米使用kudu过程中踩过的坑？</h1><p>目前踩的坑都还在开发阶段，其实都不算什么，而且从大方向上看，我们还是相信kudu这种方式对比之前的数据流优势很明显，对吞吐不是非常高的应用，这种方案是发展方向。其实我们在老的数据流上碰到很多问题，之前提到的数据延迟，数据无序，多个组件之间的兼容性，数据无schema导致灌入数据时缺少验证，其实都希望引入kudu后能够解决。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h1&gt;&lt;p&gt;本文是小米工程师常冰琳于2016年10月25日晚10点在“大数据产业联合会”微信群分享的内容，整理分享给大家。&lt;/p&gt;
&lt;h1 id=&quot;2-小米使用kudu的背景&quot;&gt;&lt;a href=&quot;#2-小米使用kudu的背景&quot; class=&quot;headerlink&quot; title=&quot;2.小米使用kudu的背景&quot;&gt;&lt;/a&gt;2.小米使用kudu的背景&lt;/h1&gt;&lt;p&gt;小米大概在14年中开始和cloudera合作，作为kudu小白鼠用户，帮cloudera在生产环境验证kudu。kudu+Impala可以帮助我们解决实时数据的ad-hoc查询需求。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="NoSQL" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/NoSQL/"/>
    
    
      <category term="kudu" scheme="http://lzrlizhirong.github.io/tags/kudu/"/>
    
      <category term="NoSQL" scheme="http://lzrlizhirong.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>kudu学习资料总结</title>
    <link href="http://lzrlizhirong.github.io/2017/02/22/kudu%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%80%BB%E7%BB%93/"/>
    <id>http://lzrlizhirong.github.io/2017/02/22/kudu学习资料总结/</id>
    <published>2017-02-22T08:39:34.000Z</published>
    <updated>2017-02-22T09:51:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-kudu是什么-为什么要用kudu？"><a href="#1-kudu是什么-为什么要用kudu？" class="headerlink" title="1.kudu是什么,为什么要用kudu？"></a>1.kudu是什么,为什么要用kudu？</h1><p>Kudu是Todd Lipcon@Cloudera带头开发的存储系统，其整体应用模式和Hbase比较接近，即支持行级别的随机读写，并支持批量顺序检索功能。</p>
<p>Hadoop 生态系统发展到现在，存储层主要由HDFS和HBase两个系统把持着，一直没有太大突破。在追求高吞吐的批处理场景下，我们选用HDFS，在追求低延迟，有随机读写需求的场景下，我们选用HBase，那么是否存在一种系统，能结合两个系统优点，同时支持高吞吐率和低延迟呢？有人尝试修改HBase内核构造这样的系统，即保留HBase的数据模型，而将其底层存储部分改为纯列式存储（目前HBase只能算是列簇式存储引擎），但这种修改难度较大。 Kudu的出现解决这一难题。<br><a id="more"></a></p>
<p>Kudu是Cloudera开源的列式存储引擎，具有以下几个特点优势：</p>
<ul>
<li>C++语言开发</li>
<li>高效处理类OLAP负载</li>
<li>与MapReduce，Spark以及Hadoop生态系统中其他组件进行友好集成</li>
<li>可与Cloudera Impala集成，替代目前Impala常用的HDFS+Parquet组合</li>
<li>强大而灵活的一致性模型，让你选择在每个请求的基础上一致性的要求，包括严格的序列化的一致性选择</li>
<li>顺序写和随机写并存的场景下，仍能达到良好的性能</li>
<li>高可用，使用Raft协议保证数据高可靠存储，只要确保只要一半以上的副本总数可用</li>
<li>结构化数据模型</li>
<li>易于管理，Cloudera管理</li>
</ul>
<p>Kudu的出现，有望解决目前Hadoop生态系统难以解决的一大类问题，比如：</p>
<ul>
<li>流式实时计算结果的更新</li>
<li>时间序列相关应用，具体要求有：<ul>
<li>查询海量历史数据</li>
<li>查询个体数据，并要求快速返回</li>
<li>预测模型中，周期性更新模型，并根据历史数据快速做出决策</li>
</ul>
</li>
</ul>
<p>Kudu架构如下图所示：<br><img src="/2017/02/22/kudu学习资料总结/../../../../images/kd1.jpeg" alt=""></p>
<h1 id="2-kudu-的基本架构"><a href="#2-kudu-的基本架构" class="headerlink" title="2.kudu 的基本架构"></a>2.kudu 的基本架构</h1><h2 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h2><p>数据模型定义上，Kudu管理的是类似关系型数据库的结构化的表，表结构由类Sql的Schema进行定义，相比于HBase这样的NoSql类型的数据库，Kudu的行数据是由固定个数有明确类型定义的列组成，并且需要定义一个由一个或多个列组成的主键来对每行数据进行唯一索引，相比于传统的关系型数据库，kudu在索引上有更多的限制，比如暂时不支持二级索引，不支持主键的更新等等。</p>
<p>尽管表结构类似于关系型数据库，但是Kudu自身并不提供SQL类型的语法接口，而是由上层其他系统实现，比如目前通过Impala提供SQL语法支持。</p>
<p>Kudu底层API，主要面对简单的更新检索操作，Insert／Update／Delete等必须指定一个主键进行，而Scan检索类型的操作则支持条件过滤和投影等能力。</p>
<h2 id="集群架构"><a href="#集群架构" class="headerlink" title="集群架构"></a>集群架构</h2><p>Kudu的集群架构基本和HBase类似，采用主从结构，Master节点管理元数据，Tablet节点负责分片管理数据。</p>
<p>和HBase不同的是，Kudu没有借助于HDFS存储实际数据，而是自己直接在本地磁盘上管理分片数据，包括数据的Replication机制，kudu的Tablet server直接管理Master分片和Slave分片，自己通过raft协议解决一致性问题等，多个Slave可以同时提供数据读取服务，相对于HBase依托HDFS进行Region数据的管理方式，自主性会强一些，不过比如Tablet节点崩溃，数据的迁移拷贝工作等，也需要Kudu自己完成。</p>
<h2 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h2><p>因为数据是有严格Schema类型定义，所以Kudu底层可以使用列式存储的方案来提高存储和投影检索效率。</p>
<p>和HBase一样，Kudu也是通过Tablet的分区来支持水平扩展，与HBase不同的是，Kudu的分区策略除了支持按照Key Range来分区以外，还支持Hash based的策略，实际上，在主键上，Kudu可以混合使用这两种不同的策略。</p>
<p>Hash分区的策略在一些场合下可以更好的做到负载均衡，避免数据倾斜，但是它最大的问题就是分区数一旦确定就很难再调整，所以目前Kudu的分区数必须预先指定（对Range的分区策略也有这个要求，估计是先简单化统一处理），不支持动态分区分裂，合并等，因此表的分区一开始就需要根据负载和容量预先进行合理规划。</p>
<p>在处理随机写的效率问题方面，Kudu的基本流程和HBase的方案差不多，在内存中对每个Tablet分区维护一个MemRowSet来管理最新更新的数据，当尺寸超过一定大小后Flush到磁盘上形成DiskRowSet，多个DiskRowSet在适当的时候进行归并处理。</p>
<p>和HBase采用的LSM（LogStructured Merge）方案不同的是，Kudu对同一行的数据更新记录的合并工作，不是在查询的时候发生的（HBase会将多条更新记录先后Flush到不同的Storefile中，所以读取时需要扫描多个文件，比较rowkey，比较版本等），而是在更新的时候进行，在Kudu中一行数据只会存在于一个DiskRowSet中，避免读操作时的比较合并工作。那Kudu是怎么做到的呢？ 对于列式存储的数据文件，要原地变更一行数据是很困难的，所以在Kudu中，对于Flush到磁盘上的DiskRowSet（DRS）数据，实际上是分两种形式存在的，一种是Base的数据，按列式存储格式存在，一旦生成，就不再修改，另一种是Delta文件，存储Base数据中有变更的数据，一个Base文件可以对应多个Delta文件，这种方式意味着，插入数据时相比HBase，需要额外走一次检索流程来判定对应主键的数据是否已经存在。因此，Kudu是牺牲了写性能来换取读取性能的提升。<br><img src="/2017/02/22/kudu学习资料总结/../../../../images/kd2.png" alt=""><br>既然存在Delta数据，也就意味着数据查询时需要同时检索Base文件和Delta文件，这看起来和HBase的方案似乎又走到一起去了，不同的地方在于，Kudu的Delta文件与Base文件不同，不是按Key排序的，而是按被更新的行在Base文件中的位移来检索的，号称这样做，在定位Delta内容的时候，不需要进行字符串比较工作，因此能大大加快定位速度。但是无论如何，Delta文件的存在对检索速度的影响巨大。因此Delta文件的数量会需要控制，需要及时的和Base数据进行合并。由于Base文件是列式存储的，所以Delta文件合并时，可以有选择性的进行，比如只把变化频繁的列进行合并，变化很少的列保留在Delta文件中暂不合并，这样做也能减少不必要的IO开销。</p>
<p>除了Delta文件合并，DRS自身也会需要合并，为了保障检索延迟的可预测性（这一点是HBase的痛点之一，比如分区发生Major Compaction时，读写性能会受到很大影响），Kudu的compaction策略和HBase相比，有很大不同，kudu的DRS数据文件的compaction，本质上不是为了减少文件数量，实际上Kudu DRS默认是以32MB为单位进行拆分的，DRS的compaction并不减少文件数量，而是对内容进行排序重组，减少不同DRS之间key的overlap，进而在检索的时候减少需要参与检索的DRS的数量。<br><img src="/2017/02/22/kudu学习资料总结/../../../../images/kd3.png" alt=""><br>以32MB这样小的单位进行拆分，也是为了能够以有限的资源快速的完成compaction的任务，及时根据系统负载调整Compaction行为，而不至于像HBase一样，Major Compaction动作成为导致性能不稳定的一个重要因素。所以对于Kudu来说，IO操作可以是一个持续平缓的过程，这点对响应的可预测性至关重要。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总体来说，个人感觉，Kudu本质上是将性能的优化，寄托在以列式存储为核心的基础上，希望通过提高存储效率，加快字段投影过滤效率，降低查询时CPU开销等来提升性能。而其他绝大多数设计，都是为了解决在列式存储的基础上支持随机读写这样一个目的而存在的。比如类Sql的元数据结构，是提高列式存储效率的一个辅助手段，唯一主键的设定也是配合列式存储引入的定制策略，至于其他如Delta存储，compaction策略等都是在这个设定下为了支持随机读写，降低latency不确定性等引入的一些Tradeoff方案</p>
<p>官方测试结果上，如果是存粹的随机读写，或者单行的检索请求这类场景，由于这些Tradeoff的存在，HBASE的性能吞吐率是要优于Kudu不少的（2倍到4倍），kudu的优势还是在支持类SQL检索这样经常需要进行投影操作的批量顺序检索分析场合。</p>
<p>目前kudu还处在Incubator阶段，并且还没有成熟的线上应用（小米走在了前面，做了一些业务应用的尝试），在数据安全，备份，系统健壮性等方面也还要打个问号，所以是否使用kudu，什么场合，什么时间点使用，是个需要好好考量的问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-kudu是什么-为什么要用kudu？&quot;&gt;&lt;a href=&quot;#1-kudu是什么-为什么要用kudu？&quot; class=&quot;headerlink&quot; title=&quot;1.kudu是什么,为什么要用kudu？&quot;&gt;&lt;/a&gt;1.kudu是什么,为什么要用kudu？&lt;/h1&gt;&lt;p&gt;Kudu是Todd Lipcon@Cloudera带头开发的存储系统，其整体应用模式和Hbase比较接近，即支持行级别的随机读写，并支持批量顺序检索功能。&lt;/p&gt;
&lt;p&gt;Hadoop 生态系统发展到现在，存储层主要由HDFS和HBase两个系统把持着，一直没有太大突破。在追求高吞吐的批处理场景下，我们选用HDFS，在追求低延迟，有随机读写需求的场景下，我们选用HBase，那么是否存在一种系统，能结合两个系统优点，同时支持高吞吐率和低延迟呢？有人尝试修改HBase内核构造这样的系统，即保留HBase的数据模型，而将其底层存储部分改为纯列式存储（目前HBase只能算是列簇式存储引擎），但这种修改难度较大。 Kudu的出现解决这一难题。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="NoSQL" scheme="http://lzrlizhirong.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/NoSQL/"/>
    
    
      <category term="kudu" scheme="http://lzrlizhirong.github.io/tags/kudu/"/>
    
      <category term="NoSQL" scheme="http://lzrlizhirong.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>三识SpringBoot微框架--启动器Starter详解</title>
    <link href="http://lzrlizhirong.github.io/2017/02/22/%E4%B8%89%E8%AF%86SpringBoot%E5%BE%AE%E6%A1%86%E6%9E%B6-%E5%90%AF%E5%8A%A8%E5%99%A8Starter%E8%AF%A6%E8%A7%A3/"/>
    <id>http://lzrlizhirong.github.io/2017/02/22/三识SpringBoot微框架-启动器Starter详解/</id>
    <published>2017-02-22T02:44:39.000Z</published>
    <updated>2017-02-22T03:15:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>spring boot 配置时需要在pom文件中添加starter模块，那么starter是什么？有什么作用？分为哪几种？下面将进行详细讲解：</p>
<p>starter模块，简单的说，就是一系列的依赖包组合。例如web starter模块，就是包含了Spring Boot预定义的一些Web开发的常用依赖，如：</p>
<ul>
<li>spring-web, spring-webmvc         即Spring WebMvc框架</li>
<li>tomcat-embed-*            即内嵌Tomcat容器</li>
<li>jackson           即处理json数据</li>
<li>spring-*          即Spring框架</li>
<li>spring-boot-autoconfigure         即Spring Boot提供的自动配置功能</li>
</ul>
<p>换句话说，当你添加了相应的starter模块，就相当于添加了相应的所有必须的依赖包。<br>注：可以在引入对应的starter启动器后使用 mvn dependency:tree 查看引入的依赖关系。<br>如下图所示：<br><a id="more"></a><br><img src="/2017/02/22/三识SpringBoot微框架-启动器Starter详解/../../../../images/g112.png" alt=""></p>
<h1 id="spring-Boot应用启动器基本的一共有44种，具体如下："><a href="#spring-Boot应用启动器基本的一共有44种，具体如下：" class="headerlink" title="spring Boot应用启动器基本的一共有44种，具体如下："></a>spring Boot应用启动器基本的一共有44种，具体如下：</h1><p><strong>1）spring-boot-starter</strong><br>这是Spring Boot的核心启动器，包含了自动配置、日志和YAML。</p>
<p><strong>2）spring-boot-starter-actuator</strong><br>帮助监控和管理应用。</p>
<p><strong>3）spring-boot-starter-amqp</strong><br>通过spring-rabbit来支持AMQP协议（Advanced Message Queuing Protocol）。</p>
<p><strong>4）spring-boot-starter-aop</strong><br>支持面向切面的编程即AOP，包括spring-aop和AspectJ。</p>
<p><strong>5）spring-boot-starter-artemis</strong><br>通过Apache Artemis支持JMS的API（Java Message Service API）。</p>
<p><strong>6）spring-boot-starter-batch</strong><br>支持Spring Batch，包括HSQLDB数据库。</p>
<p><strong>7）spring-boot-starter-cache</strong><br>支持Spring的Cache抽象。</p>
<p><strong>8）spring-boot-starter-cloud-connectors</strong><br>支持Spring Cloud Connectors，简化了在像Cloud Foundry或Heroku这样的云平台上连接服务。</p>
<p><strong>9）spring-boot-starter-data-elasticsearch</strong><br>支持ElasticSearch搜索和分析引擎，包括spring-data-elasticsearch。</p>
<p><strong>10）spring-boot-starter-data-gemfire</strong><br>支持GemFire分布式数据存储，包括spring-data-gemfire。</p>
<p><strong>11）spring-boot-starter-data-jpa</strong><br>支持JPA（Java Persistence API），包括spring-data-jpa、spring-orm、hibernate。</p>
<p><strong>12）spring-boot-starter-data-MongoDB</strong><br>支持MongoDB数据，包括spring-data-mongodb。</p>
<p><strong>13）spring-boot-starter-data-rest</strong><br>通过spring-data-rest-webmvc，支持通过REST暴露Spring Data数据仓库。</p>
<p><strong>14）spring-boot-starter-data-solr</strong><br>支持Apache Solr搜索平台，包括spring-data-solr。</p>
<p><strong>15）spring-boot-starter-freemarker</strong><br>支持FreeMarker模板引擎。</p>
<p><strong>16）spring-boot-starter-groovy-templates</strong><br>支持Groovy模板引擎。</p>
<p><strong>17）spring-boot-starter-hateoas</strong><br>通过spring-hateoas支持基于HATEOAS的RESTful Web服务。</p>
<p><strong>18）spring-boot-starter-hornetq</strong><br>通过HornetQ支持JMS。</p>
<p><strong>19）spring-boot-starter-integration</strong><br>支持通用的spring-integration模块。</p>
<p><strong>20）spring-boot-starter-jdbc</strong><br>支持JDBC数据库。</p>
<p><strong>21）spring-boot-starter-jersey</strong><br>支持Jersey RESTful Web服务框架。</p>
<p><strong>22）spring-boot-starter-jta-atomikos</strong><br>通过Atomikos支持JTA分布式事务处理。</p>
<p><strong>23）spring-boot-starter-jta-bitronix</strong><br>通过Bitronix支持JTA分布式事务处理。</p>
<p><strong>24）spring-boot-starter-mail</strong><br>支持javax.mail模块。</p>
<p><strong>25）spring-boot-starter-mobile</strong><br>支持spring-mobile。</p>
<p><strong>26）spring-boot-starter-mustache</strong><br>支持Mustache模板引擎。</p>
<p><strong>27）spring-boot-starter-Redis</strong><br>支持Redis键值存储数据库，包括spring-redis。</p>
<p><strong>28）spring-boot-starter-security</strong><br>支持spring-security。</p>
<p><strong>29）spring-boot-starter-social-facebook</strong><br>支持spring-social-facebook</p>
<p><strong>30）spring-boot-starter-social-linkedin</strong><br>支持pring-social-linkedin</p>
<p><strong>31）spring-boot-starter-social-twitter</strong><br>支持pring-social-twitter</p>
<p><strong>32）spring-boot-starter-test</strong><br>支持常规的测试依赖，包括JUnit、Hamcrest、Mockito以及spring-test模块。</p>
<p><strong>33）spring-boot-starter-thymeleaf</strong><br>支持Thymeleaf模板引擎，包括与Spring的集成。</p>
<p><strong>34）spring-boot-starter-velocity</strong><br>支持Velocity模板引擎。</p>
<p><strong>35）spring-boot-starter-web</strong><br>支持全栈式Web开发，包括Tomcat和spring-webmvc。</p>
<p><strong>36）spring-boot-starter-websocket</strong><br>支持WebSocket开发。</p>
<p><strong>37）spring-boot-starter-ws</strong><br>支持Spring Web Services。</p>
<p><strong>Spring Boot应用启动器面向生产环境的还有2种，具体如下：</strong></p>
<p><strong>1）spring-boot-starter-actuator</strong><br>增加了面向产品上线相关的功能，比如测量和监控。</p>
<p><strong>2）spring-boot-starter-remote-shell</strong><br>增加了远程ssh shell的支持。</p>
<p><strong>最后，Spring Boot应用启动器还有一些替换技术的启动器，具体如下：</strong></p>
<p><strong>1）spring-boot-starter-jetty</strong><br>引入了Jetty HTTP引擎（用于替换Tomcat）。</p>
<p><strong>2）spring-boot-starter-log4j</strong><br>支持Log4J日志框架。</p>
<p><strong>3）spring-boot-starter-logging
</strong>引入了Spring Boot默认的日志框架Logback。</p>
<p><strong>4）spring-boot-starter-tomcat</strong><br>引入了Spring Boot默认的HTTP引擎Tomcat。</p>
<p><strong>5）spring-boot-starter-undertow</strong><br>引入了Undertow HTTP引擎（用于替换Tomcat）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;spring boot 配置时需要在pom文件中添加starter模块，那么starter是什么？有什么作用？分为哪几种？下面将进行详细讲解：&lt;/p&gt;
&lt;p&gt;starter模块，简单的说，就是一系列的依赖包组合。例如web starter模块，就是包含了Spring Boot预定义的一些Web开发的常用依赖，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;spring-web, spring-webmvc         即Spring WebMvc框架&lt;/li&gt;
&lt;li&gt;tomcat-embed-*            即内嵌Tomcat容器&lt;/li&gt;
&lt;li&gt;jackson           即处理json数据&lt;/li&gt;
&lt;li&gt;spring-*          即Spring框架&lt;/li&gt;
&lt;li&gt;spring-boot-autoconfigure         即Spring Boot提供的自动配置功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;换句话说，当你添加了相应的starter模块，就相当于添加了相应的所有必须的依赖包。&lt;br&gt;注：可以在引入对应的starter启动器后使用 mvn dependency:tree 查看引入的依赖关系。&lt;br&gt;如下图所示：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://lzrlizhirong.github.io/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://lzrlizhirong.github.io/tags/SpringBoot/"/>
    
      <category term="微服务" scheme="http://lzrlizhirong.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
</feed>
