<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李志荣的博客</title>
  <subtitle>日积硅步，终将大成</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="http://lzrlizhirong.github.io/"/>
  <updated>2017-02-10T09:56:10.000Z</updated>
  <id>http://lzrlizhirong.github.io/</id>
  
  <author>
    <name>李志荣</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ES-5.0.2-学习(3)--第一个ES例子</title>
    <link href="http://lzrlizhirong.github.io/2017/02/10/ES-5-0-2-%E5%AD%A6%E4%B9%A0-3-%E7%AC%AC%E4%B8%80%E4%B8%AAES%E4%BE%8B%E5%AD%90/"/>
    <id>http://lzrlizhirong.github.io/2017/02/10/ES-5-0-2-学习-3-第一个ES例子/</id>
    <published>2017-02-10T09:35:28.000Z</published>
    <updated>2017-02-10T09:56:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>想要知道ElasticSearch是如何使用的，最快的方式就是通过一个简单的例子，第一个例子将会包括基本概念如索引、搜索、和聚合等，需求是关于公司管理员工的一些业务。<br><a id="more"></a></p>
<h1 id="员工文档索引"><a href="#员工文档索引" class="headerlink" title="员工文档索引"></a>员工文档索引</h1><p>业务首先需要存储员工数据。这将采取一个员工文档的形式：单个文档表示单个员工。在Elasticsearch中存储数据的行为称为索引，但是在索引文档之前，我们需要决定在哪里存储它。<br>在Elasticsearch中，文档属于某个类型，这些类型位于索引中。可以绘制一些（粗略）与传统关系数据库的对比：</p>
<ul>
<li><strong>Relational DB  ⇒ Databases ⇒ Tables ⇒ Rows      ⇒ Columns</strong></li>
<li><strong>Elasticsearch  ⇒ Indices   ⇒ Types  ⇒ Documents ⇒ Fields</strong></li>
</ul>
<p>Elasticsearch集群可以包含多个索引（数据库），这些索引又包含多个类型（表）。这些类型包含多个文档（行），每个文档都有多个字段（列）。<br>你可能已经注意到，在Elasticsearch的上下文中，索引被重载了几个含义。如下：</p>
<ul>
<li><strong>索引（名词）：</strong>正如前面所解释的那样，索引就像传统的关系数据库中的数据库一样。它是存储相关文档的地方。index的复数形式是indices或indexes。</li>
<li><strong>索引（动词）：</strong>索引一个文档是将一个文档存储在索引（名词）中，以便它可以检索和查询。它很像插入关键词SQL。此外，如果文档已经存在，新的文档将取代旧的。</li>
<li><strong>倒排索引：</strong>关系数据库中增加一个索引，如B-树索引，对特定列为了提高数据检索的速度。Elasticsearch和Lucene提供相同目的的索引称为倒排索引。<br>默认情况下，文档中的每个字段索引（有一个倒排索引）这样的搜索。一个没有倒排索引字段不可搜索</li>
</ul>
<p>因此我们的员工目录，我们需要处理如下事情：</p>
<ul>
<li>索引的每个文档，包含每个员工的所有细节。</li>
<li>每个文档都属于<strong><em><code>employee</code></em></strong>类型。</li>
<li>类型都包含在<strong><em><code>megacop</code></em></strong>索引中。</li>
<li>该索引将驻留我们Elasticsearch集群内。</li>
</ul>
<p>下面通过命令去索引第一个员工：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">PUT /megacorp/employee/1</div><div class="line">&#123;</div><div class="line">    &quot;first_name&quot; : &quot;John&quot;,</div><div class="line">    &quot;last_name&quot; :  &quot;Smith&quot;,</div><div class="line">    &quot;age&quot; :        25,</div><div class="line">    &quot;about&quot; :      &quot;I love to go rock climbing&quot;,</div><div class="line">    &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意 <strong><em><code>/megacorp/employee/1</code></em></strong> 包含的信息:</p>
<blockquote>
<p><strong><em><code>megacorp：</code></em></strong>索引的名称<br><strong><em><code>emplogee：</code></em></strong>类型的名称<br><strong><em><code>1：</code></em></strong>员工的id</p>
</blockquote>
<p>成功执行返回的是一个JSON文本，包含所有关于该员工的信息。</p>
<p><strong>注意：</strong></p>
<ol>
<li>如果执行过程中失败了，可能存在的原因是elasticsearch默认配置中不允许自动创建索引，所以我们可以先简单在elasticsearch.yml配置文件添加action.auto_create_index：true，允许自动创建索引。</li>
<li>没有必要首先执行任何管理任务，如创建一个索引或指定每个字段所包含的数据类型。我们可以直接索引一个文档。Elasticsearch附带默认的一切，因此所有必要的管理任务都会使用默认值在后台处理。</li>
</ol>
<p>在目录中添加更多的员工：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">PUT /megacorp/employee/2</div><div class="line">&#123;</div><div class="line">    &quot;first_name&quot; :  &quot;Jane&quot;,</div><div class="line">    &quot;last_name&quot; :   &quot;Smith&quot;,</div><div class="line">    &quot;age&quot; :         32,</div><div class="line">    &quot;about&quot; :       &quot;I like to collect rock albums&quot;,</div><div class="line">    &quot;interests&quot;:  [ &quot;music&quot; ]</div><div class="line">&#125;</div><div class="line"></div><div class="line">PUT /megacorp/employee/3</div><div class="line">&#123;</div><div class="line">    &quot;first_name&quot; :  &quot;Douglas&quot;,</div><div class="line">    &quot;last_name&quot; :   &quot;Fir&quot;,</div><div class="line">    &quot;age&quot; :         35,</div><div class="line">    &quot;about&quot;:        &quot;I like to build cabinets&quot;,</div><div class="line">    &quot;interests&quot;:  [ &quot;forestry&quot; ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="检索文档"><a href="#检索文档" class="headerlink" title="检索文档"></a>检索文档</h1><p>现在我们有一些数据存储在Elasticsearch中，我们可以开始处理这个应用程序的业务需求。第一个要求是检索单个员工数据的能力。<br>这在Elasticsearch中很容易。我们只需执行HTTP GET请求并指定文档的地址——索引，类型和ID。使用这三个信息，我们可以返回原始的JSON文档，并且响应包含有关文档的一些元数据，以及Douglas Fir的原始JSON文档作为_source字段：<br><img src="/2017/02/10/ES-5-0-2-学习-3-第一个ES例子/../../../../images/e51.png" alt=""><br>可以查看：<a href="http://lizhirong.club/2017/02/10/ES-5-0-2-%E5%AD%A6%E4%B9%A0-4-%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2/" target="_blank" rel="external">ES-5.0.2-学习(4)–简单搜索</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想要知道ElasticSearch是如何使用的，最快的方式就是通过一个简单的例子，第一个例子将会包括基本概念如索引、搜索、和聚合等，需求是关于公司管理员工的一些业务。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>ES-5.0.2-学习(4)--简单搜索</title>
    <link href="http://lzrlizhirong.github.io/2017/02/10/ES-5-0-2-%E5%AD%A6%E4%B9%A0-3-%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2/"/>
    <id>http://lzrlizhirong.github.io/2017/02/10/ES-5-0-2-学习-3-简单搜索/</id>
    <published>2017-02-10T08:28:55.000Z</published>
    <updated>2017-02-10T09:55:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="空搜索"><a href="#空搜索" class="headerlink" title="空搜索"></a>空搜索</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET /_search</div></pre></td></tr></table></figure>
<p><img src="/2017/02/10/ES-5-0-2-学习-3-简单搜索/../../../../images/e41.png" alt=""><br><a id="more"></a><br>注：<strong>以下操作均是在kibana中，如图所示</strong><br><strong>hits：</strong></p>
<blockquote>
<ol>
<li>total 总数</li>
<li>hits 前10条数据</li>
<li>hits 数组中的每个结果都包含_index、_type和文档的_id字段，被加入到_source字段中这意味着在搜索结果中我们将可以直接使用全部文档。</li>
<li>每个节点都有一个_score字段，这是相关性得分(relevance score)，它衡量了文档与查询的匹配程度。默认的，返回的结果中关联性最大的文档排在首位；这意味着，它是按照_score降序排列的。没有指定任何查询，所以所有文档的相关性是一样的，因此所有结果的_score都是取得一个中间值1。  </li>
</ol>
</blockquote>
<p><strong>took：</strong>整个搜索请求花费的毫秒数。<br><strong>_shards：</strong>节点告诉我们参与查询的分片数（total字段），有多少是成功的（successful），有多少的是失败的（failed）。<br><strong>time_out：</strong>告诉我们查询超时与否。一般的，搜索请求不会超时。如果响应速度比完整的结果更重要，你可以定义timeout参数为10或者10ms（10毫秒），或者1s（1秒）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET /_search?timeout=10ms</div></pre></td></tr></table></figure></p>
<p>Elasticsearch将返回在请求超时前收集到的结果。<br><strong>注意：</strong> <strong><em>timeout不会停止执行查询，它仅仅告诉你目前顺利返回结果的节点然后关闭连接。在后台，其他分片可能依旧执行查询，尽管结果已经被发送。<br>使用超时是因为对于你的业务需求来说非常重要，而不是因为你想中断执行长时间运行的查询。</em></strong></p>
<h1 id="多索引和多类别"><a href="#多索引和多类别" class="headerlink" title="多索引和多类别"></a>多索引和多类别</h1><p>在所有索引的所有类型中搜索：<em>/_search</em><br>在索引gb的所有类型中搜索：<em>/gb/_search</em><br>在索引gb和us的所有类型中搜索：<em>/gb,us/_search</em><br>在以g或u开头的索引的所有类型中搜索：/g*,u*/_search<br>在索引gb的类型user中搜索：<em>/gb/user/_search</em><br>在索引gb和us的类型为user和tweet中搜索：<em>/gb,us/user,tweet/_search</em><br>在所有索引的user和tweet中搜索：<em>/_all/user,tweet/_search</em><br>当你搜索包含单一索引时，Elasticsearch转发搜索请求到这个索引的主分片或每个分片的复制分片上，然后聚集每个分片的结果。搜索包含多个索引也是同样的方式——只不过会有更多的分片被关联。</p>
<h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><p>如果你想每页显示5个结果，页码从1到3，那请求如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">GET /_search?size=5</div><div class="line">GET /_search?size=5&amp;from=5</div><div class="line">GET /_search?size=5&amp;from=10</div></pre></td></tr></table></figure></p>
<p>应该当心分页太深或者一次请求太多的结果。结果在返回前会被排序。但是记住一个搜索请求常常涉及多个分片。每个分片生成自己排好序的结果，它们接着需要集中起来排序以确保整体排序正确。<br>现在假设我们请求第1000页——结果10001到10010。工作方式都相同，不同的是每个分片都必须产生顶端的10010个结果。然后请求节点排序这50050个结果并丢弃50040个！</p>
<h1 id="简易搜索"><a href="#简易搜索" class="headerlink" title="简易搜索"></a>简易搜索</h1><p>search API有两种表单：一种是“简易版”的查询字符串(query string)将所有参数通过查询字符串定义，另一种版本使用JSON完整的表示请求体(request body)，这种富搜索语言叫做结构化查询语句（DSL）。<br>查询字符串搜索对于在命令行下运行特定情况下查询特别有用。例如这个语句查询所有类型为tweet并在tweet字段中包含elasticsearch字符的文档：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET /_all/tweet/_search?q=tweet:elasticsearch</div></pre></td></tr></table></figure></p>
<p>下一个语句查找name字段中包含”john”和tweet字段包含”mary”的结果。实际的查询只需要：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">+name:john +tweet:mary</div></pre></td></tr></table></figure></p>
<p>但是url编码需要将查询字符串参数变得更加神秘：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET /_search?q=%2Bname%3Ajohn+%2Btweet%3Amary</div></pre></td></tr></table></figure></p>
<p>“+”前缀表示语句匹配条件必须被满足。类似的”-“前缀表示条件必须不被满足。所有条件如果没有+或-表示是可选的——匹配越多，相关的文档就越多。</p>
<h1 id="all字段"><a href="#all字段" class="headerlink" title="_all字段"></a>_all字段</h1><p>返回包含”mary”字符的所有文档的简单搜索：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET /_search?q=mary</div></pre></td></tr></table></figure></p>
<p>当你索引一个文档，Elasticsearch把所有字符串字段值连接起来放在一个大字符串中，它被索引为一个特殊的字段_all。例如，当索引这个文档：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;tweet&quot;:    &quot;However did I manage before Elasticsearch?&quot;,</div><div class="line">    &quot;date&quot;:     &quot;2014-09-14&quot;,</div><div class="line">    &quot;name&quot;:     &quot;Mary Jones&quot;,</div><div class="line">    &quot;user_id&quot;:  1</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这好比我们增加了一个叫做_all的额外字段值：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;However did I manage before Elasticsearch? 2014-09-14 Mary Jones 1&quot;</div></pre></td></tr></table></figure></p>
<p>若没有指定字段，查询字符串搜索（即q=xxx）使用_all字段搜索。</p>
<h1 id="更复杂的语句"><a href="#更复杂的语句" class="headerlink" title="更复杂的语句"></a>更复杂的语句</h1><p>下一个搜索的语句：<br>_all field</p>
<ul>
<li>name字段包含”mary”或”john”</li>
<li>date晚于2014-09-10</li>
<li>_all字段包含”aggregations”或”geo”</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">+name:(mary john) +date:&gt;2014-09-10 +(aggregations geo)</div></pre></td></tr></table></figure>
<p>编码后的查询字符串变得不太容易阅读<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?q=%2Bname%3A(mary+john)+%2Bdate%3A%3E2014-09-10+%2B(aggregations+geo)</div></pre></td></tr></table></figure></p>
<p>就像你上面看到的例子，简单查询字符串搜索惊人的强大。允许我们简洁明快的表示复杂的查询。这对于命令行下一次性查询或者开发模式下非常有用。<br>然而，你可以看到简洁带来了隐晦和调试困难。而且它很脆弱——查询字符串中一个细小的语法错误，像-、:、/或”错位就会导致返回错误而不是结果。<br>最后，查询字符串搜索允许任意用户在索引中任何一个字段上运行潜在的慢查询语句，可能暴露私有信息甚至使你的集群瘫痪。<br>取而代之的，生产环境我们一般依赖全功能的请求体搜索API，它能完成前面所有的事情，甚至更多。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;空搜索&quot;&gt;&lt;a href=&quot;#空搜索&quot; class=&quot;headerlink&quot; title=&quot;空搜索&quot;&gt;&lt;/a&gt;空搜索&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;GET /_search&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2017/02/10/ES-5-0-2-学习-3-简单搜索/../../../../images/e41.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>ES-5.0.2-学习(3)——单台服务器部署多个节点</title>
    <link href="http://lzrlizhirong.github.io/2017/02/10/ES-5-0-2-%E5%AD%A6%E4%B9%A0-3-%E2%80%94%E2%80%94%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E5%A4%9A%E4%B8%AA%E8%8A%82%E7%82%B9/"/>
    <id>http://lzrlizhirong.github.io/2017/02/10/ES-5-0-2-学习-3-——台服务器部署多个节点/</id>
    <published>2017-02-10T07:49:18.000Z</published>
    <updated>2017-02-10T08:16:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>一般情况下单台服务器只会部署一个ElasticSearch node，但是在学习过程中，很多情况下会需要实现ElasticSearch的分布式效果，所以需要启动多个节点，但是学习开发环境（不想开多个虚拟机实现多个服务器的效果），所以就想着在一台服务器上部署多个结点（下文以2个结点作为例子），两个节点分别称为实例一、二。<br><a id="more"></a></p>
<h1 id="1、首先将elasticsearch-5-0-2文件夹再复制一份"><a href="#1、首先将elasticsearch-5-0-2文件夹再复制一份" class="headerlink" title="1、首先将elasticsearch-5.0.2文件夹再复制一份"></a>1、首先将elasticsearch-5.0.2文件夹再复制一份</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp -R elasticsearch-5.0.2 elasticsearch-5.0.2-node-2</div></pre></td></tr></table></figure>
<h1 id="2、主要工作就是修改elasticsearch-yml配置文件。"><a href="#2、主要工作就是修改elasticsearch-yml配置文件。" class="headerlink" title="2、主要工作就是修改elasticsearch.yml配置文件。"></a>2、主要工作就是修改elasticsearch.yml配置文件。</h1><p>实例二：config目录下的elasticsearch.yml内容<br>将node.name: node-1 修改为 node-2</p>
<h1 id="3、分别开启两个节点"><a href="#3、分别开启两个节点" class="headerlink" title="3、分别开启两个节点"></a>3、分别开启两个节点</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/elasticsearch</div></pre></td></tr></table></figure>
<h1 id="4、查询是否成功"><a href="#4、查询是否成功" class="headerlink" title="4、查询是否成功"></a>4、查询是否成功</h1><p>浏览器访问 <em><a href="http://localhost:9200/_cluster/health?pretty" target="_blank" rel="external">http://localhost:9200/_cluster/health?pretty</a></em><br>若出现类似如下则表示成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"></div><div class="line">    &quot;cluster_name&quot;: &quot;es-lzr&quot;,</div><div class="line">    &quot;status&quot;: &quot;green&quot;,</div><div class="line">    &quot;timed_out&quot;: false,</div><div class="line">    &quot;number_of_nodes&quot;: 2,</div><div class="line">    &quot;number_of_data_nodes&quot;: 2,</div><div class="line">    &quot;active_primary_shards&quot;: 17,</div><div class="line">    &quot;active_shards&quot;: 34,</div><div class="line">    &quot;relocating_shards&quot;: 0,</div><div class="line">    &quot;initializing_shards&quot;: 0,</div><div class="line">    &quot;unassigned_shards&quot;: 0,</div><div class="line">    &quot;delayed_unassigned_shards&quot;: 0,</div><div class="line">    &quot;number_of_pending_tasks&quot;: 0,</div><div class="line">    &quot;number_of_in_flight_fetch&quot;: 0,</div><div class="line">    &quot;task_max_waiting_in_queue_millis&quot;: 0,</div><div class="line">    &quot;active_shards_percent_as_number&quot;: 100.0</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>也可以通过Kibana查看节点效果 <em><a href="http://localhost:5601" target="_blank" rel="external">http://localhost:5601</a></em> 账号 <em>elastic</em> 密码 <em>changeme</em><br><img src="/2017/02/10/ES-5-0-2-学习-3-——台服务器部署多个节点/../../../../images/e31.png" alt=""></p>
<h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><p>1.如果修改了配置文件的 <em>http.port、transport.tcp.port</em>项，一定要将各个节点的值设置不同，否则会出现占用的情况。正常如果不修改，默认会分配值。<br>2.示例二开启时，实例一报警告（实际操作中可以忽略）：</p>
<blockquote>
<p>[2016-12-11T18:06:43,678][WARN ][o.e.d.z.ElectMasterService] [node-1] value for setting “discovery.zen.minimum_master_nodes” is too low. This can result in data loss! Please set it to at least a quorum of master-eligible nodes (current value: [-1], total number of master-eligible nodes used for publishing in this round: [2])<br>是因为默认情况下 <em>discovery.zen.minimum_master_nodes=1</em> 一台服务器只能有一个主节点，所以在实例二的配置文件中可以添加 <em>node.master: false</em> 。<br>3.示例二不能开启，报如下错误：<br>[2016-12-11T16:53:02,711][INFO ][o.e.d.z.ZenDiscovery     ] [node-2] failed to send join request to master [{node-1}{vP19PMOyT2ilJKRAqgn78w}{jDULCExERXGHp4VXpbyuJA}{127.0.0.1}{127.0.0.1:9300}], reason [RemoteTransportException[[node-1][127.0.0.1:9300][internal:discovery/zen/join]]; nested: IllegalArgumentException[can’t add node {node-2}{vP19PMOyT2ilJKRAqgn78w}{qhDDVzwZQ0GXZXhIMmpGKA}{127.0.0.1}{127.0.0.1:9301}, found existing node {node-1}{vP19PMOyT2ilJKRAqgn78w}{jDULCExERXGHp4VXpbyuJA}{127.0.0.1}{127.0.0.1:9300} with the same id but is a different node instance]; ]<br>[2016-12-11T16:53:02,911][INFO ][o.e.x.m.e.Exporters      ] [node-2] skipping exporter [default_local] as it isn’t ready yet<br>[2016-12-11T16:53:02,912][ERROR][o.e.x.m.AgentService     ] [node-2] exception when exporting documents<br>org.elasticsearch.xpack.monitoring.exporter.ExportException: exporters are either not ready or faulty<br>    at org.elasticsearch.xpack.monitoring.exporter.Exporters.export(Exporters.java:188) ~[x-pack-5.0.2.jar:5.0.2]<br>    at org.elasticsearch.xpack.monitoring.AgentService$ExportingWorker.run(AgentService.java:208) [x-pack-5.0.2.jar:5.0.2]<br>    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]</p>
</blockquote>
<p>是因为复制的elasticsearch文件夹下包含了data文件中示例一的节点数据，需要把示例二data文件下的文件清空。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般情况下单台服务器只会部署一个ElasticSearch node，但是在学习过程中，很多情况下会需要实现ElasticSearch的分布式效果，所以需要启动多个节点，但是学习开发环境（不想开多个虚拟机实现多个服务器的效果），所以就想着在一台服务器上部署多个结点（下文以2个结点作为例子），两个节点分别称为实例一、二。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/tags/elasticsearch/"/>
    
      <category term="kibana" scheme="http://lzrlizhirong.github.io/tags/kibana/"/>
    
  </entry>
  
  <entry>
    <title>为了保持逼格，不要停止写作</title>
    <link href="http://lzrlizhirong.github.io/2017/02/10/%E4%B8%BA%E4%BA%86%E4%BF%9D%E6%8C%81%E9%80%BC%E6%A0%BC%EF%BC%8C%E4%B8%8D%E8%A6%81%E5%81%9C%E6%AD%A2%E5%86%99%E4%BD%9C/"/>
    <id>http://lzrlizhirong.github.io/2017/02/10/为了保持逼格，不要停止写作/</id>
    <published>2017-02-10T02:52:09.000Z</published>
    <updated>2017-02-10T06:32:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>“逼格”一词，网络上常见的解释是“装逼的格调”，听起来有一些嘲讽的味道。但我认为，“逼格”应该是一种大隐隐于市的淡定，一种出淤泥而不染的清高，一种观望世事变迁而不为之动容的气质，一种身处外部世界的混乱却依然能听从内部世界的召唤的能力。<br><a id="more"></a><br>你觉得我这番解释是装逼也无所谓，因为我的理想一直以来就是做一个有逼格的人。</p>
<p>追求逼格的过程不是一蹴而就的，更不是一劳永逸的，而更像是逆水行舟，一刻都万万不可以松懈。忍不住让我想起柏邦妮说过的一句话：“哪有什么胜利可言，挺住就是一切。”</p>
<p>所以，追求逼格可以被看做是一种坚持不懈的抗争，一种保护内部世界的完整饱足而不被外部世界侵蚀的抗争。这种抗争，本身就足以令人肃然起敬。如此看来，逼格恰恰存在于追求逼格的过程之中。</p>
<p>保护内部世界之完整饱足的方法有很多，而我独爱写作。我一直信奉，虽然不是每个人都可以把写作当成自己的职业，但所有人都一定可以把写作当成自己的一种状态。</p>
<p>在我眼中，世间的写作不过两种，对内的和对外的。今天来聊聊我理想中的写作吧。</p>
<p>对内的写作，是内部世界在巩固自己的版图，是往下扎根。典型的形式包括写日记——你是作者，你也是唯一的读者。如果，你在落笔的当下决定，读者除了你自己还可以包括其他人，即使再少数的其他人都好，那都不能被归为“对内的写作”了。当然，如果你已经完成了写作的这个部分，只不过在之后的阅读过程中觉得，公布出来被他人看见也无妨，那又另当别论。这里讨论的，只是写作这个动作进行之时的内心向度。</p>
<p>对内的写作应该是繁杂凌乱的、忠诚于自己所念所想的，应该完完全全原汁原味地呈现一个自由的内心世界，所以没有必要进行自我审查。想起以前学摄影的时候，教授叮嘱我们拿起相机就一定要无所顾忌、疯狂地拍，把照片导出来之后才开始进行筛选，千万不要把创作和编辑的过程混在一块儿，千万不要在拍的时候就缩手缩脚，或者直接在相机上删掉所谓的不满意的照片。同理，对内的写作应该是零编辑、只关注在创作之上的，这是至关重要的资本原始积累，所以格局一定要大。</p>
<p>对内的写作是一个认识自己的过程，所以要诚实地面对内心的所有情感，尤其是那些不足为外人道也的阴暗的部分。比如说，跟你走得很近的人里有一个你很鄙视的人，但是你又不得不装作和ta相处起来很愉快，那你不妨可以在对内的写作过程中梳理这种情感。挖掘自己的邪恶天赋，并承认它们，是帮助自己成长为一个丰富的人的必经之路。</p>
<p>对内的写作也是一个用来讨好自己的过程。在我以前还很热衷于写日记的时候，我的日记本是一本红色软皮抄。我喜欢它封面的颜色，更喜欢它米色的空白内页。内页纸张的触感很好，而且不会晕墨，真的是难能可贵的品质。我喜欢用墨蓝或者深绿的墨水写日记，尤其喜欢用英雄616钢笔。偏好的场所包括图书馆的静音区和自己的房间。我尤其喜欢物理意义上的下笔，虽然有的时候也在电脑上写日记，但总感觉动笔的信息量更大，毕竟笔迹可以直白地展示当时的心理状态，而且我总喜欢看自己在不同时期的笔迹的变化。这些癖好让我觉得对内的写作是一种仪式，是一种褒奖，是一种可以独享的时光。那本红色软皮抄用完之后我仿佛丧失了写日记的兴趣，因为再也没有找到媲美它的日记本了，不得不说，很可惜。</p>
<p>对外的写作，是内部世界朝外部的扩张。我个人主张它必须是功利的。所谓功利，是指功效和实用性，说直白一点就是，既然你选择了对外写作，就应该对你传播的这些信息负责，让它们尽可能高效地被读者所接收。所以对外的写作应该是方便理解的、易于消化的。要呈现这种特性，在对外写作的过程中就务必有相当一部分的精力花在编辑之上。如果说对内的写作单纯需要用心，对外的写作则更需要用脑。</p>
<p>写到这里，不得不提写作与朗读之间的密不可分的关系。</p>
<p>我在上写作课的时候，教授给我们讲过这样一个有趣的故事。说是有一个写作界的大神，看人很准，曾经试过一连好几年的普利策获奖者都是他曾经相中过表扬过的新人。于是有人去问大神，他眼光为什么这么厉害。大神说，我去编辑部里面看啊，看到那些写稿子的时候嘴里在念念有词的人，我就知道他们有戏了。</p>
<p>教授给我们讲这个故事，意图是要让我们爱上朗读自己的作品，不但如此，更要用朗读的方式去体会其他优秀的写作。朗读，实际上是一场非常严肃的检阅。从编辑方面的效用来看，在朗读的过程中，很容易就能挑出错别字、语病、累赘用词等等小毛病，也可以发现段落间逻辑衔接有没有跳脱这样的结构上的问题。</p>
<p>曾经有人评价我的行文是轻松的、不费力的，大概也是因为我总是以口语化的要求来规范自己的写作吧。也有人曾经给我提意见说，你能不能不要念，专心写，因为你的文笔远胜于你的口头表达，要念出来的话等于限制了你文采的发挥。我当然承认，为了口语化理念的贯彻，不得不让渡出一部分高深的辞藻和逻辑。但口语化的理念可以让写作者更多地采用主谓宾的语序，减少繁杂的修饰语，抛弃冗长的句式结构，实际上是一种更生活、更亲近的表达方式。这种亲近可以让写作者的内部世界建立与外部世界友好的交流，而信息的顺畅流通恰好又可以维持一个更饱满鲜活的内部世界。出于这种理念，我个人也非常不喜欢故作傲慢和刻意艰涩的写作，总让人感到一种封闭和敌意。</p>
<p>我本科的最后一年花了整整两个学期在上写作课，但结果却是对写作像一个新朋友一样。 我并不恐慌，相反的，我对这个变化感到无比的兴奋。想到之前写作课教授给我们援引过的一句话，那是美国著名诗人、作家卡尔·桑德堡在72岁的时候说的： </p>
<blockquote>
<p>I’m still studying verbs and the mystery of how they connect nouns. I am more suspicious of adjectives than at any other time in all my born days. “我仍旧在学习动词，以及它们和名词连接的奥秘。现在的我比任何时候都更怀疑形容词。” </p>
</blockquote>
<p>就像是一个幼儿园小朋友在堆积木的时候的有趣的发现。真是一种有美感的状态。</p>
<p>我希望，我也能活出那样的一天。</p>
<p>转自新浪微博 <em><a href="http://weibo.com/rainfieldfifi" target="_blank" rel="external">@恢复吃素的F小姐。</a></em></p>
<p>说一个我认为最有逼格的故事吧：<br>某日跟某死党微信对话如下:<br><img src="/2017/02/10/为了保持逼格，不要停止写作/../../../../images/W1.png" alt=""><img src="/2017/02/10/为了保持逼格，不要停止写作/../../../../images/W2.png" alt=""><img src="/2017/02/10/为了保持逼格，不要停止写作/../../../../images/W3.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“逼格”一词，网络上常见的解释是“装逼的格调”，听起来有一些嘲讽的味道。但我认为，“逼格”应该是一种大隐隐于市的淡定，一种出淤泥而不染的清高，一种观望世事变迁而不为之动容的气质，一种身处外部世界的混乱却依然能听从内部世界的召唤的能力。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂文" scheme="http://lzrlizhirong.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="写作" scheme="http://lzrlizhirong.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>ES-5.0.2-学习(2)——Kibana+X-Pack介绍使用</title>
    <link href="http://lzrlizhirong.github.io/2017/02/09/ES-5-0-2-%E5%AD%A6%E4%B9%A0-1-%E2%80%94%E2%80%94Kibana-X-Pack%E4%BB%8B%E7%BB%8D%E4%BD%BF%E7%94%A8/"/>
    <id>http://lzrlizhirong.github.io/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/</id>
    <published>2017-02-09T11:20:34.000Z</published>
    <updated>2017-02-10T08:09:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>Kibana是一个为 ElasticSearch 提供的数据分析的 Web 接口。可使用它对日志进行高效的搜索、可视化、分析等各种操作。Kibana目前最新的版本5.0.2，回顾一下Kibana 3和Kibana 4的界面。<br>下面的图展示的是Kibana 3的界面，所有的仪表盘直接放置主页。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e21.png" alt=""><br><a id="more"></a><br>下面的图展示的是Kibana 4的界面，和Kibana 3最大的区别是将原来的主体分成三个部分，分别是发现页、可视化、仪表盘。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e22.png" alt=""><br>下面是目前Kibana 5最新版本的界面。相比较Kibana 4除了界面的风格变化，最主要是功能栏上添加了Timeline、Management和Dev Tools选项。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e23.png" alt=""></p>
<h1 id="Discover"><a href="#Discover" class="headerlink" title="Discover"></a>Discover</h1><blockquote>
<p><em>You can interactively explore your data from the Discover page. You have access to every document in every index that matches the selected index pattern. You can submit search queries, filter the search results, and view document data. You can also see the number of documents that match the search query and get field value statistics. If a time field is configured for the selected index pattern, the distribution of documents over time is displayed in a histogram at the top of the page.</em></p>
</blockquote>
<p>从发现页可以交互地探索ES的数据。可以访问与所选索引模式相匹配的每一个索引中的每一个文档。您可以提交搜索查询、筛选搜索结果和查看文档数据。还可以看到匹配搜索查询和获取字段值统计的文档的数量。如果一个时间字段被配置为所选择的索引模式，则文档的分布随着时间的推移显示在页面顶部的直方图中。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e24.png" alt=""></p>
<h1 id="Visualize"><a href="#Visualize" class="headerlink" title="Visualize"></a>Visualize</h1><blockquote>
<p>Visualize enables you to create visualizations of the data in your Elasticsearch indices. You can then build dashboards that display related visualizations.Kibana visualizations are based on Elasticsearch queries. By using a series of Elasticsearch aggregations to extract and process your data, you can create charts that show you the trends, spikes, and dips you need to know about.You can create visualizations from a search saved from Discover or start with a new search query.</p>
</blockquote>
<p>可视化能使你创造你的Elasticsearch指标数据的可视化。然后你可以建立仪表板显示相关的可视化。Kibana的可视化是基于Elasticsearch查询。通过一系列的Elasticsearch聚合提取和处理您的数据，您可以创建图表显示你需要知道的关于趋势，峰值和骤降。您可以从搜索保存的搜索中创建可视化或从一个新的搜索查询开始。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e25.png" alt=""></p>
<h1 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h1><blockquote>
<p>A Kibana dashboard displays a collection of saved visualizations. You can arrange and resize the visualizations as needed and save dashboards so they be reloaded and shared.</p>
</blockquote>
<p>一个仪表板显示Kibana保存的一系列可视化。你可以根据需要安排和调整可视化，并保存仪表盘，可以被加载和共享。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e26.png" alt=""></p>
<h1 id="Monitoring"><a href="#Monitoring" class="headerlink" title="Monitoring"></a>Monitoring</h1><p>从图中可以发现，默认Kibana是没有该选项的。其实，Monitoring是由X-Pack集成提供的。</p>
<blockquote>
<p>The X-Pack monitoring components enable you to easily monitor Elasticsearch through Kibana. You can view cluster health and performance in real time as well as analyze past cluster, index, and node metrics. In addition, you can monitor the performance of Kibana itself.When you install X-Pack on your cluster, a monitoring agent runs on each node to collect and index metrics from Elasticsearch. With X-Pack installed in Kibana, you can then view the monitoring data through a set of specialized dashboards.</p>
</blockquote>
<p>该X-pack监控组件使您可以通过Kibana轻松地监控ElasticSearch。您可以实时查看集群的健康和性能，以及分析过去的集群、索引和节点度量。此外，您可以监视Kibana本身性能。当你安装X-pack在群集上，监控代理运行在每个节点上收集和指数指标从Elasticsearch。安装在X-pack在Kibana上，您可以查看通过一套专门的仪表板监控数据。<br>回顾安装过程：<a href="https://lzrlizhirong.github.io/2017/02/09/ES-5-0-2-%E5%AD%A6%E4%B9%A0-1-%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85Elasticsearch%E3%80%81Kibana%E5%92%8CX-Pack/">ES-5-0-2-学习-1-——安装Elasticsearch、Kibana和X-Pack/</a>，可以发现，在安装X-pack的时候分别在ElasticSearch根目录和Kibana根目录下操作。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e27.png" alt=""></p>
<h1 id="Graph"><a href="#Graph" class="headerlink" title="Graph"></a>Graph</h1><blockquote>
<p>The X-Pack graph capabilities enable you to discover how items in an Elasticsearch index are related. You can explore the connections between indexed terms and see which connections are the most meaningful. This can be useful in a variety of applications, from fraud detection to recommendation engines.For example, graph exploration could help you uncover website vulnerabilities that hackers are targeting so you can harden your website. Or, you might provide graph-based personalized recommendations to your e-commerce customers.X-Pack provides a simple, yet powerful graph exploration API, and an interactive graph visualization tool for Kibana. Both work with out of the box with existing Elasticsearch indices—you don’t need to store any additional data to use the X-Pack graph features.</p>
</blockquote>
<p>X-Pack图的能力使你发现一个Elasticsearch索引项是如何相关联的。你可以探索索引条款之间的连接，看看哪些连接是最有意义的。从欺诈检测到推荐引擎，对各种应用中这都是有用的，例如，图的探索可以帮助你发现网站上黑客的目标的漏洞，所以你可以硬化你的网站。或者，您可以为您的电子商务客户提供基于图表的个性化推荐。X-pack提供简单，但功能强大的图形开发API，和Kibana交互式图形可视化工具。使用X-pack图有工作与开销与现有Elasticsearch指标你不需要任何额外的数据存储的特征。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e28.png" alt=""></p>
<h1 id="Timelion"><a href="#Timelion" class="headerlink" title="Timelion"></a>Timelion</h1><blockquote>
<p>Timelion is a time series data visualizer that enables you to combine totally independent data sources within a single visualization. It’s driven by a simple expression language you use to retrieve time series data, perform calculations to tease out the answers to complex questions, and visualize the results.</p>
</blockquote>
<p>Timelion是一个时间序列数据的可视化，可以结合在一个单一的可视化完全独立的数据源。它是由一个简单的表达式语言驱动的，你用来检索时间序列数据，进行计算，找出复杂的问题的答案，并可视化的结果。<br>这个功能由一系列的功能函数组成，同样的查询的结果，也可以通过Dashboard显示查看。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e29.png" alt=""></p>
<h1 id="Management"><a href="#Management" class="headerlink" title="Management"></a>Management</h1><blockquote>
<p>The Management application is where you perform your runtime configuration of Kibana, including both the initial setup and ongoing configuration of index patterns, advanced settings that tweak the behaviors of Kibana itself, and the various “objects” that you can save throughout Kibana such as searches, visualizations, and dashboards.This section is pluginable, so in addition to the out of the box capabitilies, packs such as X-Pack can add additional management capabilities to Kibana.<br>管理中的应用是在你执行你的运行时配置kibana，包括初始设置和指标进行配置模式，高级设置，调整自己的行为和Kibana，各种“对象”，你可以查看保存在整个Kibana的内容如发现页，可视化和仪表板。<br>这部分是pluginable，除此之外，X-pack可以给Kibana增加额外的管理能力。<br>You can use X-Pack Security to control what Elasticsearch data users can access through Kibana.When you install X-Pack, Kibana users have to log in. They need to have the kibana_user role as well as access to the indices they will be working with in Kibana.If a user loads a Kibana dashboard that accesses data in an index that they are not authorized to view, they get an error that indicates the index does not exist. X-Pack Security does not currently provide a way to control which users can load which dashboards.</p>
</blockquote>
<p>你可以使用X-pack安全控制哪些用户可以访问Elasticsearch数据通过Kibana。当你安装X-pack，Kibana用户登录。他们需要有kibana_user作用以及获得的指标，他们将在Kibana的工作。如果用户加载Kibana仪表板，访问数据的一个索引，他们未被授权查看，他们得到一个错误，表明指数不存在。X-pack安全目前并不提供一种方法来控制哪些用户可以负荷的仪表板。<br><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e210.png" alt=""></p>
<h1 id="Dev-Tools"><a href="#Dev-Tools" class="headerlink" title="Dev Tools"></a>Dev Tools</h1><p>原先的交互式控制台Sense，使用户方便的通过浏览器直接与Elasticsearch进行交互。从Kibana 5开始改名并直接内建在Kibana，就是Dev Tools选项。<br>注意如果是Kibana 5以上，不能通过以下命令安装Sense。(踩过的坑)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/kibana plugin --install elastic/sense</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/kibana-plugin install elastic/sense instead</div></pre></td></tr></table></figure></p>
<p><img src="/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e211.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>内容比较简单，主要是对Kibana工具的整体功能总结，方便接下来对ElasticSearch 5的学习，其中X-Pack主要是添加身份权限的验证，以及原先需要安装其他各种Marvel、Hand等各种功能插件添加到Kibana上使用才能使用的功能。<br>学习链接：<br>X-Pack：<a href="https://www.elastic.co/guide/en/x-pack/current/xpack-introduction.html" target="_blank" rel="external">https://www.elastic.co/guide/en/x-pack/current/xpack-introduction.html</a><br>Kibana：<a href="https://www.elastic.co/guide/en/kibana/current/introduction.html" target="_blank" rel="external">https://www.elastic.co/guide/en/kibana/current/introduction.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kibana是一个为 ElasticSearch 提供的数据分析的 Web 接口。可使用它对日志进行高效的搜索、可视化、分析等各种操作。Kibana目前最新的版本5.0.2，回顾一下Kibana 3和Kibana 4的界面。&lt;br&gt;下面的图展示的是Kibana 3的界面，所有的仪表盘直接放置主页。&lt;br&gt;&lt;img src=&quot;/2017/02/09/ES-5-0-2-学习-1-——Kibana-X-Pack介绍使用/../../../../images/e21.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/tags/elasticsearch/"/>
    
      <category term="kibana" scheme="http://lzrlizhirong.github.io/tags/kibana/"/>
    
      <category term="x-pack" scheme="http://lzrlizhirong.github.io/tags/x-pack/"/>
    
  </entry>
  
  <entry>
    <title>Markdown——入门指南</title>
    <link href="http://lzrlizhirong.github.io/2017/02/09/Markdown%E2%80%94%E2%80%94%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://lzrlizhirong.github.io/2017/02/09/Markdown——入门指南/</id>
    <published>2017-02-09T09:48:48.000Z</published>
    <updated>2017-02-10T08:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导语："><a href="#导语：" class="headerlink" title="导语："></a>导语：</h1><p>Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的 HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。</p>
<p><img src="/2017/02/09/Markdown——入门指南/../../../../images/1.png" alt="1"><br><a id="more"></a></p>
<h1 id="一、认识-Markdown"><a href="#一、认识-Markdown" class="headerlink" title="一、认识 Markdown"></a>一、认识 Markdown</h1><p>在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持 Mou 这类 Markdown 工具的直接上传。</p>
<h3 id="Markdown-官方文档"><a href="#Markdown-官方文档" class="headerlink" title="Markdown 官方文档"></a>Markdown 官方文档</h3><p>这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式阐述这些语法的具体用法。</p>
<ul>
<li><em><a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">创始人 John Gruber 的 Markdown 语法说明</a></em></li>
<li><em><a href="http://wowubuntu.com/markdown/#list" target="_blank" rel="external">Markdown 中文版语法说明</a></em></li>
</ul>
<h3 id="使用-Markdown-的优点"><a href="#使用-Markdown-的优点" class="headerlink" title="使用 Markdown 的优点"></a>使用 Markdown 的优点</h3><ul>
<li>专注你的文字内容而不是排版样式，安心写作。</li>
<li>轻松的导出 HTML、PDF 和本身的 .md 文件。</li>
<li>纯文本内容，兼容所有的文本编辑器与字处理软件。</li>
<li>随时修改你的文章版本，不必像字处理软件生成若干文件版本导致混乱。</li>
<li>可读、直观、学习成本低。</li>
</ul>
<h3 id="使用-Markdown-的误区"><a href="#使用-Markdown-的误区" class="headerlink" title="使用 Markdown 的误区"></a>使用 Markdown 的误区</h3><blockquote>
<p><em>We believe that writing is about content, about what you want to say – not about fancy formatting.<br>    我们坚信写作写的是内容，所思所想，而不是花样格式。<br>    — Ulysses for Mac</em></p>
</blockquote>
<ul>
<li>Markdown 旨在简洁、高效，也由于 Markdown 的易读易写，人们用不同的编程语言实现了多个版本的解析器和生成器，这就导致了目前不同的 Markdown 工具集成了不同的功能（基础功能大致相同），例如流程图与时序图，复杂表格与复杂公式的呈现，虽然功能的丰富并没有什么本质的缺点，但终归有些背离初衷，何况在编写的过程中很费神，不如使用专业的工具撰写来的更有效率，所以如果你需实现复杂功能，专业的图形界面工具会更加方便。<strong>当然，如果你对折腾这些不同客户端对 Markdown 的定制所带来高阶功能感到愉悦的话，那也是无可厚非的。</strong></li>
</ul>
<h1 id="二、Markdown-语法的简要规则"><a href="#二、Markdown-语法的简要规则" class="headerlink" title="二、Markdown 语法的简要规则"></a>二、Markdown 语法的简要规则</h1><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p><img src="/2017/02/09/Markdown——入门指南/../../../../images/2.png" alt="标题"><br>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。</p>
<blockquote>
<p>#一级标题</p>
<p>##二级标题</p>
<p>###三级标题</p>
</blockquote>
<p>以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格。<br><img src="/2017/02/09/Markdown——入门指南/../../../../images/3.jpeg" alt=""></p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>如果你需要引用一小段别处的句子，那么就要用引用的格式。<br>只需要在文本前加入 &gt; 这种尖括号（大于号）即可<br><img src="/2017/02/09/Markdown——入门指南/../../../../images/34.jpeg" alt=""></p>
<h3 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h3><p><img src="/2017/02/09/Markdown——入门指南/../../../../images/5.jpeg" alt=""><br>注：使用markdown写文章，插入图片的格式为图片名称，这里要说的是链接地址怎么写。<br>对于hexo，有两种方式：<br>使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。<br>使用微博图床，地址<a href="http://weibotuchuang.sinaapp.com/，将图片拖入区域中，会生成图片的URL，这就是链接地址。" target="_blank" rel="external">http://weibotuchuang.sinaapp.com/，将图片拖入区域中，会生成图片的URL，这就是链接地址。</a></p>
<h3 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h3><p>Markdown 的粗体和斜体也非常简单，用两个 <em> 包含一段文本就是粗体的语法，用一个 </em> 包含一段文本就是斜体的语法。<br>例如：<strong>这里是粗体</strong> <em>这里是斜体</em> </p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是我觉得 Markdown 比较累人的地方，例子如下：<br><img src="/2017/02/09/Markdown——入门指南/../../../../images/7.png" alt=""><br>这种语法生成的表格如下：<br><img src="/2017/02/09/Markdown——入门指南/../../../../images/6.png" alt=""></p>
<h3 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h3><p>如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown下实现也非常简单，只需要用两个 <code>把中间的代码包裹起来。</code>this is code`<br><img src="/2017/02/09/Markdown——入门指南/../../../../images/8.jpeg" alt=""><br>使用 tab 键即可缩进。</p>
<h3 id="块代码"><a href="#块代码" class="headerlink" title="块代码"></a>块代码</h3><p>两种方式<br>1.代码每一行的前面都加4个空格或一个tab<br>2.第一行和最后一行都是3个，中间的行是代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">this is code block 1</div><div class="line">this is code block 2</div></pre></td></tr></table></figure></p>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>分割线的语法只需要三个 * 号，例如：</p>
<hr>
<h1 id="三、相关推荐"><a href="#三、相关推荐" class="headerlink" title="三、相关推荐:"></a>三、相关推荐:</h1><p>图床工具用来上传图片获取 URL 地址</p>
<ul>
<li><a href="http://droplr.com/" target="_blank" rel="external">Droplr</a></li>
<li><a href="http://www.getcloudapp.com/" target="_blank" rel="external">Cloudapp</a></li>
<li><a href="https://itunes.apple.com/cn/app/yi-xiang/id672522335?mt=12&amp;uo=4" target="_blank" rel="external">ezShare for Mac</a></li>
<li><a href="http://weibotuchuang.sinaapp.com/" target="_blank" rel="external">围脖图床修复计划</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;导语：&quot;&gt;&lt;a href=&quot;#导语：&quot; class=&quot;headerlink&quot; title=&quot;导语：&quot;&gt;&lt;/a&gt;导语：&lt;/h1&gt;&lt;p&gt;Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的 HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2017/02/09/Markdown——入门指南/../../../../images/1.png&quot; alt=&quot;1&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="markdown" scheme="http://lzrlizhirong.github.io/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://lzrlizhirong.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>ES-5.0.2-学习(1)——安装Elasticsearch、Kibana和X-Pack</title>
    <link href="http://lzrlizhirong.github.io/2017/02/09/ES-5-0-2-%E5%AD%A6%E4%B9%A0-1-%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85Elasticsearch%E3%80%81Kibana%E5%92%8CX-Pack/"/>
    <id>http://lzrlizhirong.github.io/2017/02/09/ES-5-0-2-学习-1-——安装Elasticsearch、Kibana和X-Pack/</id>
    <published>2017-02-09T08:39:09.000Z</published>
    <updated>2017-02-10T08:09:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装准备："><a href="#安装准备：" class="headerlink" title="安装准备："></a>安装准备：</h1><p>安装Elasticsearch唯一的要求是安装官方新版的Java，包括对应的Jdk。</p>
<h1 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h1><p>首先到官网下载最新版本的Elasticsearch压缩包。<br>可以使用命令，注意将最新的可用的下载链接填入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/  elasticsearch-5.0.2.zip</div><div class="line">unzip elasticsearch-5.0.2.zip</div><div class="line">cd elasticsearch-5.0.2</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="运行Elasticsearch"><a href="#运行Elasticsearch" class="headerlink" title="运行Elasticsearch"></a>运行Elasticsearch</h1><p>Elasticsearch已经准备就绪，执行以下命令可在前台启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/elasticsearch</div></pre></td></tr></table></figure></p>
<p>如果想在后台以守护进程模式运行，添加-d参数。<br>打开另一个终端进行测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl &apos;http://localhost:9200/?pretty&apos;</div></pre></td></tr></table></figure></p>
<p>你能看到以下返回信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;name&quot;: &quot;vP19PMO&quot;,</div><div class="line">&quot;cluster_name&quot;: &quot;elasticsearch&quot;,</div><div class="line">&quot;cluster_uuid&quot;: &quot;IMKMfkMsSrKODIYg5gxgeQ&quot;,</div><div class="line">&quot;version&quot;: &#123;</div><div class="line">    &quot;number&quot;: &quot;5.0.2&quot;,</div><div class="line">    &quot;build_hash&quot;: &quot;f6b4951&quot;,</div><div class="line">    &quot;build_date&quot;: &quot;2016-11-24T10:07:18.101Z&quot;,</div><div class="line">    &quot;build_snapshot&quot;: false,</div><div class="line">    &quot;lucene_version&quot;: &quot;6.2.1&quot;</div><div class="line">&#125;,</div><div class="line">&quot;tagline&quot;: &quot;You Know, for Search&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这说明你的ELasticsearch集群已经启动并且正常运行。</p>
<h1 id="安装Kiabna"><a href="#安装Kiabna" class="headerlink" title="安装Kiabna"></a>安装Kiabna</h1><p>Kibana是一个为 ElasticSearch 提供的数据分析的 Web 接口。可使用它对日志进行高效的搜索、可视化、分析等各种操作。<br>首先到官网下载最新版本的Kiabna压缩包。<br>可以使用如下命令，注意将最新的可用的下载链接填入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-5.1.1-linux-x86_64.tar.gz</div><div class="line">sha1sum kibana-5.1.1-linux-x86_64.tar.gz</div><div class="line">tar -xzf kibana-5.1.1-linux-x86_64.tar.gz</div><div class="line">cd kibana/</div></pre></td></tr></table></figure></p>
<p>注意：<br><em><a href="https://www.elastic.co/downloads/kibana" target="_blank" rel="external">https://www.elastic.co/downloads/kibana</a> 可以在该地址获取下载链接，一定要选择对于系统和版本。
</em>按照文档的要求，一般情况下kibana的版本必须和Elasticsearch安装的版本一致。</p>
<h1 id="安装X-Pack"><a href="#安装X-Pack" class="headerlink" title="安装X-Pack"></a>安装X-Pack</h1><p>X-Pack是一个Elastic Stack的扩展，将安全，警报，监视，报告和图形功能包含在一个易于安装的软件包中。在Elasticsearch 5.0.0之前，您必须安装单独的Shield，Watcher和Marvel插件才能获得在X-Pack中所有的功能。</p>
<h2 id="下载前提"><a href="#下载前提" class="headerlink" title="下载前提"></a>下载前提</h2><p>Elasticsearch 5.0.2<br>Kibana 5.0.2</p>
<h2 id="Elasticsearch下载X-Pack"><a href="#Elasticsearch下载X-Pack" class="headerlink" title="Elasticsearch下载X-Pack"></a>Elasticsearch下载X-Pack</h2><p>在Es的根目录（每个节点），运行 <em>bin/elasticsearch-plugin</em> 进行安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/elasticsearch-plugin install x-pack/Users/root/Downloads/markdown/763363-20161209181135163-1294099591.png</div></pre></td></tr></table></figure></p>
<p><img src="/2017/02/09/ES-5-0-2-学习-1-——安装Elasticsearch、Kibana和X-Pack/../../../../images/e1.png" alt=""><br>安装过程中跳出选项现在y即可。<br>如果你在Elasticsearch已禁用自动索引的创建，在<em>elasticsearch.yml</em>配置<em>action.auto_create_index</em>允许X-pack创造以下指标：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">action.auto_create_index: .security,.monitoring*,.watches,.triggered_watches,.watcher-history*</div></pre></td></tr></table></figure></p>
<p>运行Elasticsearch。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/elasticsearch</div></pre></td></tr></table></figure></p>
<h2 id="Kibana下载X-Pack"><a href="#Kibana下载X-Pack" class="headerlink" title="Kibana下载X-Pack"></a>Kibana下载X-Pack</h2><p>在Kibana根目录运行 <em>bin/kibana-plugin</em> 进行安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/kibana-plugin install x-pack/Users/root/Downloads/markdown/1.png</div></pre></td></tr></table></figure></p>
<p><img src="/2017/02/09/ES-5-0-2-学习-1-——安装Elasticsearch、Kibana和X-Pack/../../../../images/e2.png" alt=""><br>安装过程会比较久，耐心等待。<br>运行Kibana。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/kibana</div></pre></td></tr></table></figure></p>
<h2 id="验证X-Pack"><a href="#验证X-Pack" class="headerlink" title="验证X-Pack"></a>验证X-Pack</h2><p>在浏览器上输入：<em><a href="http://localhost:5601/" target="_blank" rel="external">http://localhost:5601/</a></em> ，可以打开Kibana，此时需要输入用户名和密码登录，默认分别是 <em>elastic</em> 和 <em>changeme</em>。</p>
<h1 id="安装参考："><a href="#安装参考：" class="headerlink" title="安装参考："></a>安装参考：</h1><p><em>每个操作系统安装Elasticsearch的文件选择不同，参考：<a href="https://www.elastic.co/downloads/elasticsearch，选择对应的文件下载。" target="_blank" rel="external">https://www.elastic.co/downloads/elasticsearch，选择对应的文件下载。</a>
</em>安装Kiabna需要根据操作系统做选择，参考：<a href="https://www.elastic.co/guide/en/kibana/current/install.html，选择对应的文件下载。" target="_blank" rel="external">https://www.elastic.co/guide/en/kibana/current/install.html，选择对应的文件下载。</a><br>*安装X-Pack需要根据Elasticsearch安装不同的方式提供不同的安装方法，参考：<a href="https://www.elastic.co/guide/en/x-pack/5.0/installing-xpack.html#installing-xpack。" target="_blank" rel="external">https://www.elastic.co/guide/en/x-pack/5.0/installing-xpack.html#installing-xpack。</a></p>
<h1 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><p>在刚接触Elasticsearch的时候，会有很多名词不能理解，或者不知道其中的关系。其中很多是为不同版本的Elasticsearch而存在的。</p>
<h2 id="Marvel"><a href="#Marvel" class="headerlink" title="Marvel"></a>Marvel</h2><p>Marvel插件：在簇中从每个节点汇集数据。这个插件必须每个节点都得安装。<br>Marvel是Elasticsearch的管理和监控工具，在开发环境下免费使用。它包含了Sense。</p>
<h2 id="Sense"><a href="#Sense" class="headerlink" title="Sense"></a>Sense</h2><p>交互式控制台，使用户方便的通过浏览器直接与Elasticsearch进行交互。</p>
<h2 id="Hand"><a href="#Hand" class="headerlink" title="Hand"></a>Hand</h2><p>在学习Elasticsearch的过程中，必不可少需要通过一些工具查看es的运行状态以及数据。如果都是通过rest请求，未免太过麻烦，而且也不够人性化。此时，Head插件可以实现基本信息的查看，rest请求的模拟，数据的检索等等。</p>
<h2 id="X-pack"><a href="#X-pack" class="headerlink" title="X-pack"></a>X-pack</h2><p>x-pack是elasticsearch的一个扩展包，将安全，警告，监视，图形和报告功能捆绑在一个易于安装的软件包中，也是官方推荐的。</p>
<h2 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h2><p>kibana是一个与elasticsearch一起工作的开源的分析和可视化的平台。使用kibana可以查询、查看并与存储在elasticsearch索引的数据进行交互操作。使用kibana能执行高级的数据分析，并能以图表、表格和地图的形式查看数据。<br>kibana使得理解大容量的数据变得非常容易。它非常简单，基于浏览器的接口使我们能够快速的创建和分享显示elasticsearch查询结果实时变化的仪表盘。<br><strong><em>在Elasticsearch 5版本之前，一般都是通过安装Kibana，而后将Marvel、Hand等各种功能插件添加到Kibana上使用。在Elasticsearch 5版本之后，一般情况下只需要安装一个官方推荐的X-pack扩展包即可。</em></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装准备：&quot;&gt;&lt;a href=&quot;#安装准备：&quot; class=&quot;headerlink&quot; title=&quot;安装准备：&quot;&gt;&lt;/a&gt;安装准备：&lt;/h1&gt;&lt;p&gt;安装Elasticsearch唯一的要求是安装官方新版的Java，包括对应的Jdk。&lt;/p&gt;
&lt;h1 id=&quot;安装Elasticsearch&quot;&gt;&lt;a href=&quot;#安装Elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;安装Elasticsearch&quot;&gt;&lt;/a&gt;安装Elasticsearch&lt;/h1&gt;&lt;p&gt;首先到官网下载最新版本的Elasticsearch压缩包。&lt;br&gt;可以使用命令，注意将最新的可用的下载链接填入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/  elasticsearch-5.0.2.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;unzip elasticsearch-5.0.2.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd elasticsearch-5.0.2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://lzrlizhirong.github.io/tags/elasticsearch/"/>
    
      <category term="kibana" scheme="http://lzrlizhirong.github.io/tags/kibana/"/>
    
      <category term="x-pack" scheme="http://lzrlizhirong.github.io/tags/x-pack/"/>
    
  </entry>
  
</feed>
